<?xml version="1.0" encoding="UTF-8"?>
<robot generated="20190108 00:19:55.941" generator="Robot 3.0.4 (Python 2.7.14 on linux2)">
<suite source="/home/guchen/workspace/AXOS" id="s1" name="AXOS">
<suite source="/home/guchen/workspace/AXOS/AXOS-automation" id="s1-s1" name="AXOS-automation">
<suite source="/home/guchen/workspace/AXOS/AXOS-automation/Milan" id="s1-s1-s1" name="Milan">
<suite source="/home/guchen/workspace/AXOS/AXOS-automation/Milan/ST_Test_Cases" id="s1-s1-s1-s1" name="ST Test Cases">
<suite source="/home/guchen/workspace/AXOS/AXOS-automation/Milan/ST_Test_Cases/System" id="s1-s1-s1-s1-s1" name="System">
<suite source="/home/guchen/workspace/AXOS/AXOS-automation/Milan/ST_Test_Cases/System/HW_Support" id="s1-s1-s1-s1-s1-s1" name="HW Support">
<suite source="/home/guchen/workspace/AXOS/AXOS-automation/Milan/ST_Test_Cases/System/HW_Support/MTU" id="s1-s1-s1-s1-s1-s1-s1" name="MTU">
<suite source="/home/guchen/workspace/AXOS/AXOS-automation/Milan/ST_Test_Cases/System/HW_Support/MTU/testcase" id="s1-s1-s1-s1-s1-s1-s1-s1" name="Testcase">
<kw type="setup" name="test_setup">
<kw name="Log" library="BuiltIn">
<arguments>
<arg>Enter setup</arg>
</arguments>
<msg timestamp="20190108 00:19:57.169" level="INFO">Enter setup</msg>
<status status="PASS" endtime="20190108 00:19:57.169" starttime="20190108 00:19:57.168"></status>
</kw>
<kw name="Log" library="BuiltIn">
<arguments>
<arg>service_point_provision for uplink side</arg>
</arguments>
<msg timestamp="20190108 00:19:57.176" level="INFO">service_point_provision for uplink side</msg>
<status status="PASS" endtime="20190108 00:19:57.176" starttime="20190108 00:19:57.170"></status>
</kw>
<kw name="service_point_prov" library="keyword_service_model">
<tags>
<tag>@author=CindyGao</tag>
</tags>
<doc>Description: provision for service_point</doc>
<arguments>
<arg>service_point_list1</arg>
</arguments>
<kw type="for" name="${service_point} IN [ @{service_model.${service_point_list}} ]">
<kw type="foritem" name="${service_point} = service_point1">
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${service_model.${service_point}.device}</arg>
</arguments>
<assign>
<var>${device}</var>
</assign>
<msg timestamp="20190108 00:19:57.181" level="INFO">${device} = eutA</msg>
<status status="PASS" endtime="20190108 00:19:57.181" starttime="20190108 00:19:57.180"></status>
</kw>
<kw name="Log" library="BuiltIn">
<arguments>
<arg>****** uplink service provision for ${device} ${service_point} ******</arg>
</arguments>
<msg timestamp="20190108 00:19:57.182" level="INFO">****** uplink service provision for eutA service_point1 ******</msg>
<status status="PASS" endtime="20190108 00:19:57.183" starttime="20190108 00:19:57.182"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>service_point_${service_model.${service_point}.type}_prov</arg>
<arg>${device}</arg>
<arg>${service_point}</arg>
</arguments>
<kw name="service_point_eth_prov" library="keyword_service_model">
<tags>
<tag>@author=CindyGao</tag>
</tags>
<doc>Description: provision for eth type service point (This keyword is only internal use, CANNOT be used in TCs)</doc>
<arguments>
<arg>${device}</arg>
<arg>${service_point}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<arguments>
<arg>****** [${device}] ethernet port basic provision for ${service_point} ******</arg>
</arguments>
<msg timestamp="20190108 00:19:57.187" level="INFO">****** [eutA] ethernet port basic provision for service_point1 ******</msg>
<status status="PASS" endtime="20190108 00:19:57.187" starttime="20190108 00:19:57.186"></status>
</kw>
<kw type="for" name="${port_key} IN [ @{service_model.${service_point}.member} ]">
<kw type="foritem" name="${port_key} = interface1">
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${service_model.${service_point}.member.${port_key}}</arg>
</arguments>
<assign>
<var>${port}</var>
</assign>
<msg timestamp="20190108 00:19:57.191" level="INFO">${port} = 1/1/x3</msg>
<status status="PASS" endtime="20190108 00:19:57.191" starttime="20190108 00:19:57.189"></status>
</kw>
<kw name="Log" library="BuiltIn">
<arguments>
<arg>****** provision port ${port} role and parameter ******</arg>
</arguments>
<msg timestamp="20190108 00:19:57.192" level="INFO">****** provision port 1/1/x3 role and parameter ******</msg>
<status status="PASS" endtime="20190108 00:19:57.193" starttime="20190108 00:19:57.192"></status>
</kw>
<kw name="prov_interface_ethernet" library="keyword_command">
<tags>
<tag>@author=BlairWang</tag>
</tags>
<doc>configure on interface</doc>
<arguments>
<arg>${device}</arg>
<arg>${port}</arg>
<arg>${service_model.${service_point}.attribute.interface_role}</arg>
<arg>ENABLED</arg>
</arguments>
<kw name="Axos Cli With Error Check" library="keyword_common">
<tags>
<tag>@author=dfarwell</tag>
</tags>
<doc>Sends a CLI command to DUT and confirms response has no errors, if there is no prompt in your topo file this may need to be adjusted</doc>
<arguments>
<arg>${device}</arg>
<arg>configure</arg>
</arguments>
<kw name="Cli" library="caferobot.command.adapter.CliAdapter">
<doc>Execute command on the specific connection and get the output of it</doc>
<arguments>
<arg>${DUT}</arg>
<arg>${CMD}</arg>
<arg>prompt=${devices.${DUT}.prompt}</arg>
<arg>timeout=${TIMEOUT}</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190108 00:20:00.735" level="INFO">Created ShellDevice(eutA)</msg>
<msg timestamp="20190108 00:20:00.748" level="INFO">send session_command, cmd=configure, prompt={'#': None}, timeout=30, newline=None, retry=1, timeout_exception=1, exclude_prompt=None</msg>
<msg timestamp="20190108 00:20:01.228" level="INFO">session_command result=configure
Enter configuration commands, one per line. End with CNTL/Z.
Current configuration users:
sysadmin ssh (cli from 10.200.201.26) on since 2019-01-07 23:52:17 terminal mode
NGPON2X4(config)</msg>
<msg timestamp="20190108 00:20:01.228" level="INFO">${res} = configure
Enter configuration commands, one per line. End with CNTL/Z.
Current configuration users:
sysadmin ssh (cli from 10.200.201.26) on since 2019-01-07 23:52:17 terminal mode
NGPON2X4(config...</msg>
<status status="PASS" endtime="20190108 00:20:01.229" starttime="20190108 00:19:57.197"></status>
</kw>
<kw name="Should Not Contain Any" library="BuiltIn">
<doc>Fails if ``container`` contains one or more of the ``*items``.</doc>
<arguments>
<arg>${res}</arg>
<arg>Invalid</arg>
<arg>syntax error</arg>
<arg>Aborted:</arg>
<arg>Error:</arg>
</arguments>
<status status="PASS" endtime="20190108 00:20:01.233" starttime="20190108 00:20:01.231"></status>
</kw>
<status status="PASS" endtime="20190108 00:20:01.233" starttime="20190108 00:19:57.196"></status>
</kw>
<kw name="Axos Cli With Error Check" library="keyword_common">
<tags>
<tag>@author=dfarwell</tag>
</tags>
<doc>Sends a CLI command to DUT and confirms response has no errors, if there is no prompt in your topo file this may need to be adjusted</doc>
<arguments>
<arg>${device}</arg>
<arg>interface ethernet ${interface}</arg>
</arguments>
<kw name="Cli" library="caferobot.command.adapter.CliAdapter">
<doc>Execute command on the specific connection and get the output of it</doc>
<arguments>
<arg>${DUT}</arg>
<arg>${CMD}</arg>
<arg>prompt=${devices.${DUT}.prompt}</arg>
<arg>timeout=${TIMEOUT}</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190108 00:20:01.239" level="INFO">send session_command, cmd=interface ethernet 1/1/x3, prompt={'#': None}, timeout=30, newline=None, retry=1, timeout_exception=1, exclude_prompt=None</msg>
<msg timestamp="20190108 00:20:01.809" level="INFO">session_command result=interface ethernet 1/1/x3
NGPON2X4(config-ethernet-1/1/x3)</msg>
<msg timestamp="20190108 00:20:01.810" level="INFO">${res} = interface ethernet 1/1/x3
NGPON2X4(config-ethernet-1/1/x3)</msg>
<status status="PASS" endtime="20190108 00:20:01.810" starttime="20190108 00:20:01.237"></status>
</kw>
<kw name="Should Not Contain Any" library="BuiltIn">
<doc>Fails if ``container`` contains one or more of the ``*items``.</doc>
<arguments>
<arg>${res}</arg>
<arg>Invalid</arg>
<arg>syntax error</arg>
<arg>Aborted:</arg>
<arg>Error:</arg>
</arguments>
<status status="PASS" endtime="20190108 00:20:01.814" starttime="20190108 00:20:01.813"></status>
</kw>
<status status="PASS" endtime="20190108 00:20:01.815" starttime="20190108 00:20:01.235"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${switchport}"!="${EMPTY}"</arg>
<arg>Axos Cli With Error Check</arg>
<arg>${device}</arg>
<arg>switchport ${switchport}</arg>
</arguments>
<kw name="Axos Cli With Error Check" library="keyword_common">
<tags>
<tag>@author=dfarwell</tag>
</tags>
<doc>Sends a CLI command to DUT and confirms response has no errors, if there is no prompt in your topo file this may need to be adjusted</doc>
<arguments>
<arg>${device}</arg>
<arg>switchport ${switchport}</arg>
</arguments>
<kw name="Cli" library="caferobot.command.adapter.CliAdapter">
<doc>Execute command on the specific connection and get the output of it</doc>
<arguments>
<arg>${DUT}</arg>
<arg>${CMD}</arg>
<arg>prompt=${devices.${DUT}.prompt}</arg>
<arg>timeout=${TIMEOUT}</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190108 00:20:01.823" level="INFO">send session_command, cmd=switchport ENABLED, prompt={'#': None}, timeout=30, newline=None, retry=1, timeout_exception=1, exclude_prompt=None</msg>
<msg timestamp="20190108 00:20:02.291" level="INFO">session_command result=switchport ENABLED
NGPON2X4(config-ethernet-1/1/x3)</msg>
<msg timestamp="20190108 00:20:02.291" level="INFO">${res} = switchport ENABLED
NGPON2X4(config-ethernet-1/1/x3)</msg>
<status status="PASS" endtime="20190108 00:20:02.292" starttime="20190108 00:20:01.820"></status>
</kw>
<kw name="Should Not Contain Any" library="BuiltIn">
<doc>Fails if ``container`` contains one or more of the ``*items``.</doc>
<arguments>
<arg>${res}</arg>
<arg>Invalid</arg>
<arg>syntax error</arg>
<arg>Aborted:</arg>
<arg>Error:</arg>
</arguments>
<status status="PASS" endtime="20190108 00:20:02.295" starttime="20190108 00:20:02.294"></status>
</kw>
<status status="PASS" endtime="20190108 00:20:02.296" starttime="20190108 00:20:01.819"></status>
</kw>
<status status="PASS" endtime="20190108 00:20:02.297" starttime="20190108 00:20:01.817"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${interface_role}"!="${EMPTY}"</arg>
<arg>Axos Cli With Error Check</arg>
<arg>${device}</arg>
<arg>role ${interface_role}</arg>
</arguments>
<kw name="Axos Cli With Error Check" library="keyword_common">
<tags>
<tag>@author=dfarwell</tag>
</tags>
<doc>Sends a CLI command to DUT and confirms response has no errors, if there is no prompt in your topo file this may need to be adjusted</doc>
<arguments>
<arg>${device}</arg>
<arg>role ${interface_role}</arg>
</arguments>
<kw name="Cli" library="caferobot.command.adapter.CliAdapter">
<doc>Execute command on the specific connection and get the output of it</doc>
<arguments>
<arg>${DUT}</arg>
<arg>${CMD}</arg>
<arg>prompt=${devices.${DUT}.prompt}</arg>
<arg>timeout=${TIMEOUT}</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190108 00:20:02.308" level="INFO">send session_command, cmd=role inni, prompt={'#': None}, timeout=30, newline=None, retry=1, timeout_exception=1, exclude_prompt=None</msg>
<msg timestamp="20190108 00:20:03.456" level="INFO">session_command result=role inni
NGPON2X4(config-ethernet-1/1/x3)</msg>
<msg timestamp="20190108 00:20:03.457" level="INFO">${res} = role inni
NGPON2X4(config-ethernet-1/1/x3)</msg>
<status status="PASS" endtime="20190108 00:20:03.457" starttime="20190108 00:20:02.305"></status>
</kw>
<kw name="Should Not Contain Any" library="BuiltIn">
<doc>Fails if ``container`` contains one or more of the ``*items``.</doc>
<arguments>
<arg>${res}</arg>
<arg>Invalid</arg>
<arg>syntax error</arg>
<arg>Aborted:</arg>
<arg>Error:</arg>
</arguments>
<status status="PASS" endtime="20190108 00:20:03.477" starttime="20190108 00:20:03.472"></status>
</kw>
<status status="PASS" endtime="20190108 00:20:03.478" starttime="20190108 00:20:02.304"></status>
</kw>
<status status="PASS" endtime="20190108 00:20:03.480" starttime="20190108 00:20:02.302"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${EMPTY}'!='${sub_view_type}'</arg>
<arg>Axos Cli With Error Check</arg>
<arg>${device}</arg>
<arg>${sub_view_type} ${sub_view_value}</arg>
</arguments>
<status status="PASS" endtime="20190108 00:20:03.484" starttime="20190108 00:20:03.483"></status>
</kw>
<kw name="convert_dictionary_to_string" library="keyword_command">
<tags>
<tag>@author=CindyGao</tag>
</tags>
<doc>Description: convert dictionary to string with all key and value</doc>
<arguments>
<arg>&amp;{dict_cmd}</arg>
</arguments>
<assign>
<var>${cmd_string}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${result_string}</var>
</assign>
<msg timestamp="20190108 00:20:03.488" level="INFO">${result_string} = </msg>
<status status="PASS" endtime="20190108 00:20:03.489" starttime="20190108 00:20:03.488"></status>
</kw>
<kw type="for" name="${key} IN [ @{dict.keys()} ]">
<status status="PASS" endtime="20190108 00:20:03.490" starttime="20190108 00:20:03.489"></status>
</kw>
<msg timestamp="20190108 00:20:03.491" level="INFO">${cmd_string} = </msg>
<status status="PASS" endtime="20190108 00:20:03.491" starttime="20190108 00:20:03.486"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${EMPTY}'!='${cmd_string}'</arg>
<arg>Axos Cli With Error Check</arg>
<arg>${device}</arg>
<arg>${cmd_string}</arg>
</arguments>
<status status="PASS" endtime="20190108 00:20:03.493" starttime="20190108 00:20:03.492"></status>
</kw>
<kw type="teardown" name="Axos Cli With Error Check" library="keyword_common">
<tags>
<tag>@author=dfarwell</tag>
</tags>
<doc>Sends a CLI command to DUT and confirms response has no errors, if there is no prompt in your topo file this may need to be adjusted</doc>
<arguments>
<arg>${device}</arg>
<arg>end</arg>
</arguments>
<kw name="Cli" library="caferobot.command.adapter.CliAdapter">
<doc>Execute command on the specific connection and get the output of it</doc>
<arguments>
<arg>${DUT}</arg>
<arg>${CMD}</arg>
<arg>prompt=${devices.${DUT}.prompt}</arg>
<arg>timeout=${TIMEOUT}</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190108 00:20:03.501" level="INFO">send session_command, cmd=end, prompt={'#': None}, timeout=30, newline=None, retry=1, timeout_exception=1, exclude_prompt=None</msg>
<msg timestamp="20190108 00:20:03.756" level="INFO">session_command result=end
NGPON2X4</msg>
<msg timestamp="20190108 00:20:03.757" level="INFO">${res} = end
NGPON2X4</msg>
<status status="PASS" endtime="20190108 00:20:03.757" starttime="20190108 00:20:03.495"></status>
</kw>
<kw name="Should Not Contain Any" library="BuiltIn">
<doc>Fails if ``container`` contains one or more of the ``*items``.</doc>
<arguments>
<arg>${res}</arg>
<arg>Invalid</arg>
<arg>syntax error</arg>
<arg>Aborted:</arg>
<arg>Error:</arg>
</arguments>
<status status="PASS" endtime="20190108 00:20:03.766" starttime="20190108 00:20:03.765"></status>
</kw>
<status status="PASS" endtime="20190108 00:20:03.766" starttime="20190108 00:20:03.494"></status>
</kw>
<status status="PASS" endtime="20190108 00:20:03.769" starttime="20190108 00:19:57.194"></status>
</kw>
<kw name="no_shutdown_port" library="keyword_command">
<tags>
<tag>@author=BlairWang</tag>
</tags>
<doc>Puts an interface in shutdown mode</doc>
<arguments>
<arg>${device}</arg>
<arg>ethernet</arg>
<arg>${port}</arg>
</arguments>
<kw name="Axos Cli With Error Check" library="keyword_common">
<tags>
<tag>@author=dfarwell</tag>
</tags>
<doc>Sends a CLI command to DUT and confirms response has no errors, if there is no prompt in your topo file this may need to be adjusted</doc>
<arguments>
<arg>${device}</arg>
<arg>configure</arg>
</arguments>
<kw name="Cli" library="caferobot.command.adapter.CliAdapter">
<doc>Execute command on the specific connection and get the output of it</doc>
<arguments>
<arg>${DUT}</arg>
<arg>${CMD}</arg>
<arg>prompt=${devices.${DUT}.prompt}</arg>
<arg>timeout=${TIMEOUT}</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190108 00:20:03.787" level="INFO">send session_command, cmd=configure, prompt={'#': None}, timeout=30, newline=None, retry=1, timeout_exception=1, exclude_prompt=None</msg>
<msg timestamp="20190108 00:20:04.063" level="INFO">session_command result=configure
Enter configuration commands, one per line. End with CNTL/Z.
Current configuration users:
sysadmin ssh (cli from 10.200.201.26) on since 2019-01-07 23:52:17 terminal mode
NGPON2X4(config)</msg>
<msg timestamp="20190108 00:20:04.064" level="INFO">${res} = configure
Enter configuration commands, one per line. End with CNTL/Z.
Current configuration users:
sysadmin ssh (cli from 10.200.201.26) on since 2019-01-07 23:52:17 terminal mode
NGPON2X4(config...</msg>
<status status="PASS" endtime="20190108 00:20:04.064" starttime="20190108 00:20:03.776"></status>
</kw>
<kw name="Should Not Contain Any" library="BuiltIn">
<doc>Fails if ``container`` contains one or more of the ``*items``.</doc>
<arguments>
<arg>${res}</arg>
<arg>Invalid</arg>
<arg>syntax error</arg>
<arg>Aborted:</arg>
<arg>Error:</arg>
</arguments>
<status status="PASS" endtime="20190108 00:20:04.067" starttime="20190108 00:20:04.066"></status>
</kw>
<status status="PASS" endtime="20190108 00:20:04.068" starttime="20190108 00:20:03.774"></status>
</kw>
<kw name="Axos Cli With Error Check" library="keyword_common">
<tags>
<tag>@author=dfarwell</tag>
</tags>
<doc>Sends a CLI command to DUT and confirms response has no errors, if there is no prompt in your topo file this may need to be adjusted</doc>
<arguments>
<arg>${device}</arg>
<arg>interface ${port-type} ${port}</arg>
</arguments>
<kw name="Cli" library="caferobot.command.adapter.CliAdapter">
<doc>Execute command on the specific connection and get the output of it</doc>
<arguments>
<arg>${DUT}</arg>
<arg>${CMD}</arg>
<arg>prompt=${devices.${DUT}.prompt}</arg>
<arg>timeout=${TIMEOUT}</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190108 00:20:04.077" level="INFO">send session_command, cmd=interface ethernet 1/1/x3, prompt={'#': None}, timeout=30, newline=None, retry=1, timeout_exception=1, exclude_prompt=None</msg>
<msg timestamp="20190108 00:20:04.350" level="INFO">session_command result=interface ethernet 1/1/x3
NGPON2X4(config-ethernet-1/1/x3)</msg>
<msg timestamp="20190108 00:20:04.351" level="INFO">${res} = interface ethernet 1/1/x3
NGPON2X4(config-ethernet-1/1/x3)</msg>
<status status="PASS" endtime="20190108 00:20:04.351" starttime="20190108 00:20:04.071"></status>
</kw>
<kw name="Should Not Contain Any" library="BuiltIn">
<doc>Fails if ``container`` contains one or more of the ``*items``.</doc>
<arguments>
<arg>${res}</arg>
<arg>Invalid</arg>
<arg>syntax error</arg>
<arg>Aborted:</arg>
<arg>Error:</arg>
</arguments>
<status status="PASS" endtime="20190108 00:20:04.354" starttime="20190108 00:20:04.353"></status>
</kw>
<status status="PASS" endtime="20190108 00:20:04.355" starttime="20190108 00:20:04.069"></status>
</kw>
<kw name="Axos Cli With Error Check" library="keyword_common">
<tags>
<tag>@author=dfarwell</tag>
</tags>
<doc>Sends a CLI command to DUT and confirms response has no errors, if there is no prompt in your topo file this may need to be adjusted</doc>
<arguments>
<arg>${device}</arg>
<arg>no shutdown</arg>
<arg>30</arg>
</arguments>
<kw name="Cli" library="caferobot.command.adapter.CliAdapter">
<doc>Execute command on the specific connection and get the output of it</doc>
<arguments>
<arg>${DUT}</arg>
<arg>${CMD}</arg>
<arg>prompt=${devices.${DUT}.prompt}</arg>
<arg>timeout=${TIMEOUT}</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190108 00:20:04.376" level="INFO">send session_command, cmd=no shutdown, prompt={'#': None}, timeout=30, newline=None, retry=1, timeout_exception=1, exclude_prompt=None</msg>
<msg timestamp="20190108 00:20:05.006" level="INFO">session_command result=no shutdown
NGPON2X4(config-ethernet-1/1/x3)</msg>
<msg timestamp="20190108 00:20:05.006" level="INFO">${res} = no shutdown
NGPON2X4(config-ethernet-1/1/x3)</msg>
<status status="PASS" endtime="20190108 00:20:05.006" starttime="20190108 00:20:04.372"></status>
</kw>
<kw name="Should Not Contain Any" library="BuiltIn">
<doc>Fails if ``container`` contains one or more of the ``*items``.</doc>
<arguments>
<arg>${res}</arg>
<arg>Invalid</arg>
<arg>syntax error</arg>
<arg>Aborted:</arg>
<arg>Error:</arg>
</arguments>
<status status="PASS" endtime="20190108 00:20:05.012" starttime="20190108 00:20:05.010"></status>
</kw>
<status status="PASS" endtime="20190108 00:20:05.012" starttime="20190108 00:20:04.370"></status>
</kw>
<kw type="teardown" name="Axos Cli With Error Check" library="keyword_common">
<tags>
<tag>@author=dfarwell</tag>
</tags>
<doc>Sends a CLI command to DUT and confirms response has no errors, if there is no prompt in your topo file this may need to be adjusted</doc>
<arguments>
<arg>${device}</arg>
<arg>end</arg>
</arguments>
<kw name="Cli" library="caferobot.command.adapter.CliAdapter">
<doc>Execute command on the specific connection and get the output of it</doc>
<arguments>
<arg>${DUT}</arg>
<arg>${CMD}</arg>
<arg>prompt=${devices.${DUT}.prompt}</arg>
<arg>timeout=${TIMEOUT}</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190108 00:20:05.020" level="INFO">send session_command, cmd=end, prompt={'#': None}, timeout=30, newline=None, retry=1, timeout_exception=1, exclude_prompt=None</msg>
<msg timestamp="20190108 00:20:05.376" level="INFO">session_command result=end
NGPON2X4</msg>
<msg timestamp="20190108 00:20:05.377" level="INFO">${res} = end
NGPON2X4</msg>
<status status="PASS" endtime="20190108 00:20:05.377" starttime="20190108 00:20:05.016"></status>
</kw>
<kw name="Should Not Contain Any" library="BuiltIn">
<doc>Fails if ``container`` contains one or more of the ``*items``.</doc>
<arguments>
<arg>${res}</arg>
<arg>Invalid</arg>
<arg>syntax error</arg>
<arg>Aborted:</arg>
<arg>Error:</arg>
</arguments>
<status status="PASS" endtime="20190108 00:20:05.380" starttime="20190108 00:20:05.379"></status>
</kw>
<status status="PASS" endtime="20190108 00:20:05.381" starttime="20190108 00:20:05.015"></status>
</kw>
<status status="PASS" endtime="20190108 00:20:05.382" starttime="20190108 00:20:03.772"></status>
</kw>
<status status="PASS" endtime="20190108 00:20:05.383" starttime="20190108 00:19:57.188"></status>
</kw>
<status status="PASS" endtime="20190108 00:20:05.385" starttime="20190108 00:19:57.187"></status>
</kw>
<status status="PASS" endtime="20190108 00:20:05.386" starttime="20190108 00:19:57.185"></status>
</kw>
<status status="PASS" endtime="20190108 00:20:05.387" starttime="20190108 00:19:57.183"></status>
</kw>
<status status="PASS" endtime="20190108 00:20:05.389" starttime="20190108 00:19:57.179"></status>
</kw>
<kw type="foritem" name="${service_point} = service_point2">
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${service_model.${service_point}.device}</arg>
</arguments>
<assign>
<var>${device}</var>
</assign>
<msg timestamp="20190108 00:20:05.392" level="INFO">${device} = eutA</msg>
<status status="PASS" endtime="20190108 00:20:05.392" starttime="20190108 00:20:05.391"></status>
</kw>
<kw name="Log" library="BuiltIn">
<arguments>
<arg>****** uplink service provision for ${device} ${service_point} ******</arg>
</arguments>
<msg timestamp="20190108 00:20:05.394" level="INFO">****** uplink service provision for eutA service_point2 ******</msg>
<status status="PASS" endtime="20190108 00:20:05.394" starttime="20190108 00:20:05.393"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>service_point_${service_model.${service_point}.type}_prov</arg>
<arg>${device}</arg>
<arg>${service_point}</arg>
</arguments>
<kw name="service_point_eth_prov" library="keyword_service_model">
<tags>
<tag>@author=CindyGao</tag>
</tags>
<doc>Description: provision for eth type service point (This keyword is only internal use, CANNOT be used in TCs)</doc>
<arguments>
<arg>${device}</arg>
<arg>${service_point}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<arguments>
<arg>****** [${device}] ethernet port basic provision for ${service_point} ******</arg>
</arguments>
<msg timestamp="20190108 00:20:05.398" level="INFO">****** [eutA] ethernet port basic provision for service_point2 ******</msg>
<status status="PASS" endtime="20190108 00:20:05.399" starttime="20190108 00:20:05.397"></status>
</kw>
<kw type="for" name="${port_key} IN [ @{service_model.${service_point}.member} ]">
<kw type="foritem" name="${port_key} = interface1">
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${service_model.${service_point}.member.${port_key}}</arg>
</arguments>
<assign>
<var>${port}</var>
</assign>
<msg timestamp="20190108 00:20:05.402" level="INFO">${port} = 1/1/x4</msg>
<status status="PASS" endtime="20190108 00:20:05.402" starttime="20190108 00:20:05.401"></status>
</kw>
<kw name="Log" library="BuiltIn">
<arguments>
<arg>****** provision port ${port} role and parameter ******</arg>
</arguments>
<msg timestamp="20190108 00:20:05.404" level="INFO">****** provision port 1/1/x4 role and parameter ******</msg>
<status status="PASS" endtime="20190108 00:20:05.404" starttime="20190108 00:20:05.403"></status>
</kw>
<kw name="prov_interface_ethernet" library="keyword_command">
<tags>
<tag>@author=BlairWang</tag>
</tags>
<doc>configure on interface</doc>
<arguments>
<arg>${device}</arg>
<arg>${port}</arg>
<arg>${service_model.${service_point}.attribute.interface_role}</arg>
<arg>ENABLED</arg>
</arguments>
<kw name="Axos Cli With Error Check" library="keyword_common">
<tags>
<tag>@author=dfarwell</tag>
</tags>
<doc>Sends a CLI command to DUT and confirms response has no errors, if there is no prompt in your topo file this may need to be adjusted</doc>
<arguments>
<arg>${device}</arg>
<arg>configure</arg>
</arguments>
<kw name="Cli" library="caferobot.command.adapter.CliAdapter">
<doc>Execute command on the specific connection and get the output of it</doc>
<arguments>
<arg>${DUT}</arg>
<arg>${CMD}</arg>
<arg>prompt=${devices.${DUT}.prompt}</arg>
<arg>timeout=${TIMEOUT}</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190108 00:20:05.410" level="INFO">send session_command, cmd=configure, prompt={'#': None}, timeout=30, newline=None, retry=1, timeout_exception=1, exclude_prompt=None</msg>
<msg timestamp="20190108 00:20:05.679" level="INFO">session_command result=configure
Enter configuration commands, one per line. End with CNTL/Z.
Current configuration users:
sysadmin ssh (cli from 10.200.201.26) on since 2019-01-07 23:52:17 terminal mode
NGPON2X4(config)</msg>
<msg timestamp="20190108 00:20:05.679" level="INFO">${res} = configure
Enter configuration commands, one per line. End with CNTL/Z.
Current configuration users:
sysadmin ssh (cli from 10.200.201.26) on since 2019-01-07 23:52:17 terminal mode
NGPON2X4(config...</msg>
<status status="PASS" endtime="20190108 00:20:05.680" starttime="20190108 00:20:05.408"></status>
</kw>
<kw name="Should Not Contain Any" library="BuiltIn">
<doc>Fails if ``container`` contains one or more of the ``*items``.</doc>
<arguments>
<arg>${res}</arg>
<arg>Invalid</arg>
<arg>syntax error</arg>
<arg>Aborted:</arg>
<arg>Error:</arg>
</arguments>
<status status="PASS" endtime="20190108 00:20:05.683" starttime="20190108 00:20:05.681"></status>
</kw>
<status status="PASS" endtime="20190108 00:20:05.683" starttime="20190108 00:20:05.406"></status>
</kw>
<kw name="Axos Cli With Error Check" library="keyword_common">
<tags>
<tag>@author=dfarwell</tag>
</tags>
<doc>Sends a CLI command to DUT and confirms response has no errors, if there is no prompt in your topo file this may need to be adjusted</doc>
<arguments>
<arg>${device}</arg>
<arg>interface ethernet ${interface}</arg>
</arguments>
<kw name="Cli" library="caferobot.command.adapter.CliAdapter">
<doc>Execute command on the specific connection and get the output of it</doc>
<arguments>
<arg>${DUT}</arg>
<arg>${CMD}</arg>
<arg>prompt=${devices.${DUT}.prompt}</arg>
<arg>timeout=${TIMEOUT}</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190108 00:20:05.689" level="INFO">send session_command, cmd=interface ethernet 1/1/x4, prompt={'#': None}, timeout=30, newline=None, retry=1, timeout_exception=1, exclude_prompt=None</msg>
<msg timestamp="20190108 00:20:05.938" level="INFO">session_command result=interface ethernet 1/1/x4
NGPON2X4(config-ethernet-1/1/x4)</msg>
<msg timestamp="20190108 00:20:05.939" level="INFO">${res} = interface ethernet 1/1/x4
NGPON2X4(config-ethernet-1/1/x4)</msg>
<status status="PASS" endtime="20190108 00:20:05.939" starttime="20190108 00:20:05.687"></status>
</kw>
<kw name="Should Not Contain Any" library="BuiltIn">
<doc>Fails if ``container`` contains one or more of the ``*items``.</doc>
<arguments>
<arg>${res}</arg>
<arg>Invalid</arg>
<arg>syntax error</arg>
<arg>Aborted:</arg>
<arg>Error:</arg>
</arguments>
<status status="PASS" endtime="20190108 00:20:05.942" starttime="20190108 00:20:05.941"></status>
</kw>
<status status="PASS" endtime="20190108 00:20:05.943" starttime="20190108 00:20:05.685"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${switchport}"!="${EMPTY}"</arg>
<arg>Axos Cli With Error Check</arg>
<arg>${device}</arg>
<arg>switchport ${switchport}</arg>
</arguments>
<kw name="Axos Cli With Error Check" library="keyword_common">
<tags>
<tag>@author=dfarwell</tag>
</tags>
<doc>Sends a CLI command to DUT and confirms response has no errors, if there is no prompt in your topo file this may need to be adjusted</doc>
<arguments>
<arg>${device}</arg>
<arg>switchport ${switchport}</arg>
</arguments>
<kw name="Cli" library="caferobot.command.adapter.CliAdapter">
<doc>Execute command on the specific connection and get the output of it</doc>
<arguments>
<arg>${DUT}</arg>
<arg>${CMD}</arg>
<arg>prompt=${devices.${DUT}.prompt}</arg>
<arg>timeout=${TIMEOUT}</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190108 00:20:05.955" level="INFO">send session_command, cmd=switchport ENABLED, prompt={'#': None}, timeout=30, newline=None, retry=1, timeout_exception=1, exclude_prompt=None</msg>
<msg timestamp="20190108 00:20:06.357" level="INFO">session_command result=switchport ENABLED
NGPON2X4(config-ethernet-1/1/x4)</msg>
<msg timestamp="20190108 00:20:06.358" level="INFO">${res} = switchport ENABLED
NGPON2X4(config-ethernet-1/1/x4)</msg>
<status status="PASS" endtime="20190108 00:20:06.358" starttime="20190108 00:20:05.948"></status>
</kw>
<kw name="Should Not Contain Any" library="BuiltIn">
<doc>Fails if ``container`` contains one or more of the ``*items``.</doc>
<arguments>
<arg>${res}</arg>
<arg>Invalid</arg>
<arg>syntax error</arg>
<arg>Aborted:</arg>
<arg>Error:</arg>
</arguments>
<status status="PASS" endtime="20190108 00:20:06.361" starttime="20190108 00:20:06.360"></status>
</kw>
<status status="PASS" endtime="20190108 00:20:06.362" starttime="20190108 00:20:05.947"></status>
</kw>
<status status="PASS" endtime="20190108 00:20:06.363" starttime="20190108 00:20:05.945"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${interface_role}"!="${EMPTY}"</arg>
<arg>Axos Cli With Error Check</arg>
<arg>${device}</arg>
<arg>role ${interface_role}</arg>
</arguments>
<kw name="Axos Cli With Error Check" library="keyword_common">
<tags>
<tag>@author=dfarwell</tag>
</tags>
<doc>Sends a CLI command to DUT and confirms response has no errors, if there is no prompt in your topo file this may need to be adjusted</doc>
<arguments>
<arg>${device}</arg>
<arg>role ${interface_role}</arg>
</arguments>
<kw name="Cli" library="caferobot.command.adapter.CliAdapter">
<doc>Execute command on the specific connection and get the output of it</doc>
<arguments>
<arg>${DUT}</arg>
<arg>${CMD}</arg>
<arg>prompt=${devices.${DUT}.prompt}</arg>
<arg>timeout=${TIMEOUT}</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190108 00:20:06.372" level="INFO">send session_command, cmd=role inni, prompt={'#': None}, timeout=30, newline=None, retry=1, timeout_exception=1, exclude_prompt=None</msg>
<msg timestamp="20190108 00:20:06.627" level="INFO">session_command result=role inni
NGPON2X4(config-ethernet-1/1/x4)</msg>
<msg timestamp="20190108 00:20:06.628" level="INFO">${res} = role inni
NGPON2X4(config-ethernet-1/1/x4)</msg>
<status status="PASS" endtime="20190108 00:20:06.628" starttime="20190108 00:20:06.369"></status>
</kw>
<kw name="Should Not Contain Any" library="BuiltIn">
<doc>Fails if ``container`` contains one or more of the ``*items``.</doc>
<arguments>
<arg>${res}</arg>
<arg>Invalid</arg>
<arg>syntax error</arg>
<arg>Aborted:</arg>
<arg>Error:</arg>
</arguments>
<status status="PASS" endtime="20190108 00:20:06.632" starttime="20190108 00:20:06.631"></status>
</kw>
<status status="PASS" endtime="20190108 00:20:06.632" starttime="20190108 00:20:06.368"></status>
</kw>
<status status="PASS" endtime="20190108 00:20:06.634" starttime="20190108 00:20:06.366"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${EMPTY}'!='${sub_view_type}'</arg>
<arg>Axos Cli With Error Check</arg>
<arg>${device}</arg>
<arg>${sub_view_type} ${sub_view_value}</arg>
</arguments>
<status status="PASS" endtime="20190108 00:20:06.639" starttime="20190108 00:20:06.637"></status>
</kw>
<kw name="convert_dictionary_to_string" library="keyword_command">
<tags>
<tag>@author=CindyGao</tag>
</tags>
<doc>Description: convert dictionary to string with all key and value</doc>
<arguments>
<arg>&amp;{dict_cmd}</arg>
</arguments>
<assign>
<var>${cmd_string}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${result_string}</var>
</assign>
<msg timestamp="20190108 00:20:06.646" level="INFO">${result_string} = </msg>
<status status="PASS" endtime="20190108 00:20:06.646" starttime="20190108 00:20:06.644"></status>
</kw>
<kw type="for" name="${key} IN [ @{dict.keys()} ]">
<status status="PASS" endtime="20190108 00:20:06.647" starttime="20190108 00:20:06.646"></status>
</kw>
<msg timestamp="20190108 00:20:06.648" level="INFO">${cmd_string} = </msg>
<status status="PASS" endtime="20190108 00:20:06.648" starttime="20190108 00:20:06.642"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${EMPTY}'!='${cmd_string}'</arg>
<arg>Axos Cli With Error Check</arg>
<arg>${device}</arg>
<arg>${cmd_string}</arg>
</arguments>
<status status="PASS" endtime="20190108 00:20:06.650" starttime="20190108 00:20:06.649"></status>
</kw>
<kw type="teardown" name="Axos Cli With Error Check" library="keyword_common">
<tags>
<tag>@author=dfarwell</tag>
</tags>
<doc>Sends a CLI command to DUT and confirms response has no errors, if there is no prompt in your topo file this may need to be adjusted</doc>
<arguments>
<arg>${device}</arg>
<arg>end</arg>
</arguments>
<kw name="Cli" library="caferobot.command.adapter.CliAdapter">
<doc>Execute command on the specific connection and get the output of it</doc>
<arguments>
<arg>${DUT}</arg>
<arg>${CMD}</arg>
<arg>prompt=${devices.${DUT}.prompt}</arg>
<arg>timeout=${TIMEOUT}</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190108 00:20:06.663" level="INFO">send session_command, cmd=end, prompt={'#': None}, timeout=30, newline=None, retry=1, timeout_exception=1, exclude_prompt=None</msg>
<msg timestamp="20190108 00:20:07.011" level="INFO">session_command result=end
NGPON2X4</msg>
<msg timestamp="20190108 00:20:07.012" level="INFO">${res} = end
NGPON2X4</msg>
<status status="PASS" endtime="20190108 00:20:07.012" starttime="20190108 00:20:06.653"></status>
</kw>
<kw name="Should Not Contain Any" library="BuiltIn">
<doc>Fails if ``container`` contains one or more of the ``*items``.</doc>
<arguments>
<arg>${res}</arg>
<arg>Invalid</arg>
<arg>syntax error</arg>
<arg>Aborted:</arg>
<arg>Error:</arg>
</arguments>
<status status="PASS" endtime="20190108 00:20:07.016" starttime="20190108 00:20:07.015"></status>
</kw>
<status status="PASS" endtime="20190108 00:20:07.016" starttime="20190108 00:20:06.651"></status>
</kw>
<status status="PASS" endtime="20190108 00:20:07.018" starttime="20190108 00:20:05.405"></status>
</kw>
<kw name="no_shutdown_port" library="keyword_command">
<tags>
<tag>@author=BlairWang</tag>
</tags>
<doc>Puts an interface in shutdown mode</doc>
<arguments>
<arg>${device}</arg>
<arg>ethernet</arg>
<arg>${port}</arg>
</arguments>
<kw name="Axos Cli With Error Check" library="keyword_common">
<tags>
<tag>@author=dfarwell</tag>
</tags>
<doc>Sends a CLI command to DUT and confirms response has no errors, if there is no prompt in your topo file this may need to be adjusted</doc>
<arguments>
<arg>${device}</arg>
<arg>configure</arg>
</arguments>
<kw name="Cli" library="caferobot.command.adapter.CliAdapter">
<doc>Execute command on the specific connection and get the output of it</doc>
<arguments>
<arg>${DUT}</arg>
<arg>${CMD}</arg>
<arg>prompt=${devices.${DUT}.prompt}</arg>
<arg>timeout=${TIMEOUT}</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190108 00:20:07.025" level="INFO">send session_command, cmd=configure, prompt={'#': None}, timeout=30, newline=None, retry=1, timeout_exception=1, exclude_prompt=None</msg>
<msg timestamp="20190108 00:20:07.291" level="INFO">session_command result=configure
Enter configuration commands, one per line. End with CNTL/Z.
NGPON2X4(config)</msg>
<msg timestamp="20190108 00:20:07.292" level="INFO">${res} = configure
Enter configuration commands, one per line. End with CNTL/Z.
NGPON2X4(config)</msg>
<status status="PASS" endtime="20190108 00:20:07.292" starttime="20190108 00:20:07.023"></status>
</kw>
<kw name="Should Not Contain Any" library="BuiltIn">
<doc>Fails if ``container`` contains one or more of the ``*items``.</doc>
<arguments>
<arg>${res}</arg>
<arg>Invalid</arg>
<arg>syntax error</arg>
<arg>Aborted:</arg>
<arg>Error:</arg>
</arguments>
<status status="PASS" endtime="20190108 00:20:07.296" starttime="20190108 00:20:07.295"></status>
</kw>
<status status="PASS" endtime="20190108 00:20:07.296" starttime="20190108 00:20:07.021"></status>
</kw>
<kw name="Axos Cli With Error Check" library="keyword_common">
<tags>
<tag>@author=dfarwell</tag>
</tags>
<doc>Sends a CLI command to DUT and confirms response has no errors, if there is no prompt in your topo file this may need to be adjusted</doc>
<arguments>
<arg>${device}</arg>
<arg>interface ${port-type} ${port}</arg>
</arguments>
<kw name="Cli" library="caferobot.command.adapter.CliAdapter">
<doc>Execute command on the specific connection and get the output of it</doc>
<arguments>
<arg>${DUT}</arg>
<arg>${CMD}</arg>
<arg>prompt=${devices.${DUT}.prompt}</arg>
<arg>timeout=${TIMEOUT}</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190108 00:20:07.303" level="INFO">send session_command, cmd=interface ethernet 1/1/x4, prompt={'#': None}, timeout=30, newline=None, retry=1, timeout_exception=1, exclude_prompt=None</msg>
<msg timestamp="20190108 00:20:07.617" level="INFO">session_command result=interface ethernet 1/1/x4
NGPON2X4(config-ethernet-1/1/x4)</msg>
<msg timestamp="20190108 00:20:07.618" level="INFO">${res} = interface ethernet 1/1/x4
NGPON2X4(config-ethernet-1/1/x4)</msg>
<status status="PASS" endtime="20190108 00:20:07.618" starttime="20190108 00:20:07.300"></status>
</kw>
<kw name="Should Not Contain Any" library="BuiltIn">
<doc>Fails if ``container`` contains one or more of the ``*items``.</doc>
<arguments>
<arg>${res}</arg>
<arg>Invalid</arg>
<arg>syntax error</arg>
<arg>Aborted:</arg>
<arg>Error:</arg>
</arguments>
<status status="PASS" endtime="20190108 00:20:07.621" starttime="20190108 00:20:07.620"></status>
</kw>
<status status="PASS" endtime="20190108 00:20:07.622" starttime="20190108 00:20:07.298"></status>
</kw>
<kw name="Axos Cli With Error Check" library="keyword_common">
<tags>
<tag>@author=dfarwell</tag>
</tags>
<doc>Sends a CLI command to DUT and confirms response has no errors, if there is no prompt in your topo file this may need to be adjusted</doc>
<arguments>
<arg>${device}</arg>
<arg>no shutdown</arg>
<arg>30</arg>
</arguments>
<kw name="Cli" library="caferobot.command.adapter.CliAdapter">
<doc>Execute command on the specific connection and get the output of it</doc>
<arguments>
<arg>${DUT}</arg>
<arg>${CMD}</arg>
<arg>prompt=${devices.${DUT}.prompt}</arg>
<arg>timeout=${TIMEOUT}</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190108 00:20:07.629" level="INFO">send session_command, cmd=no shutdown, prompt={'#': None}, timeout=30, newline=None, retry=1, timeout_exception=1, exclude_prompt=None</msg>
<msg timestamp="20190108 00:20:08.404" level="INFO">session_command result=no shutdown
NGPON2X4(config-ethernet-1/1/x4)</msg>
<msg timestamp="20190108 00:20:08.404" level="INFO">${res} = no shutdown
NGPON2X4(config-ethernet-1/1/x4)</msg>
<status status="PASS" endtime="20190108 00:20:08.405" starttime="20190108 00:20:07.625"></status>
</kw>
<kw name="Should Not Contain Any" library="BuiltIn">
<doc>Fails if ``container`` contains one or more of the ``*items``.</doc>
<arguments>
<arg>${res}</arg>
<arg>Invalid</arg>
<arg>syntax error</arg>
<arg>Aborted:</arg>
<arg>Error:</arg>
</arguments>
<status status="PASS" endtime="20190108 00:20:08.409" starttime="20190108 00:20:08.407"></status>
</kw>
<status status="PASS" endtime="20190108 00:20:08.410" starttime="20190108 00:20:07.624"></status>
</kw>
<kw type="teardown" name="Axos Cli With Error Check" library="keyword_common">
<tags>
<tag>@author=dfarwell</tag>
</tags>
<doc>Sends a CLI command to DUT and confirms response has no errors, if there is no prompt in your topo file this may need to be adjusted</doc>
<arguments>
<arg>${device}</arg>
<arg>end</arg>
</arguments>
<kw name="Cli" library="caferobot.command.adapter.CliAdapter">
<doc>Execute command on the specific connection and get the output of it</doc>
<arguments>
<arg>${DUT}</arg>
<arg>${CMD}</arg>
<arg>prompt=${devices.${DUT}.prompt}</arg>
<arg>timeout=${TIMEOUT}</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190108 00:20:08.427" level="INFO">send session_command, cmd=end, prompt={'#': None}, timeout=30, newline=None, retry=1, timeout_exception=1, exclude_prompt=None</msg>
<msg timestamp="20190108 00:20:08.777" level="INFO">session_command result=end
NGPON2X4</msg>
<msg timestamp="20190108 00:20:08.777" level="INFO">${res} = end
NGPON2X4</msg>
<status status="PASS" endtime="20190108 00:20:08.777" starttime="20190108 00:20:08.418"></status>
</kw>
<kw name="Should Not Contain Any" library="BuiltIn">
<doc>Fails if ``container`` contains one or more of the ``*items``.</doc>
<arguments>
<arg>${res}</arg>
<arg>Invalid</arg>
<arg>syntax error</arg>
<arg>Aborted:</arg>
<arg>Error:</arg>
</arguments>
<status status="PASS" endtime="20190108 00:20:08.780" starttime="20190108 00:20:08.779"></status>
</kw>
<status status="PASS" endtime="20190108 00:20:08.781" starttime="20190108 00:20:08.416"></status>
</kw>
<status status="PASS" endtime="20190108 00:20:08.783" starttime="20190108 00:20:07.020"></status>
</kw>
<status status="PASS" endtime="20190108 00:20:08.784" starttime="20190108 00:20:05.400"></status>
</kw>
<status status="PASS" endtime="20190108 00:20:08.786" starttime="20190108 00:20:05.399"></status>
</kw>
<status status="PASS" endtime="20190108 00:20:08.787" starttime="20190108 00:20:05.396"></status>
</kw>
<status status="PASS" endtime="20190108 00:20:08.789" starttime="20190108 00:20:05.395"></status>
</kw>
<status status="PASS" endtime="20190108 00:20:08.790" starttime="20190108 00:20:05.390"></status>
</kw>
<kw type="foritem" name="${service_point} = service_point3">
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${service_model.${service_point}.device}</arg>
</arguments>
<assign>
<var>${device}</var>
</assign>
<msg timestamp="20190108 00:20:08.794" level="INFO">${device} = eutA</msg>
<status status="PASS" endtime="20190108 00:20:08.794" starttime="20190108 00:20:08.793"></status>
</kw>
<kw name="Log" library="BuiltIn">
<arguments>
<arg>****** uplink service provision for ${device} ${service_point} ******</arg>
</arguments>
<msg timestamp="20190108 00:20:08.795" level="INFO">****** uplink service provision for eutA service_point3 ******</msg>
<status status="PASS" endtime="20190108 00:20:08.795" starttime="20190108 00:20:08.794"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>service_point_${service_model.${service_point}.type}_prov</arg>
<arg>${device}</arg>
<arg>${service_point}</arg>
</arguments>
<kw name="service_point_eth_prov" library="keyword_service_model">
<tags>
<tag>@author=CindyGao</tag>
</tags>
<doc>Description: provision for eth type service point (This keyword is only internal use, CANNOT be used in TCs)</doc>
<arguments>
<arg>${device}</arg>
<arg>${service_point}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<arguments>
<arg>****** [${device}] ethernet port basic provision for ${service_point} ******</arg>
</arguments>
<msg timestamp="20190108 00:20:08.799" level="INFO">****** [eutA] ethernet port basic provision for service_point3 ******</msg>
<status status="PASS" endtime="20190108 00:20:08.799" starttime="20190108 00:20:08.798"></status>
</kw>
<kw type="for" name="${port_key} IN [ @{service_model.${service_point}.member} ]">
<kw type="foritem" name="${port_key} = interface1">
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${service_model.${service_point}.member.${port_key}}</arg>
</arguments>
<assign>
<var>${port}</var>
</assign>
<msg timestamp="20190108 00:20:08.802" level="INFO">${port} = 1/2/x11</msg>
<status status="PASS" endtime="20190108 00:20:08.803" starttime="20190108 00:20:08.801"></status>
</kw>
<kw name="Log" library="BuiltIn">
<arguments>
<arg>****** provision port ${port} role and parameter ******</arg>
</arguments>
<msg timestamp="20190108 00:20:08.804" level="INFO">****** provision port 1/2/x11 role and parameter ******</msg>
<status status="PASS" endtime="20190108 00:20:08.804" starttime="20190108 00:20:08.803"></status>
</kw>
<kw name="prov_interface_ethernet" library="keyword_command">
<tags>
<tag>@author=BlairWang</tag>
</tags>
<doc>configure on interface</doc>
<arguments>
<arg>${device}</arg>
<arg>${port}</arg>
<arg>${service_model.${service_point}.attribute.interface_role}</arg>
<arg>ENABLED</arg>
</arguments>
<kw name="Axos Cli With Error Check" library="keyword_common">
<tags>
<tag>@author=dfarwell</tag>
</tags>
<doc>Sends a CLI command to DUT and confirms response has no errors, if there is no prompt in your topo file this may need to be adjusted</doc>
<arguments>
<arg>${device}</arg>
<arg>configure</arg>
</arguments>
<kw name="Cli" library="caferobot.command.adapter.CliAdapter">
<doc>Execute command on the specific connection and get the output of it</doc>
<arguments>
<arg>${DUT}</arg>
<arg>${CMD}</arg>
<arg>prompt=${devices.${DUT}.prompt}</arg>
<arg>timeout=${TIMEOUT}</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190108 00:20:08.810" level="INFO">send session_command, cmd=configure, prompt={'#': None}, timeout=30, newline=None, retry=1, timeout_exception=1, exclude_prompt=None</msg>
<msg timestamp="20190108 00:20:09.125" level="INFO">session_command result=configure
Enter configuration commands, one per line. End with CNTL/Z.
NGPON2X4(config)</msg>
<msg timestamp="20190108 00:20:09.126" level="INFO">${res} = configure
Enter configuration commands, one per line. End with CNTL/Z.
NGPON2X4(config)</msg>
<status status="PASS" endtime="20190108 00:20:09.126" starttime="20190108 00:20:08.808"></status>
</kw>
<kw name="Should Not Contain Any" library="BuiltIn">
<doc>Fails if ``container`` contains one or more of the ``*items``.</doc>
<arguments>
<arg>${res}</arg>
<arg>Invalid</arg>
<arg>syntax error</arg>
<arg>Aborted:</arg>
<arg>Error:</arg>
</arguments>
<status status="PASS" endtime="20190108 00:20:09.129" starttime="20190108 00:20:09.128"></status>
</kw>
<status status="PASS" endtime="20190108 00:20:09.130" starttime="20190108 00:20:08.806"></status>
</kw>
<kw name="Axos Cli With Error Check" library="keyword_common">
<tags>
<tag>@author=dfarwell</tag>
</tags>
<doc>Sends a CLI command to DUT and confirms response has no errors, if there is no prompt in your topo file this may need to be adjusted</doc>
<arguments>
<arg>${device}</arg>
<arg>interface ethernet ${interface}</arg>
</arguments>
<kw name="Cli" library="caferobot.command.adapter.CliAdapter">
<doc>Execute command on the specific connection and get the output of it</doc>
<arguments>
<arg>${DUT}</arg>
<arg>${CMD}</arg>
<arg>prompt=${devices.${DUT}.prompt}</arg>
<arg>timeout=${TIMEOUT}</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190108 00:20:09.135" level="INFO">send session_command, cmd=interface ethernet 1/2/x11, prompt={'#': None}, timeout=30, newline=None, retry=1, timeout_exception=1, exclude_prompt=None</msg>
<msg timestamp="20190108 00:20:09.411" level="INFO">session_command result=interface ethernet 1/2/x11
NGPON2X4(config-ethernet-1/2/x11)</msg>
<msg timestamp="20190108 00:20:09.411" level="INFO">${res} = interface ethernet 1/2/x11
NGPON2X4(config-ethernet-1/2/x11)</msg>
<status status="PASS" endtime="20190108 00:20:09.412" starttime="20190108 00:20:09.133"></status>
</kw>
<kw name="Should Not Contain Any" library="BuiltIn">
<doc>Fails if ``container`` contains one or more of the ``*items``.</doc>
<arguments>
<arg>${res}</arg>
<arg>Invalid</arg>
<arg>syntax error</arg>
<arg>Aborted:</arg>
<arg>Error:</arg>
</arguments>
<status status="PASS" endtime="20190108 00:20:09.415" starttime="20190108 00:20:09.414"></status>
</kw>
<status status="PASS" endtime="20190108 00:20:09.415" starttime="20190108 00:20:09.131"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${switchport}"!="${EMPTY}"</arg>
<arg>Axos Cli With Error Check</arg>
<arg>${device}</arg>
<arg>switchport ${switchport}</arg>
</arguments>
<kw name="Axos Cli With Error Check" library="keyword_common">
<tags>
<tag>@author=dfarwell</tag>
</tags>
<doc>Sends a CLI command to DUT and confirms response has no errors, if there is no prompt in your topo file this may need to be adjusted</doc>
<arguments>
<arg>${device}</arg>
<arg>switchport ${switchport}</arg>
</arguments>
<kw name="Cli" library="caferobot.command.adapter.CliAdapter">
<doc>Execute command on the specific connection and get the output of it</doc>
<arguments>
<arg>${DUT}</arg>
<arg>${CMD}</arg>
<arg>prompt=${devices.${DUT}.prompt}</arg>
<arg>timeout=${TIMEOUT}</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190108 00:20:09.422" level="INFO">send session_command, cmd=switchport ENABLED, prompt={'#': None}, timeout=30, newline=None, retry=1, timeout_exception=1, exclude_prompt=None</msg>
<msg timestamp="20190108 00:20:09.879" level="INFO">session_command result=switchport ENABLED
NGPON2X4(config-ethernet-1/2/x11)</msg>
<msg timestamp="20190108 00:20:09.879" level="INFO">${res} = switchport ENABLED
NGPON2X4(config-ethernet-1/2/x11)</msg>
<status status="PASS" endtime="20190108 00:20:09.879" starttime="20190108 00:20:09.420"></status>
</kw>
<kw name="Should Not Contain Any" library="BuiltIn">
<doc>Fails if ``container`` contains one or more of the ``*items``.</doc>
<arguments>
<arg>${res}</arg>
<arg>Invalid</arg>
<arg>syntax error</arg>
<arg>Aborted:</arg>
<arg>Error:</arg>
</arguments>
<status status="PASS" endtime="20190108 00:20:09.883" starttime="20190108 00:20:09.881"></status>
</kw>
<status status="PASS" endtime="20190108 00:20:09.884" starttime="20190108 00:20:09.418"></status>
</kw>
<status status="PASS" endtime="20190108 00:20:09.886" starttime="20190108 00:20:09.417"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${interface_role}"!="${EMPTY}"</arg>
<arg>Axos Cli With Error Check</arg>
<arg>${device}</arg>
<arg>role ${interface_role}</arg>
</arguments>
<kw name="Axos Cli With Error Check" library="keyword_common">
<tags>
<tag>@author=dfarwell</tag>
</tags>
<doc>Sends a CLI command to DUT and confirms response has no errors, if there is no prompt in your topo file this may need to be adjusted</doc>
<arguments>
<arg>${device}</arg>
<arg>role ${interface_role}</arg>
</arguments>
<kw name="Cli" library="caferobot.command.adapter.CliAdapter">
<doc>Execute command on the specific connection and get the output of it</doc>
<arguments>
<arg>${DUT}</arg>
<arg>${CMD}</arg>
<arg>prompt=${devices.${DUT}.prompt}</arg>
<arg>timeout=${TIMEOUT}</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190108 00:20:09.894" level="INFO">send session_command, cmd=role inni, prompt={'#': None}, timeout=30, newline=None, retry=1, timeout_exception=1, exclude_prompt=None</msg>
<msg timestamp="20190108 00:20:11.203" level="INFO">session_command result=role inni
NGPON2X4(config-ethernet-1/2/x11)</msg>
<msg timestamp="20190108 00:20:11.203" level="INFO">${res} = role inni
NGPON2X4(config-ethernet-1/2/x11)</msg>
<status status="PASS" endtime="20190108 00:20:11.204" starttime="20190108 00:20:09.891"></status>
</kw>
<kw name="Should Not Contain Any" library="BuiltIn">
<doc>Fails if ``container`` contains one or more of the ``*items``.</doc>
<arguments>
<arg>${res}</arg>
<arg>Invalid</arg>
<arg>syntax error</arg>
<arg>Aborted:</arg>
<arg>Error:</arg>
</arguments>
<status status="PASS" endtime="20190108 00:20:11.214" starttime="20190108 00:20:11.212"></status>
</kw>
<status status="PASS" endtime="20190108 00:20:11.214" starttime="20190108 00:20:09.889"></status>
</kw>
<status status="PASS" endtime="20190108 00:20:11.215" starttime="20190108 00:20:09.888"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${EMPTY}'!='${sub_view_type}'</arg>
<arg>Axos Cli With Error Check</arg>
<arg>${device}</arg>
<arg>${sub_view_type} ${sub_view_value}</arg>
</arguments>
<status status="PASS" endtime="20190108 00:20:11.218" starttime="20190108 00:20:11.217"></status>
</kw>
<kw name="convert_dictionary_to_string" library="keyword_command">
<tags>
<tag>@author=CindyGao</tag>
</tags>
<doc>Description: convert dictionary to string with all key and value</doc>
<arguments>
<arg>&amp;{dict_cmd}</arg>
</arguments>
<assign>
<var>${cmd_string}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${result_string}</var>
</assign>
<msg timestamp="20190108 00:20:11.222" level="INFO">${result_string} = </msg>
<status status="PASS" endtime="20190108 00:20:11.222" starttime="20190108 00:20:11.221"></status>
</kw>
<kw type="for" name="${key} IN [ @{dict.keys()} ]">
<status status="PASS" endtime="20190108 00:20:11.223" starttime="20190108 00:20:11.223"></status>
</kw>
<msg timestamp="20190108 00:20:11.224" level="INFO">${cmd_string} = </msg>
<status status="PASS" endtime="20190108 00:20:11.224" starttime="20190108 00:20:11.220"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${EMPTY}'!='${cmd_string}'</arg>
<arg>Axos Cli With Error Check</arg>
<arg>${device}</arg>
<arg>${cmd_string}</arg>
</arguments>
<status status="PASS" endtime="20190108 00:20:11.226" starttime="20190108 00:20:11.225"></status>
</kw>
<kw type="teardown" name="Axos Cli With Error Check" library="keyword_common">
<tags>
<tag>@author=dfarwell</tag>
</tags>
<doc>Sends a CLI command to DUT and confirms response has no errors, if there is no prompt in your topo file this may need to be adjusted</doc>
<arguments>
<arg>${device}</arg>
<arg>end</arg>
</arguments>
<kw name="Cli" library="caferobot.command.adapter.CliAdapter">
<doc>Execute command on the specific connection and get the output of it</doc>
<arguments>
<arg>${DUT}</arg>
<arg>${CMD}</arg>
<arg>prompt=${devices.${DUT}.prompt}</arg>
<arg>timeout=${TIMEOUT}</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190108 00:20:11.230" level="INFO">send session_command, cmd=end, prompt={'#': None}, timeout=30, newline=None, retry=1, timeout_exception=1, exclude_prompt=None</msg>
<msg timestamp="20190108 00:20:11.555" level="INFO">session_command result=end
NGPON2X4</msg>
<msg timestamp="20190108 00:20:11.556" level="INFO">${res} = end
NGPON2X4</msg>
<status status="PASS" endtime="20190108 00:20:11.556" starttime="20190108 00:20:11.228"></status>
</kw>
<kw name="Should Not Contain Any" library="BuiltIn">
<doc>Fails if ``container`` contains one or more of the ``*items``.</doc>
<arguments>
<arg>${res}</arg>
<arg>Invalid</arg>
<arg>syntax error</arg>
<arg>Aborted:</arg>
<arg>Error:</arg>
</arguments>
<status status="PASS" endtime="20190108 00:20:11.559" starttime="20190108 00:20:11.558"></status>
</kw>
<status status="PASS" endtime="20190108 00:20:11.560" starttime="20190108 00:20:11.226"></status>
</kw>
<status status="PASS" endtime="20190108 00:20:11.561" starttime="20190108 00:20:08.805"></status>
</kw>
<kw name="no_shutdown_port" library="keyword_command">
<tags>
<tag>@author=BlairWang</tag>
</tags>
<doc>Puts an interface in shutdown mode</doc>
<arguments>
<arg>${device}</arg>
<arg>ethernet</arg>
<arg>${port}</arg>
</arguments>
<kw name="Axos Cli With Error Check" library="keyword_common">
<tags>
<tag>@author=dfarwell</tag>
</tags>
<doc>Sends a CLI command to DUT and confirms response has no errors, if there is no prompt in your topo file this may need to be adjusted</doc>
<arguments>
<arg>${device}</arg>
<arg>configure</arg>
</arguments>
<kw name="Cli" library="caferobot.command.adapter.CliAdapter">
<doc>Execute command on the specific connection and get the output of it</doc>
<arguments>
<arg>${DUT}</arg>
<arg>${CMD}</arg>
<arg>prompt=${devices.${DUT}.prompt}</arg>
<arg>timeout=${TIMEOUT}</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190108 00:20:11.569" level="INFO">send session_command, cmd=configure, prompt={'#': None}, timeout=30, newline=None, retry=1, timeout_exception=1, exclude_prompt=None</msg>
<msg timestamp="20190108 00:20:11.858" level="INFO">session_command result=configure
Enter configuration commands, one per line. End with CNTL/Z.
NGPON2X4(config)</msg>
<msg timestamp="20190108 00:20:11.858" level="INFO">${res} = configure
Enter configuration commands, one per line. End with CNTL/Z.
NGPON2X4(config)</msg>
<status status="PASS" endtime="20190108 00:20:11.859" starttime="20190108 00:20:11.567"></status>
</kw>
<kw name="Should Not Contain Any" library="BuiltIn">
<doc>Fails if ``container`` contains one or more of the ``*items``.</doc>
<arguments>
<arg>${res}</arg>
<arg>Invalid</arg>
<arg>syntax error</arg>
<arg>Aborted:</arg>
<arg>Error:</arg>
</arguments>
<status status="PASS" endtime="20190108 00:20:11.868" starttime="20190108 00:20:11.867"></status>
</kw>
<status status="PASS" endtime="20190108 00:20:11.869" starttime="20190108 00:20:11.565"></status>
</kw>
<kw name="Axos Cli With Error Check" library="keyword_common">
<tags>
<tag>@author=dfarwell</tag>
</tags>
<doc>Sends a CLI command to DUT and confirms response has no errors, if there is no prompt in your topo file this may need to be adjusted</doc>
<arguments>
<arg>${device}</arg>
<arg>interface ${port-type} ${port}</arg>
</arguments>
<kw name="Cli" library="caferobot.command.adapter.CliAdapter">
<doc>Execute command on the specific connection and get the output of it</doc>
<arguments>
<arg>${DUT}</arg>
<arg>${CMD}</arg>
<arg>prompt=${devices.${DUT}.prompt}</arg>
<arg>timeout=${TIMEOUT}</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190108 00:20:11.882" level="INFO">send session_command, cmd=interface ethernet 1/2/x11, prompt={'#': None}, timeout=30, newline=None, retry=1, timeout_exception=1, exclude_prompt=None</msg>
<msg timestamp="20190108 00:20:12.157" level="INFO">session_command result=interface ethernet 1/2/x11
NGPON2X4(config-ethernet-1/2/x11)</msg>
<msg timestamp="20190108 00:20:12.158" level="INFO">${res} = interface ethernet 1/2/x11
NGPON2X4(config-ethernet-1/2/x11)</msg>
<status status="PASS" endtime="20190108 00:20:12.158" starttime="20190108 00:20:11.879"></status>
</kw>
<kw name="Should Not Contain Any" library="BuiltIn">
<doc>Fails if ``container`` contains one or more of the ``*items``.</doc>
<arguments>
<arg>${res}</arg>
<arg>Invalid</arg>
<arg>syntax error</arg>
<arg>Aborted:</arg>
<arg>Error:</arg>
</arguments>
<status status="PASS" endtime="20190108 00:20:12.161" starttime="20190108 00:20:12.160"></status>
</kw>
<status status="PASS" endtime="20190108 00:20:12.162" starttime="20190108 00:20:11.877"></status>
</kw>
<kw name="Axos Cli With Error Check" library="keyword_common">
<tags>
<tag>@author=dfarwell</tag>
</tags>
<doc>Sends a CLI command to DUT and confirms response has no errors, if there is no prompt in your topo file this may need to be adjusted</doc>
<arguments>
<arg>${device}</arg>
<arg>no shutdown</arg>
<arg>30</arg>
</arguments>
<kw name="Cli" library="caferobot.command.adapter.CliAdapter">
<doc>Execute command on the specific connection and get the output of it</doc>
<arguments>
<arg>${DUT}</arg>
<arg>${CMD}</arg>
<arg>prompt=${devices.${DUT}.prompt}</arg>
<arg>timeout=${TIMEOUT}</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190108 00:20:12.169" level="INFO">send session_command, cmd=no shutdown, prompt={'#': None}, timeout=30, newline=None, retry=1, timeout_exception=1, exclude_prompt=None</msg>
<msg timestamp="20190108 00:20:12.849" level="INFO">session_command result=no shutdown
NGPON2X4(config-ethernet-1/2/x11)</msg>
<msg timestamp="20190108 00:20:12.850" level="INFO">${res} = no shutdown
NGPON2X4(config-ethernet-1/2/x11)</msg>
<status status="PASS" endtime="20190108 00:20:12.850" starttime="20190108 00:20:12.165"></status>
</kw>
<kw name="Should Not Contain Any" library="BuiltIn">
<doc>Fails if ``container`` contains one or more of the ``*items``.</doc>
<arguments>
<arg>${res}</arg>
<arg>Invalid</arg>
<arg>syntax error</arg>
<arg>Aborted:</arg>
<arg>Error:</arg>
</arguments>
<status status="PASS" endtime="20190108 00:20:12.853" starttime="20190108 00:20:12.852"></status>
</kw>
<status status="PASS" endtime="20190108 00:20:12.853" starttime="20190108 00:20:12.164"></status>
</kw>
<kw type="teardown" name="Axos Cli With Error Check" library="keyword_common">
<tags>
<tag>@author=dfarwell</tag>
</tags>
<doc>Sends a CLI command to DUT and confirms response has no errors, if there is no prompt in your topo file this may need to be adjusted</doc>
<arguments>
<arg>${device}</arg>
<arg>end</arg>
</arguments>
<kw name="Cli" library="caferobot.command.adapter.CliAdapter">
<doc>Execute command on the specific connection and get the output of it</doc>
<arguments>
<arg>${DUT}</arg>
<arg>${CMD}</arg>
<arg>prompt=${devices.${DUT}.prompt}</arg>
<arg>timeout=${TIMEOUT}</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190108 00:20:12.860" level="INFO">send session_command, cmd=end, prompt={'#': None}, timeout=30, newline=None, retry=1, timeout_exception=1, exclude_prompt=None</msg>
<msg timestamp="20190108 00:20:13.171" level="INFO">session_command result=end
NGPON2X4</msg>
<msg timestamp="20190108 00:20:13.172" level="INFO">${res} = end
NGPON2X4</msg>
<status status="PASS" endtime="20190108 00:20:13.172" starttime="20190108 00:20:12.857"></status>
</kw>
<kw name="Should Not Contain Any" library="BuiltIn">
<doc>Fails if ``container`` contains one or more of the ``*items``.</doc>
<arguments>
<arg>${res}</arg>
<arg>Invalid</arg>
<arg>syntax error</arg>
<arg>Aborted:</arg>
<arg>Error:</arg>
</arguments>
<status status="PASS" endtime="20190108 00:20:13.175" starttime="20190108 00:20:13.174"></status>
</kw>
<status status="PASS" endtime="20190108 00:20:13.176" starttime="20190108 00:20:12.855"></status>
</kw>
<status status="PASS" endtime="20190108 00:20:13.179" starttime="20190108 00:20:11.564"></status>
</kw>
<status status="PASS" endtime="20190108 00:20:13.181" starttime="20190108 00:20:08.800"></status>
</kw>
<status status="PASS" endtime="20190108 00:20:13.182" starttime="20190108 00:20:08.800"></status>
</kw>
<status status="PASS" endtime="20190108 00:20:13.183" starttime="20190108 00:20:08.797"></status>
</kw>
<status status="PASS" endtime="20190108 00:20:13.185" starttime="20190108 00:20:08.796"></status>
</kw>
<status status="PASS" endtime="20190108 00:20:13.187" starttime="20190108 00:20:08.792"></status>
</kw>
<kw type="foritem" name="${service_point} = service_point4">
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${service_model.${service_point}.device}</arg>
</arguments>
<assign>
<var>${device}</var>
</assign>
<msg timestamp="20190108 00:20:13.192" level="INFO">${device} = eutA</msg>
<status status="PASS" endtime="20190108 00:20:13.192" starttime="20190108 00:20:13.190"></status>
</kw>
<kw name="Log" library="BuiltIn">
<arguments>
<arg>****** uplink service provision for ${device} ${service_point} ******</arg>
</arguments>
<msg timestamp="20190108 00:20:13.193" level="INFO">****** uplink service provision for eutA service_point4 ******</msg>
<status status="PASS" endtime="20190108 00:20:13.193" starttime="20190108 00:20:13.192"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>service_point_${service_model.${service_point}.type}_prov</arg>
<arg>${device}</arg>
<arg>${service_point}</arg>
</arguments>
<kw name="service_point_eth_prov" library="keyword_service_model">
<tags>
<tag>@author=CindyGao</tag>
</tags>
<doc>Description: provision for eth type service point (This keyword is only internal use, CANNOT be used in TCs)</doc>
<arguments>
<arg>${device}</arg>
<arg>${service_point}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<arguments>
<arg>****** [${device}] ethernet port basic provision for ${service_point} ******</arg>
</arguments>
<msg timestamp="20190108 00:20:13.197" level="INFO">****** [eutA] ethernet port basic provision for service_point4 ******</msg>
<status status="PASS" endtime="20190108 00:20:13.197" starttime="20190108 00:20:13.196"></status>
</kw>
<kw type="for" name="${port_key} IN [ @{service_model.${service_point}.member} ]">
<kw type="foritem" name="${port_key} = interface1">
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${service_model.${service_point}.member.${port_key}}</arg>
</arguments>
<assign>
<var>${port}</var>
</assign>
<msg timestamp="20190108 00:20:13.202" level="INFO">${port} = 1/2/x12</msg>
<status status="PASS" endtime="20190108 00:20:13.202" starttime="20190108 00:20:13.199"></status>
</kw>
<kw name="Log" library="BuiltIn">
<arguments>
<arg>****** provision port ${port} role and parameter ******</arg>
</arguments>
<msg timestamp="20190108 00:20:13.203" level="INFO">****** provision port 1/2/x12 role and parameter ******</msg>
<status status="PASS" endtime="20190108 00:20:13.204" starttime="20190108 00:20:13.203"></status>
</kw>
<kw name="prov_interface_ethernet" library="keyword_command">
<tags>
<tag>@author=BlairWang</tag>
</tags>
<doc>configure on interface</doc>
<arguments>
<arg>${device}</arg>
<arg>${port}</arg>
<arg>${service_model.${service_point}.attribute.interface_role}</arg>
<arg>ENABLED</arg>
</arguments>
<kw name="Axos Cli With Error Check" library="keyword_common">
<tags>
<tag>@author=dfarwell</tag>
</tags>
<doc>Sends a CLI command to DUT and confirms response has no errors, if there is no prompt in your topo file this may need to be adjusted</doc>
<arguments>
<arg>${device}</arg>
<arg>configure</arg>
</arguments>
<kw name="Cli" library="caferobot.command.adapter.CliAdapter">
<doc>Execute command on the specific connection and get the output of it</doc>
<arguments>
<arg>${DUT}</arg>
<arg>${CMD}</arg>
<arg>prompt=${devices.${DUT}.prompt}</arg>
<arg>timeout=${TIMEOUT}</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190108 00:20:13.209" level="INFO">send session_command, cmd=configure, prompt={'#': None}, timeout=30, newline=None, retry=1, timeout_exception=1, exclude_prompt=None</msg>
<msg timestamp="20190108 00:20:13.502" level="INFO">session_command result=configure
Enter configuration commands, one per line. End with CNTL/Z.
NGPON2X4(config)</msg>
<msg timestamp="20190108 00:20:13.503" level="INFO">${res} = configure
Enter configuration commands, one per line. End with CNTL/Z.
NGPON2X4(config)</msg>
<status status="PASS" endtime="20190108 00:20:13.503" starttime="20190108 00:20:13.207"></status>
</kw>
<kw name="Should Not Contain Any" library="BuiltIn">
<doc>Fails if ``container`` contains one or more of the ``*items``.</doc>
<arguments>
<arg>${res}</arg>
<arg>Invalid</arg>
<arg>syntax error</arg>
<arg>Aborted:</arg>
<arg>Error:</arg>
</arguments>
<status status="PASS" endtime="20190108 00:20:13.507" starttime="20190108 00:20:13.505"></status>
</kw>
<status status="PASS" endtime="20190108 00:20:13.507" starttime="20190108 00:20:13.206"></status>
</kw>
<kw name="Axos Cli With Error Check" library="keyword_common">
<tags>
<tag>@author=dfarwell</tag>
</tags>
<doc>Sends a CLI command to DUT and confirms response has no errors, if there is no prompt in your topo file this may need to be adjusted</doc>
<arguments>
<arg>${device}</arg>
<arg>interface ethernet ${interface}</arg>
</arguments>
<kw name="Cli" library="caferobot.command.adapter.CliAdapter">
<doc>Execute command on the specific connection and get the output of it</doc>
<arguments>
<arg>${DUT}</arg>
<arg>${CMD}</arg>
<arg>prompt=${devices.${DUT}.prompt}</arg>
<arg>timeout=${TIMEOUT}</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190108 00:20:13.512" level="INFO">send session_command, cmd=interface ethernet 1/2/x12, prompt={'#': None}, timeout=30, newline=None, retry=1, timeout_exception=1, exclude_prompt=None</msg>
<msg timestamp="20190108 00:20:13.799" level="INFO">session_command result=interface ethernet 1/2/x12
NGPON2X4(config-ethernet-1/2/x12)</msg>
<msg timestamp="20190108 00:20:13.800" level="INFO">${res} = interface ethernet 1/2/x12
NGPON2X4(config-ethernet-1/2/x12)</msg>
<status status="PASS" endtime="20190108 00:20:13.800" starttime="20190108 00:20:13.510"></status>
</kw>
<kw name="Should Not Contain Any" library="BuiltIn">
<doc>Fails if ``container`` contains one or more of the ``*items``.</doc>
<arguments>
<arg>${res}</arg>
<arg>Invalid</arg>
<arg>syntax error</arg>
<arg>Aborted:</arg>
<arg>Error:</arg>
</arguments>
<status status="PASS" endtime="20190108 00:20:13.803" starttime="20190108 00:20:13.802"></status>
</kw>
<status status="PASS" endtime="20190108 00:20:13.803" starttime="20190108 00:20:13.508"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${switchport}"!="${EMPTY}"</arg>
<arg>Axos Cli With Error Check</arg>
<arg>${device}</arg>
<arg>switchport ${switchport}</arg>
</arguments>
<kw name="Axos Cli With Error Check" library="keyword_common">
<tags>
<tag>@author=dfarwell</tag>
</tags>
<doc>Sends a CLI command to DUT and confirms response has no errors, if there is no prompt in your topo file this may need to be adjusted</doc>
<arguments>
<arg>${device}</arg>
<arg>switchport ${switchport}</arg>
</arguments>
<kw name="Cli" library="caferobot.command.adapter.CliAdapter">
<doc>Execute command on the specific connection and get the output of it</doc>
<arguments>
<arg>${DUT}</arg>
<arg>${CMD}</arg>
<arg>prompt=${devices.${DUT}.prompt}</arg>
<arg>timeout=${TIMEOUT}</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190108 00:20:13.811" level="INFO">send session_command, cmd=switchport ENABLED, prompt={'#': None}, timeout=30, newline=None, retry=1, timeout_exception=1, exclude_prompt=None</msg>
<msg timestamp="20190108 00:20:14.239" level="INFO">session_command result=switchport ENABLED
NGPON2X4(config-ethernet-1/2/x12)</msg>
<msg timestamp="20190108 00:20:14.239" level="INFO">${res} = switchport ENABLED
NGPON2X4(config-ethernet-1/2/x12)</msg>
<status status="PASS" endtime="20190108 00:20:14.240" starttime="20190108 00:20:13.809"></status>
</kw>
<kw name="Should Not Contain Any" library="BuiltIn">
<doc>Fails if ``container`` contains one or more of the ``*items``.</doc>
<arguments>
<arg>${res}</arg>
<arg>Invalid</arg>
<arg>syntax error</arg>
<arg>Aborted:</arg>
<arg>Error:</arg>
</arguments>
<status status="PASS" endtime="20190108 00:20:14.242" starttime="20190108 00:20:14.241"></status>
</kw>
<status status="PASS" endtime="20190108 00:20:14.243" starttime="20190108 00:20:13.807"></status>
</kw>
<status status="PASS" endtime="20190108 00:20:14.244" starttime="20190108 00:20:13.805"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${interface_role}"!="${EMPTY}"</arg>
<arg>Axos Cli With Error Check</arg>
<arg>${device}</arg>
<arg>role ${interface_role}</arg>
</arguments>
<kw name="Axos Cli With Error Check" library="keyword_common">
<tags>
<tag>@author=dfarwell</tag>
</tags>
<doc>Sends a CLI command to DUT and confirms response has no errors, if there is no prompt in your topo file this may need to be adjusted</doc>
<arguments>
<arg>${device}</arg>
<arg>role ${interface_role}</arg>
</arguments>
<kw name="Cli" library="caferobot.command.adapter.CliAdapter">
<doc>Execute command on the specific connection and get the output of it</doc>
<arguments>
<arg>${DUT}</arg>
<arg>${CMD}</arg>
<arg>prompt=${devices.${DUT}.prompt}</arg>
<arg>timeout=${TIMEOUT}</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190108 00:20:14.252" level="INFO">send session_command, cmd=role inni, prompt={'#': None}, timeout=30, newline=None, retry=1, timeout_exception=1, exclude_prompt=None</msg>
<msg timestamp="20190108 00:20:15.582" level="INFO">session_command result=role inni
NGPON2X4(config-ethernet-1/2/x12)</msg>
<msg timestamp="20190108 00:20:15.583" level="INFO">${res} = role inni
NGPON2X4(config-ethernet-1/2/x12)</msg>
<status status="PASS" endtime="20190108 00:20:15.584" starttime="20190108 00:20:14.249"></status>
</kw>
<kw name="Should Not Contain Any" library="BuiltIn">
<doc>Fails if ``container`` contains one or more of the ``*items``.</doc>
<arguments>
<arg>${res}</arg>
<arg>Invalid</arg>
<arg>syntax error</arg>
<arg>Aborted:</arg>
<arg>Error:</arg>
</arguments>
<status status="PASS" endtime="20190108 00:20:15.587" starttime="20190108 00:20:15.586"></status>
</kw>
<status status="PASS" endtime="20190108 00:20:15.588" starttime="20190108 00:20:14.248"></status>
</kw>
<status status="PASS" endtime="20190108 00:20:15.589" starttime="20190108 00:20:14.247"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${EMPTY}'!='${sub_view_type}'</arg>
<arg>Axos Cli With Error Check</arg>
<arg>${device}</arg>
<arg>${sub_view_type} ${sub_view_value}</arg>
</arguments>
<status status="PASS" endtime="20190108 00:20:15.592" starttime="20190108 00:20:15.591"></status>
</kw>
<kw name="convert_dictionary_to_string" library="keyword_command">
<tags>
<tag>@author=CindyGao</tag>
</tags>
<doc>Description: convert dictionary to string with all key and value</doc>
<arguments>
<arg>&amp;{dict_cmd}</arg>
</arguments>
<assign>
<var>${cmd_string}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${result_string}</var>
</assign>
<msg timestamp="20190108 00:20:15.597" level="INFO">${result_string} = </msg>
<status status="PASS" endtime="20190108 00:20:15.598" starttime="20190108 00:20:15.596"></status>
</kw>
<kw type="for" name="${key} IN [ @{dict.keys()} ]">
<status status="PASS" endtime="20190108 00:20:15.600" starttime="20190108 00:20:15.598"></status>
</kw>
<msg timestamp="20190108 00:20:15.600" level="INFO">${cmd_string} = </msg>
<status status="PASS" endtime="20190108 00:20:15.601" starttime="20190108 00:20:15.595"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${EMPTY}'!='${cmd_string}'</arg>
<arg>Axos Cli With Error Check</arg>
<arg>${device}</arg>
<arg>${cmd_string}</arg>
</arguments>
<status status="PASS" endtime="20190108 00:20:15.603" starttime="20190108 00:20:15.601"></status>
</kw>
<kw type="teardown" name="Axos Cli With Error Check" library="keyword_common">
<tags>
<tag>@author=dfarwell</tag>
</tags>
<doc>Sends a CLI command to DUT and confirms response has no errors, if there is no prompt in your topo file this may need to be adjusted</doc>
<arguments>
<arg>${device}</arg>
<arg>end</arg>
</arguments>
<kw name="Cli" library="caferobot.command.adapter.CliAdapter">
<doc>Execute command on the specific connection and get the output of it</doc>
<arguments>
<arg>${DUT}</arg>
<arg>${CMD}</arg>
<arg>prompt=${devices.${DUT}.prompt}</arg>
<arg>timeout=${TIMEOUT}</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190108 00:20:15.609" level="INFO">send session_command, cmd=end, prompt={'#': None}, timeout=30, newline=None, retry=1, timeout_exception=1, exclude_prompt=None</msg>
<msg timestamp="20190108 00:20:15.967" level="INFO">session_command result=end
NGPON2X4</msg>
<msg timestamp="20190108 00:20:15.967" level="INFO">${res} = end
NGPON2X4</msg>
<status status="PASS" endtime="20190108 00:20:15.968" starttime="20190108 00:20:15.605"></status>
</kw>
<kw name="Should Not Contain Any" library="BuiltIn">
<doc>Fails if ``container`` contains one or more of the ``*items``.</doc>
<arguments>
<arg>${res}</arg>
<arg>Invalid</arg>
<arg>syntax error</arg>
<arg>Aborted:</arg>
<arg>Error:</arg>
</arguments>
<status status="PASS" endtime="20190108 00:20:15.971" starttime="20190108 00:20:15.970"></status>
</kw>
<status status="PASS" endtime="20190108 00:20:15.972" starttime="20190108 00:20:15.603"></status>
</kw>
<status status="PASS" endtime="20190108 00:20:15.974" starttime="20190108 00:20:13.204"></status>
</kw>
<kw name="no_shutdown_port" library="keyword_command">
<tags>
<tag>@author=BlairWang</tag>
</tags>
<doc>Puts an interface in shutdown mode</doc>
<arguments>
<arg>${device}</arg>
<arg>ethernet</arg>
<arg>${port}</arg>
</arguments>
<kw name="Axos Cli With Error Check" library="keyword_common">
<tags>
<tag>@author=dfarwell</tag>
</tags>
<doc>Sends a CLI command to DUT and confirms response has no errors, if there is no prompt in your topo file this may need to be adjusted</doc>
<arguments>
<arg>${device}</arg>
<arg>configure</arg>
</arguments>
<kw name="Cli" library="caferobot.command.adapter.CliAdapter">
<doc>Execute command on the specific connection and get the output of it</doc>
<arguments>
<arg>${DUT}</arg>
<arg>${CMD}</arg>
<arg>prompt=${devices.${DUT}.prompt}</arg>
<arg>timeout=${TIMEOUT}</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190108 00:20:15.984" level="INFO">send session_command, cmd=configure, prompt={'#': None}, timeout=30, newline=None, retry=1, timeout_exception=1, exclude_prompt=None</msg>
<msg timestamp="20190108 00:20:16.298" level="INFO">session_command result=configure
Enter configuration commands, one per line. End with CNTL/Z.
NGPON2X4(config)</msg>
<msg timestamp="20190108 00:20:16.299" level="INFO">${res} = configure
Enter configuration commands, one per line. End with CNTL/Z.
NGPON2X4(config)</msg>
<status status="PASS" endtime="20190108 00:20:16.299" starttime="20190108 00:20:15.980"></status>
</kw>
<kw name="Should Not Contain Any" library="BuiltIn">
<doc>Fails if ``container`` contains one or more of the ``*items``.</doc>
<arguments>
<arg>${res}</arg>
<arg>Invalid</arg>
<arg>syntax error</arg>
<arg>Aborted:</arg>
<arg>Error:</arg>
</arguments>
<status status="PASS" endtime="20190108 00:20:16.302" starttime="20190108 00:20:16.301"></status>
</kw>
<status status="PASS" endtime="20190108 00:20:16.303" starttime="20190108 00:20:15.979"></status>
</kw>
<kw name="Axos Cli With Error Check" library="keyword_common">
<tags>
<tag>@author=dfarwell</tag>
</tags>
<doc>Sends a CLI command to DUT and confirms response has no errors, if there is no prompt in your topo file this may need to be adjusted</doc>
<arguments>
<arg>${device}</arg>
<arg>interface ${port-type} ${port}</arg>
</arguments>
<kw name="Cli" library="caferobot.command.adapter.CliAdapter">
<doc>Execute command on the specific connection and get the output of it</doc>
<arguments>
<arg>${DUT}</arg>
<arg>${CMD}</arg>
<arg>prompt=${devices.${DUT}.prompt}</arg>
<arg>timeout=${TIMEOUT}</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190108 00:20:16.309" level="INFO">send session_command, cmd=interface ethernet 1/2/x12, prompt={'#': None}, timeout=30, newline=None, retry=1, timeout_exception=1, exclude_prompt=None</msg>
<msg timestamp="20190108 00:20:16.549" level="INFO">session_command result=interface ethernet 1/2/x12
NGPON2X4(config-ethernet-1/2/x12)</msg>
<msg timestamp="20190108 00:20:16.549" level="INFO">${res} = interface ethernet 1/2/x12
NGPON2X4(config-ethernet-1/2/x12)</msg>
<status status="PASS" endtime="20190108 00:20:16.549" starttime="20190108 00:20:16.306"></status>
</kw>
<kw name="Should Not Contain Any" library="BuiltIn">
<doc>Fails if ``container`` contains one or more of the ``*items``.</doc>
<arguments>
<arg>${res}</arg>
<arg>Invalid</arg>
<arg>syntax error</arg>
<arg>Aborted:</arg>
<arg>Error:</arg>
</arguments>
<status status="PASS" endtime="20190108 00:20:16.571" starttime="20190108 00:20:16.570"></status>
</kw>
<status status="PASS" endtime="20190108 00:20:16.572" starttime="20190108 00:20:16.304"></status>
</kw>
<kw name="Axos Cli With Error Check" library="keyword_common">
<tags>
<tag>@author=dfarwell</tag>
</tags>
<doc>Sends a CLI command to DUT and confirms response has no errors, if there is no prompt in your topo file this may need to be adjusted</doc>
<arguments>
<arg>${device}</arg>
<arg>no shutdown</arg>
<arg>30</arg>
</arguments>
<kw name="Cli" library="caferobot.command.adapter.CliAdapter">
<doc>Execute command on the specific connection and get the output of it</doc>
<arguments>
<arg>${DUT}</arg>
<arg>${CMD}</arg>
<arg>prompt=${devices.${DUT}.prompt}</arg>
<arg>timeout=${TIMEOUT}</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190108 00:20:16.590" level="INFO">send session_command, cmd=no shutdown, prompt={'#': None}, timeout=30, newline=None, retry=1, timeout_exception=1, exclude_prompt=None</msg>
<msg timestamp="20190108 00:20:17.294" level="INFO">session_command result=no shutdown
NGPON2X4(config-ethernet-1/2/x12)</msg>
<msg timestamp="20190108 00:20:17.295" level="INFO">${res} = no shutdown
NGPON2X4(config-ethernet-1/2/x12)</msg>
<status status="PASS" endtime="20190108 00:20:17.295" starttime="20190108 00:20:16.586"></status>
</kw>
<kw name="Should Not Contain Any" library="BuiltIn">
<doc>Fails if ``container`` contains one or more of the ``*items``.</doc>
<arguments>
<arg>${res}</arg>
<arg>Invalid</arg>
<arg>syntax error</arg>
<arg>Aborted:</arg>
<arg>Error:</arg>
</arguments>
<status status="PASS" endtime="20190108 00:20:17.298" starttime="20190108 00:20:17.297"></status>
</kw>
<status status="PASS" endtime="20190108 00:20:17.299" starttime="20190108 00:20:16.585"></status>
</kw>
<kw type="teardown" name="Axos Cli With Error Check" library="keyword_common">
<tags>
<tag>@author=dfarwell</tag>
</tags>
<doc>Sends a CLI command to DUT and confirms response has no errors, if there is no prompt in your topo file this may need to be adjusted</doc>
<arguments>
<arg>${device}</arg>
<arg>end</arg>
</arguments>
<kw name="Cli" library="caferobot.command.adapter.CliAdapter">
<doc>Execute command on the specific connection and get the output of it</doc>
<arguments>
<arg>${DUT}</arg>
<arg>${CMD}</arg>
<arg>prompt=${devices.${DUT}.prompt}</arg>
<arg>timeout=${TIMEOUT}</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190108 00:20:17.305" level="INFO">send session_command, cmd=end, prompt={'#': None}, timeout=30, newline=None, retry=1, timeout_exception=1, exclude_prompt=None</msg>
<msg timestamp="20190108 00:20:17.645" level="INFO">session_command result=end
NGPON2X4</msg>
<msg timestamp="20190108 00:20:17.646" level="INFO">${res} = end
NGPON2X4</msg>
<status status="PASS" endtime="20190108 00:20:17.646" starttime="20190108 00:20:17.302"></status>
</kw>
<kw name="Should Not Contain Any" library="BuiltIn">
<doc>Fails if ``container`` contains one or more of the ``*items``.</doc>
<arguments>
<arg>${res}</arg>
<arg>Invalid</arg>
<arg>syntax error</arg>
<arg>Aborted:</arg>
<arg>Error:</arg>
</arguments>
<status status="PASS" endtime="20190108 00:20:17.650" starttime="20190108 00:20:17.648"></status>
</kw>
<status status="PASS" endtime="20190108 00:20:17.650" starttime="20190108 00:20:17.301"></status>
</kw>
<status status="PASS" endtime="20190108 00:20:17.651" starttime="20190108 00:20:15.977"></status>
</kw>
<status status="PASS" endtime="20190108 00:20:17.653" starttime="20190108 00:20:13.199"></status>
</kw>
<status status="PASS" endtime="20190108 00:20:17.654" starttime="20190108 00:20:13.198"></status>
</kw>
<status status="PASS" endtime="20190108 00:20:17.656" starttime="20190108 00:20:13.195"></status>
</kw>
<status status="PASS" endtime="20190108 00:20:17.657" starttime="20190108 00:20:13.194"></status>
</kw>
<status status="PASS" endtime="20190108 00:20:17.659" starttime="20190108 00:20:13.189"></status>
</kw>
<status status="PASS" endtime="20190108 00:20:17.660" starttime="20190108 00:19:57.178"></status>
</kw>
<status status="PASS" endtime="20190108 00:20:17.662" starttime="20190108 00:19:57.177"></status>
</kw>
<kw name="Log" library="BuiltIn">
<arguments>
<arg>service_point add vlan</arg>
</arguments>
<msg timestamp="20190108 00:20:17.664" level="INFO">service_point add vlan</msg>
<status status="PASS" endtime="20190108 00:20:17.664" starttime="20190108 00:20:17.663"></status>
</kw>
<kw name="prov_vlan" library="keyword_command">
<tags>
<tag>@author=AnneLi</tag>
</tags>
<doc>Description: provision vlan</doc>
<arguments>
<arg>eutA</arg>
<arg>${service_vlan}</arg>
</arguments>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>vlan ${vlan}</arg>
</arguments>
<assign>
<var>${cmd_str}</var>
</assign>
<msg timestamp="20190108 00:20:17.667" level="INFO">${cmd_str} = vlan 777</msg>
<status status="PASS" endtime="20190108 00:20:17.668" starttime="20190108 00:20:17.667"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${l2-dhcp-profile}'=='${EMPTY}'</arg>
<arg>${cmd_str}</arg>
<arg>${cmd_str} l2-dhcp-profile ${l2-dhcp-profile}</arg>
</arguments>
<assign>
<var>${cmd_str}</var>
</assign>
<msg timestamp="20190108 00:20:17.669" level="INFO">${cmd_str} = vlan 777</msg>
<status status="PASS" endtime="20190108 00:20:17.669" starttime="20190108 00:20:17.668"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${igmp-profile}'=='${EMPTY}'</arg>
<arg>${cmd_str}</arg>
<arg>${cmd_str} igmp-profile ${igmp-profile}</arg>
</arguments>
<assign>
<var>${cmd_str}</var>
</assign>
<msg timestamp="20190108 00:20:17.671" level="INFO">${cmd_str} = vlan 777</msg>
<status status="PASS" endtime="20190108 00:20:17.671" starttime="20190108 00:20:17.670"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${pppoe-ia-id-profile}'=='${EMPTY}'</arg>
<arg>${cmd_str}</arg>
<arg>${cmd_str} pppoe-ia-id-profile ${pppoe-ia-id-profile}</arg>
</arguments>
<assign>
<var>${cmd_str}</var>
</assign>
<msg timestamp="20190108 00:20:17.674" level="INFO">${cmd_str} = vlan 777</msg>
<status status="PASS" endtime="20190108 00:20:17.674" starttime="20190108 00:20:17.673"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${mac-learning}'=='${EMPTY}'</arg>
<arg>${cmd_str}</arg>
<arg>${cmd_str} mac-learning ${mac-learning}</arg>
</arguments>
<assign>
<var>${cmd_str}</var>
</assign>
<msg timestamp="20190108 00:20:17.676" level="INFO">${cmd_str} = vlan 777</msg>
<status status="PASS" endtime="20190108 00:20:17.676" starttime="20190108 00:20:17.675"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${mode}'=='${EMPTY}'</arg>
<arg>${cmd_str}</arg>
<arg>${cmd_str} mode ${mode}</arg>
</arguments>
<assign>
<var>${cmd_str}</var>
</assign>
<msg timestamp="20190108 00:20:17.678" level="INFO">${cmd_str} = vlan 777</msg>
<status status="PASS" endtime="20190108 00:20:17.678" starttime="20190108 00:20:17.676"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${source-verify}'=='${EMPTY}'</arg>
<arg>${cmd_str}</arg>
<arg>${cmd_str} source-verify ${source-verify}</arg>
</arguments>
<assign>
<var>${cmd_str}</var>
</assign>
<msg timestamp="20190108 00:20:17.679" level="INFO">${cmd_str} = vlan 777</msg>
<status status="PASS" endtime="20190108 00:20:17.679" starttime="20190108 00:20:17.678"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${mff}'=='${EMPTY}'</arg>
<arg>${cmd_str}</arg>
<arg>${cmd_str} mff ${mff}</arg>
</arguments>
<assign>
<var>${cmd_str}</var>
</assign>
<msg timestamp="20190108 00:20:17.681" level="INFO">${cmd_str} = vlan 777</msg>
<status status="PASS" endtime="20190108 00:20:17.681" starttime="20190108 00:20:17.680"></status>
</kw>
<kw name="Cli" library="caferobot.command.adapter.CliAdapter">
<doc>Execute command on the specific connection and get the output of it</doc>
<arguments>
<arg>${device}</arg>
<arg>configure</arg>
</arguments>
<msg timestamp="20190108 00:20:17.685" level="INFO">send session_command, cmd=configure, prompt=None, timeout=None, newline=None, retry=1, timeout_exception=1, exclude_prompt=None</msg>
<msg timestamp="20190108 00:20:18.005" level="INFO">session_command result=configure
Enter configuration commands, one per line. End with CNTL/Z.
NGPON2X4(config)</msg>
<status status="PASS" endtime="20190108 00:20:18.006" starttime="20190108 00:20:17.682"></status>
</kw>
<kw name="Axos Cli With Error Check" library="keyword_common">
<tags>
<tag>@author=dfarwell</tag>
</tags>
<doc>Sends a CLI command to DUT and confirms response has no errors, if there is no prompt in your topo file this may need to be adjusted</doc>
<arguments>
<arg>${device}</arg>
<arg>${cmd_str}</arg>
</arguments>
<kw name="Cli" library="caferobot.command.adapter.CliAdapter">
<doc>Execute command on the specific connection and get the output of it</doc>
<arguments>
<arg>${DUT}</arg>
<arg>${CMD}</arg>
<arg>prompt=${devices.${DUT}.prompt}</arg>
<arg>timeout=${TIMEOUT}</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190108 00:20:18.014" level="INFO">send session_command, cmd=vlan 777, prompt={'#': None}, timeout=30, newline=None, retry=1, timeout_exception=1, exclude_prompt=None</msg>
<msg timestamp="20190108 00:20:18.305" level="INFO">session_command result=vlan 777
NGPON2X4(config-vlan-777)</msg>
<msg timestamp="20190108 00:20:18.306" level="INFO">${res} = vlan 777
NGPON2X4(config-vlan-777)</msg>
<status status="PASS" endtime="20190108 00:20:18.306" starttime="20190108 00:20:18.010"></status>
</kw>
<kw name="Should Not Contain Any" library="BuiltIn">
<doc>Fails if ``container`` contains one or more of the ``*items``.</doc>
<arguments>
<arg>${res}</arg>
<arg>Invalid</arg>
<arg>syntax error</arg>
<arg>Aborted:</arg>
<arg>Error:</arg>
</arguments>
<status status="PASS" endtime="20190108 00:20:18.310" starttime="20190108 00:20:18.309"></status>
</kw>
<status status="PASS" endtime="20190108 00:20:18.310" starttime="20190108 00:20:18.008"></status>
</kw>
<kw name="convert_dictionary_to_string" library="keyword_command">
<tags>
<tag>@author=CindyGao</tag>
</tags>
<doc>Description: convert dictionary to string with all key and value</doc>
<arguments>
<arg>&amp;{dict_cmd}</arg>
</arguments>
<assign>
<var>${cmd_str}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${result_string}</var>
</assign>
<msg timestamp="20190108 00:20:18.316" level="INFO">${result_string} = </msg>
<status status="PASS" endtime="20190108 00:20:18.316" starttime="20190108 00:20:18.315"></status>
</kw>
<kw type="for" name="${key} IN [ @{dict.keys()} ]">
<status status="PASS" endtime="20190108 00:20:18.317" starttime="20190108 00:20:18.316"></status>
</kw>
<msg timestamp="20190108 00:20:18.318" level="INFO">${cmd_str} = </msg>
<status status="PASS" endtime="20190108 00:20:18.318" starttime="20190108 00:20:18.314"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${cmd_str}'!='${EMPTY}'</arg>
<arg>Axos Cli With Error Check</arg>
<arg>${device}</arg>
<arg>${cmd_str}</arg>
</arguments>
<status status="PASS" endtime="20190108 00:20:18.320" starttime="20190108 00:20:18.318"></status>
</kw>
<kw type="teardown" name="Cli" library="caferobot.command.adapter.CliAdapter">
<doc>Execute command on the specific connection and get the output of it</doc>
<arguments>
<arg>${device}</arg>
<arg>end</arg>
</arguments>
<msg timestamp="20190108 00:20:18.323" level="INFO">send session_command, cmd=end, prompt=None, timeout=None, newline=None, retry=1, timeout_exception=1, exclude_prompt=None</msg>
<msg timestamp="20190108 00:20:18.644" level="INFO">session_command result=end
NGPON2X4</msg>
<status status="PASS" endtime="20190108 00:20:18.645" starttime="20190108 00:20:18.320"></status>
</kw>
<status status="PASS" endtime="20190108 00:20:18.649" starttime="20190108 00:20:17.665"></status>
</kw>
<kw name="service_point_add_vlan" library="keyword_service_model">
<tags>
<tag>@author=CindyGao</tag>
</tags>
<doc>Description: add vlan for service_point</doc>
<arguments>
<arg>service_point_list1</arg>
<arg>${service_vlan}</arg>
</arguments>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${vlan_list}</arg>
</arguments>
<assign>
<var>${vlan_list_str}</var>
</assign>
<msg timestamp="20190108 00:20:18.659" level="DEBUG">Argument types are:
&lt;type 'int'&gt;</msg>
<msg timestamp="20190108 00:20:18.660" level="INFO">${vlan_list_str} = 777</msg>
<status status="PASS" endtime="20190108 00:20:18.660" starttime="20190108 00:20:18.659"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${vlan_list_str}</arg>
<arg>,</arg>
<arg>_</arg>
</arguments>
<assign>
<var>${vlan_list_str}</var>
</assign>
<msg timestamp="20190108 00:20:18.661" level="INFO">${vlan_list_str} = 777</msg>
<status status="PASS" endtime="20190108 00:20:18.661" starttime="20190108 00:20:18.660"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${cfg_prefix}_TransVlan_${vlan_list_str}</arg>
</arguments>
<assign>
<var>${transport_prf}</var>
</assign>
<msg timestamp="20190108 00:20:18.663" level="INFO">${transport_prf} = auto_TransVlan_777</msg>
<status status="PASS" endtime="20190108 00:20:18.663" starttime="20190108 00:20:18.662"></status>
</kw>
<kw type="for" name="${service_point} IN [ @{service_model.${service_point_list}} ]">
<kw type="foritem" name="${service_point} = service_point1">
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${service_model.${service_point}.device}</arg>
</arguments>
<assign>
<var>${device}</var>
</assign>
<msg timestamp="20190108 00:20:18.666" level="INFO">${device} = eutA</msg>
<status status="PASS" endtime="20190108 00:20:18.667" starttime="20190108 00:20:18.665"></status>
</kw>
<kw name="Log" library="BuiltIn">
<arguments>
<arg>****** uplink service add vlan ${vlan_list} for ${device} ${service_point} ******</arg>
</arguments>
<msg timestamp="20190108 00:20:18.669" level="INFO">****** uplink service add vlan 777 for eutA service_point1 ******</msg>
<status status="PASS" endtime="20190108 00:20:18.669" starttime="20190108 00:20:18.667"></status>
</kw>
<kw name="Log" library="BuiltIn">
<arguments>
<arg>create transport-service-profile</arg>
</arguments>
<msg timestamp="20190108 00:20:18.670" level="INFO">create transport-service-profile</msg>
<status status="PASS" endtime="20190108 00:20:18.670" starttime="20190108 00:20:18.669"></status>
</kw>
<kw name="prov_transport_service_profile" library="keyword_command">
<tags>
<tag>@author=BlairWang</tag>
</tags>
<doc>Puts an interface in shutdown mode</doc>
<arguments>
<arg>${device}</arg>
<arg>${transport_prf}</arg>
<arg>${vlan_list}</arg>
</arguments>
<kw name="Axos Cli With Error Check" library="keyword_common">
<tags>
<tag>@author=dfarwell</tag>
</tags>
<doc>Sends a CLI command to DUT and confirms response has no errors, if there is no prompt in your topo file this may need to be adjusted</doc>
<arguments>
<arg>${device}</arg>
<arg>configure</arg>
</arguments>
<kw name="Cli" library="caferobot.command.adapter.CliAdapter">
<doc>Execute command on the specific connection and get the output of it</doc>
<arguments>
<arg>${DUT}</arg>
<arg>${CMD}</arg>
<arg>prompt=${devices.${DUT}.prompt}</arg>
<arg>timeout=${TIMEOUT}</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190108 00:20:18.676" level="INFO">send session_command, cmd=configure, prompt={'#': None}, timeout=30, newline=None, retry=1, timeout_exception=1, exclude_prompt=None</msg>
<msg timestamp="20190108 00:20:18.994" level="INFO">session_command result=configure
Enter configuration commands, one per line. End with CNTL/Z.
NGPON2X4(config)</msg>
<msg timestamp="20190108 00:20:18.994" level="INFO">${res} = configure
Enter configuration commands, one per line. End with CNTL/Z.
NGPON2X4(config)</msg>
<status status="PASS" endtime="20190108 00:20:18.994" starttime="20190108 00:20:18.674"></status>
</kw>
<kw name="Should Not Contain Any" library="BuiltIn">
<doc>Fails if ``container`` contains one or more of the ``*items``.</doc>
<arguments>
<arg>${res}</arg>
<arg>Invalid</arg>
<arg>syntax error</arg>
<arg>Aborted:</arg>
<arg>Error:</arg>
</arguments>
<status status="PASS" endtime="20190108 00:20:18.997" starttime="20190108 00:20:18.996"></status>
</kw>
<status status="PASS" endtime="20190108 00:20:18.998" starttime="20190108 00:20:18.672"></status>
</kw>
<kw name="Axos Cli With Error Check" library="keyword_common">
<tags>
<tag>@author=dfarwell</tag>
</tags>
<doc>Sends a CLI command to DUT and confirms response has no errors, if there is no prompt in your topo file this may need to be adjusted</doc>
<arguments>
<arg>${device}</arg>
<arg>transport-service-profile ${transport-service-profile}</arg>
</arguments>
<kw name="Cli" library="caferobot.command.adapter.CliAdapter">
<doc>Execute command on the specific connection and get the output of it</doc>
<arguments>
<arg>${DUT}</arg>
<arg>${CMD}</arg>
<arg>prompt=${devices.${DUT}.prompt}</arg>
<arg>timeout=${TIMEOUT}</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190108 00:20:19.004" level="INFO">send session_command, cmd=transport-service-profile auto_TransVlan_777, prompt={'#': None}, timeout=30, newline=None, retry=1, timeout_exception=1, exclude_prompt=None</msg>
<msg timestamp="20190108 00:20:19.282" level="INFO">session_command result=transport-service-profile auto_TransVlan_777
NGPON2X4(config-transport-service-profile-auto_TransVlan_777)</msg>
<msg timestamp="20190108 00:20:19.282" level="INFO">${res} = transport-service-profile auto_TransVlan_777
NGPON2X4(config-transport-service-profile-auto_TransVlan_777)</msg>
<status status="PASS" endtime="20190108 00:20:19.282" starttime="20190108 00:20:19.001"></status>
</kw>
<kw name="Should Not Contain Any" library="BuiltIn">
<doc>Fails if ``container`` contains one or more of the ``*items``.</doc>
<arguments>
<arg>${res}</arg>
<arg>Invalid</arg>
<arg>syntax error</arg>
<arg>Aborted:</arg>
<arg>Error:</arg>
</arguments>
<status status="PASS" endtime="20190108 00:20:19.285" starttime="20190108 00:20:19.284"></status>
</kw>
<status status="PASS" endtime="20190108 00:20:19.285" starttime="20190108 00:20:18.999"></status>
</kw>
<kw name="Axos Cli With Error Check" library="keyword_common">
<tags>
<tag>@author=dfarwell</tag>
</tags>
<doc>Sends a CLI command to DUT and confirms response has no errors, if there is no prompt in your topo file this may need to be adjusted</doc>
<arguments>
<arg>${device}</arg>
<arg>vlan-list ${vlan-list}</arg>
</arguments>
<kw name="Cli" library="caferobot.command.adapter.CliAdapter">
<doc>Execute command on the specific connection and get the output of it</doc>
<arguments>
<arg>${DUT}</arg>
<arg>${CMD}</arg>
<arg>prompt=${devices.${DUT}.prompt}</arg>
<arg>timeout=${TIMEOUT}</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190108 00:20:19.291" level="INFO">send session_command, cmd=vlan-list 777, prompt={'#': None}, timeout=30, newline=None, retry=1, timeout_exception=1, exclude_prompt=None</msg>
<msg timestamp="20190108 00:20:19.623" level="INFO">session_command result=vlan-list 777
NGPON2X4(config-transport-service-profile-auto_TransVlan_777)</msg>
<msg timestamp="20190108 00:20:19.624" level="INFO">${res} = vlan-list 777
NGPON2X4(config-transport-service-profile-auto_TransVlan_777)</msg>
<status status="PASS" endtime="20190108 00:20:19.624" starttime="20190108 00:20:19.289"></status>
</kw>
<kw name="Should Not Contain Any" library="BuiltIn">
<doc>Fails if ``container`` contains one or more of the ``*items``.</doc>
<arguments>
<arg>${res}</arg>
<arg>Invalid</arg>
<arg>syntax error</arg>
<arg>Aborted:</arg>
<arg>Error:</arg>
</arguments>
<status status="PASS" endtime="20190108 00:20:19.628" starttime="20190108 00:20:19.627"></status>
</kw>
<status status="PASS" endtime="20190108 00:20:19.629" starttime="20190108 00:20:19.287"></status>
</kw>
<kw type="teardown" name="Axos Cli With Error Check" library="keyword_common">
<tags>
<tag>@author=dfarwell</tag>
</tags>
<doc>Sends a CLI command to DUT and confirms response has no errors, if there is no prompt in your topo file this may need to be adjusted</doc>
<arguments>
<arg>${device}</arg>
<arg>end</arg>
</arguments>
<kw name="Cli" library="caferobot.command.adapter.CliAdapter">
<doc>Execute command on the specific connection and get the output of it</doc>
<arguments>
<arg>${DUT}</arg>
<arg>${CMD}</arg>
<arg>prompt=${devices.${DUT}.prompt}</arg>
<arg>timeout=${TIMEOUT}</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190108 00:20:19.639" level="INFO">send session_command, cmd=end, prompt={'#': None}, timeout=30, newline=None, retry=1, timeout_exception=1, exclude_prompt=None</msg>
<msg timestamp="20190108 00:20:19.973" level="INFO">session_command result=end
NGPON2X4</msg>
<msg timestamp="20190108 00:20:19.974" level="INFO">${res} = end
NGPON2X4</msg>
<status status="PASS" endtime="20190108 00:20:19.974" starttime="20190108 00:20:19.634"></status>
</kw>
<kw name="Should Not Contain Any" library="BuiltIn">
<doc>Fails if ``container`` contains one or more of the ``*items``.</doc>
<arguments>
<arg>${res}</arg>
<arg>Invalid</arg>
<arg>syntax error</arg>
<arg>Aborted:</arg>
<arg>Error:</arg>
</arguments>
<status status="PASS" endtime="20190108 00:20:19.978" starttime="20190108 00:20:19.976"></status>
</kw>
<status status="PASS" endtime="20190108 00:20:19.979" starttime="20190108 00:20:19.632"></status>
</kw>
<status status="PASS" endtime="20190108 00:20:19.980" starttime="20190108 00:20:18.671"></status>
</kw>
<kw name="service_point_add_transport_profile" library="keyword_service_model">
<tags>
<tag>@author=CindyGao</tag>
</tags>
<doc>Description: add transport_profile to service_point interface (This keyword is only internal use, CANNOT be used in TCs)</doc>
<arguments>
<arg>${device}</arg>
<arg>${service_point}</arg>
<arg>${transport_prf}</arg>
</arguments>
<kw name="Run Keyword And Return If" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>'lag'=='${service_model.${service_point}.type}'</arg>
<arg>prov_interface</arg>
<arg>${device}</arg>
<arg>lag</arg>
<arg>${service_model.${service_point}.name}</arg>
<arg>transport-service-profile=${transport_prf}</arg>
</arguments>
<status status="PASS" endtime="20190108 00:20:19.985" starttime="20190108 00:20:19.984"></status>
</kw>
<kw name="Log" library="BuiltIn">
<arguments>
<arg>add transport-service-profile to interface</arg>
</arguments>
<msg timestamp="20190108 00:20:19.987" level="INFO">add transport-service-profile to interface</msg>
<status status="PASS" endtime="20190108 00:20:19.987" starttime="20190108 00:20:19.986"></status>
</kw>
<kw type="for" name="${port_key} IN [ @{service_model.${service_point}.member} ]">
<kw type="foritem" name="${port_key} = interface1">
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${service_model.${service_point}.member.${port_key}}</arg>
</arguments>
<assign>
<var>${port}</var>
</assign>
<msg timestamp="20190108 00:20:19.991" level="INFO">${port} = 1/1/x3</msg>
<status status="PASS" endtime="20190108 00:20:19.991" starttime="20190108 00:20:19.990"></status>
</kw>
<kw name="Log" library="BuiltIn">
<arguments>
<arg>****** provision port ${port} transport-service-profile ******</arg>
</arguments>
<msg timestamp="20190108 00:20:19.993" level="INFO">****** provision port 1/1/x3 transport-service-profile ******</msg>
<status status="PASS" endtime="20190108 00:20:19.993" starttime="20190108 00:20:19.992"></status>
</kw>
<kw name="prov_interface_ethernet" library="keyword_command">
<tags>
<tag>@author=BlairWang</tag>
</tags>
<doc>configure on interface</doc>
<arguments>
<arg>${device}</arg>
<arg>${port}</arg>
<arg>transport-service-profile=${transport_prf}</arg>
</arguments>
<kw name="Axos Cli With Error Check" library="keyword_common">
<tags>
<tag>@author=dfarwell</tag>
</tags>
<doc>Sends a CLI command to DUT and confirms response has no errors, if there is no prompt in your topo file this may need to be adjusted</doc>
<arguments>
<arg>${device}</arg>
<arg>configure</arg>
</arguments>
<kw name="Cli" library="caferobot.command.adapter.CliAdapter">
<doc>Execute command on the specific connection and get the output of it</doc>
<arguments>
<arg>${DUT}</arg>
<arg>${CMD}</arg>
<arg>prompt=${devices.${DUT}.prompt}</arg>
<arg>timeout=${TIMEOUT}</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190108 00:20:20.004" level="INFO">send session_command, cmd=configure, prompt={'#': None}, timeout=30, newline=None, retry=1, timeout_exception=1, exclude_prompt=None</msg>
<msg timestamp="20190108 00:20:20.302" level="INFO">session_command result=configure
Enter configuration commands, one per line. End with CNTL/Z.
NGPON2X4(config)</msg>
<msg timestamp="20190108 00:20:20.302" level="INFO">${res} = configure
Enter configuration commands, one per line. End with CNTL/Z.
NGPON2X4(config)</msg>
<status status="PASS" endtime="20190108 00:20:20.303" starttime="20190108 00:20:19.998"></status>
</kw>
<kw name="Should Not Contain Any" library="BuiltIn">
<doc>Fails if ``container`` contains one or more of the ``*items``.</doc>
<arguments>
<arg>${res}</arg>
<arg>Invalid</arg>
<arg>syntax error</arg>
<arg>Aborted:</arg>
<arg>Error:</arg>
</arguments>
<status status="PASS" endtime="20190108 00:20:20.306" starttime="20190108 00:20:20.305"></status>
</kw>
<status status="PASS" endtime="20190108 00:20:20.306" starttime="20190108 00:20:19.996"></status>
</kw>
<kw name="Axos Cli With Error Check" library="keyword_common">
<tags>
<tag>@author=dfarwell</tag>
</tags>
<doc>Sends a CLI command to DUT and confirms response has no errors, if there is no prompt in your topo file this may need to be adjusted</doc>
<arguments>
<arg>${device}</arg>
<arg>interface ethernet ${interface}</arg>
</arguments>
<kw name="Cli" library="caferobot.command.adapter.CliAdapter">
<doc>Execute command on the specific connection and get the output of it</doc>
<arguments>
<arg>${DUT}</arg>
<arg>${CMD}</arg>
<arg>prompt=${devices.${DUT}.prompt}</arg>
<arg>timeout=${TIMEOUT}</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190108 00:20:20.312" level="INFO">send session_command, cmd=interface ethernet 1/1/x3, prompt={'#': None}, timeout=30, newline=None, retry=1, timeout_exception=1, exclude_prompt=None</msg>
<msg timestamp="20190108 00:20:20.601" level="INFO">session_command result=interface ethernet 1/1/x3
NGPON2X4(config-ethernet-1/1/x3)</msg>
<msg timestamp="20190108 00:20:20.602" level="INFO">${res} = interface ethernet 1/1/x3
NGPON2X4(config-ethernet-1/1/x3)</msg>
<status status="PASS" endtime="20190108 00:20:20.602" starttime="20190108 00:20:20.309"></status>
</kw>
<kw name="Should Not Contain Any" library="BuiltIn">
<doc>Fails if ``container`` contains one or more of the ``*items``.</doc>
<arguments>
<arg>${res}</arg>
<arg>Invalid</arg>
<arg>syntax error</arg>
<arg>Aborted:</arg>
<arg>Error:</arg>
</arguments>
<status status="PASS" endtime="20190108 00:20:20.612" starttime="20190108 00:20:20.611"></status>
</kw>
<status status="PASS" endtime="20190108 00:20:20.612" starttime="20190108 00:20:20.308"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${switchport}"!="${EMPTY}"</arg>
<arg>Axos Cli With Error Check</arg>
<arg>${device}</arg>
<arg>switchport ${switchport}</arg>
</arguments>
<status status="PASS" endtime="20190108 00:20:20.616" starttime="20190108 00:20:20.614"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${interface_role}"!="${EMPTY}"</arg>
<arg>Axos Cli With Error Check</arg>
<arg>${device}</arg>
<arg>role ${interface_role}</arg>
</arguments>
<status status="PASS" endtime="20190108 00:20:20.617" starttime="20190108 00:20:20.616"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${EMPTY}'!='${sub_view_type}'</arg>
<arg>Axos Cli With Error Check</arg>
<arg>${device}</arg>
<arg>${sub_view_type} ${sub_view_value}</arg>
</arguments>
<status status="PASS" endtime="20190108 00:20:20.619" starttime="20190108 00:20:20.618"></status>
</kw>
<kw name="convert_dictionary_to_string" library="keyword_command">
<tags>
<tag>@author=CindyGao</tag>
</tags>
<doc>Description: convert dictionary to string with all key and value</doc>
<arguments>
<arg>&amp;{dict_cmd}</arg>
</arguments>
<assign>
<var>${cmd_string}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${result_string}</var>
</assign>
<msg timestamp="20190108 00:20:20.624" level="INFO">${result_string} = </msg>
<status status="PASS" endtime="20190108 00:20:20.624" starttime="20190108 00:20:20.623"></status>
</kw>
<kw type="for" name="${key} IN [ @{dict.keys()} ]">
<kw type="foritem" name="${key} = transport-service-profile">
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${dict}</arg>
<arg>${key}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190108 00:20:20.628" level="INFO">${value} = auto_TransVlan_777</msg>
<status status="PASS" endtime="20190108 00:20:20.628" starttime="20190108 00:20:20.627"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${result_string} ${key} ${value}</arg>
</arguments>
<assign>
<var>${result_string}</var>
</assign>
<msg timestamp="20190108 00:20:20.630" level="INFO">${result_string} =  transport-service-profile auto_TransVlan_777</msg>
<status status="PASS" endtime="20190108 00:20:20.630" starttime="20190108 00:20:20.628"></status>
</kw>
<status status="PASS" endtime="20190108 00:20:20.630" starttime="20190108 00:20:20.626"></status>
</kw>
<status status="PASS" endtime="20190108 00:20:20.630" starttime="20190108 00:20:20.625"></status>
</kw>
<msg timestamp="20190108 00:20:20.631" level="INFO">${cmd_string} =  transport-service-profile auto_TransVlan_777</msg>
<status status="PASS" endtime="20190108 00:20:20.631" starttime="20190108 00:20:20.621"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${EMPTY}'!='${cmd_string}'</arg>
<arg>Axos Cli With Error Check</arg>
<arg>${device}</arg>
<arg>${cmd_string}</arg>
</arguments>
<kw name="Axos Cli With Error Check" library="keyword_common">
<tags>
<tag>@author=dfarwell</tag>
</tags>
<doc>Sends a CLI command to DUT and confirms response has no errors, if there is no prompt in your topo file this may need to be adjusted</doc>
<arguments>
<arg>${device}</arg>
<arg>${cmd_string}</arg>
</arguments>
<kw name="Cli" library="caferobot.command.adapter.CliAdapter">
<doc>Execute command on the specific connection and get the output of it</doc>
<arguments>
<arg>${DUT}</arg>
<arg>${CMD}</arg>
<arg>prompt=${devices.${DUT}.prompt}</arg>
<arg>timeout=${TIMEOUT}</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190108 00:20:20.638" level="INFO">send session_command, cmd= transport-service-profile auto_TransVlan_777, prompt={'#': None}, timeout=30, newline=None, retry=1, timeout_exception=1, exclude_prompt=None</msg>
<msg timestamp="20190108 00:20:21.210" level="INFO">session_command result= transport-service-profile auto_TransVlan_777
NGPON2X4(config-ethernet-1/1/x3)</msg>
<msg timestamp="20190108 00:20:21.211" level="INFO">${res} =  transport-service-profile auto_TransVlan_777
NGPON2X4(config-ethernet-1/1/x3)</msg>
<status status="PASS" endtime="20190108 00:20:21.211" starttime="20190108 00:20:20.635"></status>
</kw>
<kw name="Should Not Contain Any" library="BuiltIn">
<doc>Fails if ``container`` contains one or more of the ``*items``.</doc>
<arguments>
<arg>${res}</arg>
<arg>Invalid</arg>
<arg>syntax error</arg>
<arg>Aborted:</arg>
<arg>Error:</arg>
</arguments>
<status status="PASS" endtime="20190108 00:20:21.214" starttime="20190108 00:20:21.213"></status>
</kw>
<status status="PASS" endtime="20190108 00:20:21.214" starttime="20190108 00:20:20.633"></status>
</kw>
<status status="PASS" endtime="20190108 00:20:21.218" starttime="20190108 00:20:20.632"></status>
</kw>
<kw type="teardown" name="Axos Cli With Error Check" library="keyword_common">
<tags>
<tag>@author=dfarwell</tag>
</tags>
<doc>Sends a CLI command to DUT and confirms response has no errors, if there is no prompt in your topo file this may need to be adjusted</doc>
<arguments>
<arg>${device}</arg>
<arg>end</arg>
</arguments>
<kw name="Cli" library="caferobot.command.adapter.CliAdapter">
<doc>Execute command on the specific connection and get the output of it</doc>
<arguments>
<arg>${DUT}</arg>
<arg>${CMD}</arg>
<arg>prompt=${devices.${DUT}.prompt}</arg>
<arg>timeout=${TIMEOUT}</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190108 00:20:21.223" level="INFO">send session_command, cmd=end, prompt={'#': None}, timeout=30, newline=None, retry=1, timeout_exception=1, exclude_prompt=None</msg>
<msg timestamp="20190108 00:20:21.551" level="INFO">session_command result=end
NGPON2X4</msg>
<msg timestamp="20190108 00:20:21.552" level="INFO">${res} = end
NGPON2X4</msg>
<status status="PASS" endtime="20190108 00:20:21.552" starttime="20190108 00:20:21.221"></status>
</kw>
<kw name="Should Not Contain Any" library="BuiltIn">
<doc>Fails if ``container`` contains one or more of the ``*items``.</doc>
<arguments>
<arg>${res}</arg>
<arg>Invalid</arg>
<arg>syntax error</arg>
<arg>Aborted:</arg>
<arg>Error:</arg>
</arguments>
<status status="PASS" endtime="20190108 00:20:21.555" starttime="20190108 00:20:21.554"></status>
</kw>
<status status="PASS" endtime="20190108 00:20:21.556" starttime="20190108 00:20:21.219"></status>
</kw>
<status status="PASS" endtime="20190108 00:20:21.558" starttime="20190108 00:20:19.994"></status>
</kw>
<kw name="check_running_config_interface" library="keyword_command">
<tags>
<tag>@author=CindyGao</tag>
</tags>
<doc>Description: check "show running-config interface ${port_type} ${port_name} ${query_cmd}" information</doc>
<arguments>
<arg>${device}</arg>
<arg>ethernet</arg>
<arg>${port}</arg>
<arg>transport-service-profile=${transport_prf}</arg>
</arguments>
<kw name="Axos Cli With Error Check" library="keyword_common">
<tags>
<tag>@author=dfarwell</tag>
</tags>
<doc>Sends a CLI command to DUT and confirms response has no errors, if there is no prompt in your topo file this may need to be adjusted</doc>
<arguments>
<arg>${device}</arg>
<arg>show running-config interface ${port_type} ${port_name} ${query_cmd}</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<kw name="Cli" library="caferobot.command.adapter.CliAdapter">
<doc>Execute command on the specific connection and get the output of it</doc>
<arguments>
<arg>${DUT}</arg>
<arg>${CMD}</arg>
<arg>prompt=${devices.${DUT}.prompt}</arg>
<arg>timeout=${TIMEOUT}</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190108 00:20:21.581" level="INFO">send session_command, cmd=show running-config interface ethernet 1/1/x3 , prompt={'#': None}, timeout=30, newline=None, retry=1, timeout_exception=1, exclude_prompt=None</msg>
<msg timestamp="20190108 00:20:32.015" level="INFO">session_command result=show running-config interface ethernet 1/1/x3 
interface ethernet 1/1/x3
 no shutdown
 role                      inni
 transport-service-profile auto_TransVlan_777
!
NGPON2X4</msg>
<msg timestamp="20190108 00:20:32.016" level="INFO">${res} = show running-config interface ethernet 1/1/x3 
interface ethernet 1/1/x3
 no shutdown
 role                      inni
 transport-service-profile auto_TransVlan_777
!
NGPON2X4</msg>
<status status="PASS" endtime="20190108 00:20:32.016" starttime="20190108 00:20:21.573"></status>
</kw>
<kw name="Should Not Contain Any" library="BuiltIn">
<doc>Fails if ``container`` contains one or more of the ``*items``.</doc>
<arguments>
<arg>${res}</arg>
<arg>Invalid</arg>
<arg>syntax error</arg>
<arg>Aborted:</arg>
<arg>Error:</arg>
</arguments>
<status status="PASS" endtime="20190108 00:20:32.020" starttime="20190108 00:20:32.018"></status>
</kw>
<msg timestamp="20190108 00:20:32.021" level="INFO">${res} = show running-config interface ethernet 1/1/x3 
interface ethernet 1/1/x3
 no shutdown
 role                      inni
 transport-service-profile auto_TransVlan_777
!
NGPON2X4</msg>
<status status="PASS" endtime="20190108 00:20:32.021" starttime="20190108 00:20:21.571"></status>
</kw>
<kw name="Get Dictionary Keys" library="Collections">
<doc>Returns keys of the given ``dictionary``.</doc>
<arguments>
<arg>${dict_check_item}</arg>
</arguments>
<assign>
<var>@{list_key}</var>
</assign>
<msg timestamp="20190108 00:20:32.023" level="INFO">@{list_key} = [ transport-service-profile ]</msg>
<status status="PASS" endtime="20190108 00:20:32.024" starttime="20190108 00:20:32.022"></status>
</kw>
<kw type="for" name="${check_item} IN [ @{list_key} ]">
<kw type="foritem" name="${check_item} = transport-service-profile">
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${dict_check_item}</arg>
<arg>${check_item}</arg>
</arguments>
<assign>
<var>${exp_value}</var>
</assign>
<msg timestamp="20190108 00:20:32.027" level="INFO">${exp_value} = auto_TransVlan_777</msg>
<status status="PASS" endtime="20190108 00:20:32.027" starttime="20190108 00:20:32.026"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${res}</arg>
<arg>${check_item}\\s+${exp_value}</arg>
</arguments>
<status status="PASS" endtime="20190108 00:20:32.029" starttime="20190108 00:20:32.028"></status>
</kw>
<status status="PASS" endtime="20190108 00:20:32.029" starttime="20190108 00:20:32.025"></status>
</kw>
<status status="PASS" endtime="20190108 00:20:32.030" starttime="20190108 00:20:32.024"></status>
</kw>
<status status="PASS" endtime="20190108 00:20:32.030" starttime="20190108 00:20:21.568"></status>
</kw>
<status status="PASS" endtime="20190108 00:20:32.033" starttime="20190108 00:20:19.989"></status>
</kw>
<status status="PASS" endtime="20190108 00:20:32.034" starttime="20190108 00:20:19.988"></status>
</kw>
<status status="PASS" endtime="20190108 00:20:32.036" starttime="20190108 00:20:19.982"></status>
</kw>
<status status="PASS" endtime="20190108 00:20:32.038" starttime="20190108 00:20:18.665"></status>
</kw>
<kw type="foritem" name="${service_point} = service_point2">
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${service_model.${service_point}.device}</arg>
</arguments>
<assign>
<var>${device}</var>
</assign>
<msg timestamp="20190108 00:20:32.042" level="INFO">${device} = eutA</msg>
<status status="PASS" endtime="20190108 00:20:32.042" starttime="20190108 00:20:32.041"></status>
</kw>
<kw name="Log" library="BuiltIn">
<arguments>
<arg>****** uplink service add vlan ${vlan_list} for ${device} ${service_point} ******</arg>
</arguments>
<msg timestamp="20190108 00:20:32.044" level="INFO">****** uplink service add vlan 777 for eutA service_point2 ******</msg>
<status status="PASS" endtime="20190108 00:20:32.044" starttime="20190108 00:20:32.043"></status>
</kw>
<kw name="Log" library="BuiltIn">
<arguments>
<arg>create transport-service-profile</arg>
</arguments>
<msg timestamp="20190108 00:20:32.046" level="INFO">create transport-service-profile</msg>
<status status="PASS" endtime="20190108 00:20:32.046" starttime="20190108 00:20:32.045"></status>
</kw>
<kw name="prov_transport_service_profile" library="keyword_command">
<tags>
<tag>@author=BlairWang</tag>
</tags>
<doc>Puts an interface in shutdown mode</doc>
<arguments>
<arg>${device}</arg>
<arg>${transport_prf}</arg>
<arg>${vlan_list}</arg>
</arguments>
<kw name="Axos Cli With Error Check" library="keyword_common">
<tags>
<tag>@author=dfarwell</tag>
</tags>
<doc>Sends a CLI command to DUT and confirms response has no errors, if there is no prompt in your topo file this may need to be adjusted</doc>
<arguments>
<arg>${device}</arg>
<arg>configure</arg>
</arguments>
<kw name="Cli" library="caferobot.command.adapter.CliAdapter">
<doc>Execute command on the specific connection and get the output of it</doc>
<arguments>
<arg>${DUT}</arg>
<arg>${CMD}</arg>
<arg>prompt=${devices.${DUT}.prompt}</arg>
<arg>timeout=${TIMEOUT}</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190108 00:20:32.054" level="INFO">send session_command, cmd=configure, prompt={'#': None}, timeout=30, newline=None, retry=1, timeout_exception=1, exclude_prompt=None</msg>
<msg timestamp="20190108 00:20:32.343" level="INFO">session_command result=configure
Enter configuration commands, one per line. End with CNTL/Z.
NGPON2X4(config)</msg>
<msg timestamp="20190108 00:20:32.343" level="INFO">${res} = configure
Enter configuration commands, one per line. End with CNTL/Z.
NGPON2X4(config)</msg>
<status status="PASS" endtime="20190108 00:20:32.344" starttime="20190108 00:20:32.051"></status>
</kw>
<kw name="Should Not Contain Any" library="BuiltIn">
<doc>Fails if ``container`` contains one or more of the ``*items``.</doc>
<arguments>
<arg>${res}</arg>
<arg>Invalid</arg>
<arg>syntax error</arg>
<arg>Aborted:</arg>
<arg>Error:</arg>
</arguments>
<status status="PASS" endtime="20190108 00:20:32.347" starttime="20190108 00:20:32.346"></status>
</kw>
<status status="PASS" endtime="20190108 00:20:32.347" starttime="20190108 00:20:32.049"></status>
</kw>
<kw name="Axos Cli With Error Check" library="keyword_common">
<tags>
<tag>@author=dfarwell</tag>
</tags>
<doc>Sends a CLI command to DUT and confirms response has no errors, if there is no prompt in your topo file this may need to be adjusted</doc>
<arguments>
<arg>${device}</arg>
<arg>transport-service-profile ${transport-service-profile}</arg>
</arguments>
<kw name="Cli" library="caferobot.command.adapter.CliAdapter">
<doc>Execute command on the specific connection and get the output of it</doc>
<arguments>
<arg>${DUT}</arg>
<arg>${CMD}</arg>
<arg>prompt=${devices.${DUT}.prompt}</arg>
<arg>timeout=${TIMEOUT}</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190108 00:20:32.355" level="INFO">send session_command, cmd=transport-service-profile auto_TransVlan_777, prompt={'#': None}, timeout=30, newline=None, retry=1, timeout_exception=1, exclude_prompt=None</msg>
<msg timestamp="20190108 00:20:32.673" level="INFO">session_command result=transport-service-profile auto_TransVlan_777
NGPON2X4(config-transport-service-profile-auto_TransVlan_777)</msg>
<msg timestamp="20190108 00:20:32.674" level="INFO">${res} = transport-service-profile auto_TransVlan_777
NGPON2X4(config-transport-service-profile-auto_TransVlan_777)</msg>
<status status="PASS" endtime="20190108 00:20:32.674" starttime="20190108 00:20:32.351"></status>
</kw>
<kw name="Should Not Contain Any" library="BuiltIn">
<doc>Fails if ``container`` contains one or more of the ``*items``.</doc>
<arguments>
<arg>${res}</arg>
<arg>Invalid</arg>
<arg>syntax error</arg>
<arg>Aborted:</arg>
<arg>Error:</arg>
</arguments>
<status status="PASS" endtime="20190108 00:20:32.678" starttime="20190108 00:20:32.676"></status>
</kw>
<status status="PASS" endtime="20190108 00:20:32.678" starttime="20190108 00:20:32.349"></status>
</kw>
<kw name="Axos Cli With Error Check" library="keyword_common">
<tags>
<tag>@author=dfarwell</tag>
</tags>
<doc>Sends a CLI command to DUT and confirms response has no errors, if there is no prompt in your topo file this may need to be adjusted</doc>
<arguments>
<arg>${device}</arg>
<arg>vlan-list ${vlan-list}</arg>
</arguments>
<kw name="Cli" library="caferobot.command.adapter.CliAdapter">
<doc>Execute command on the specific connection and get the output of it</doc>
<arguments>
<arg>${DUT}</arg>
<arg>${CMD}</arg>
<arg>prompt=${devices.${DUT}.prompt}</arg>
<arg>timeout=${TIMEOUT}</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190108 00:20:32.684" level="INFO">send session_command, cmd=vlan-list 777, prompt={'#': None}, timeout=30, newline=None, retry=1, timeout_exception=1, exclude_prompt=None</msg>
<msg timestamp="20190108 00:20:32.982" level="INFO">session_command result=vlan-list 777
NGPON2X4(config-transport-service-profile-auto_TransVlan_777)</msg>
<msg timestamp="20190108 00:20:32.983" level="INFO">${res} = vlan-list 777
NGPON2X4(config-transport-service-profile-auto_TransVlan_777)</msg>
<status status="PASS" endtime="20190108 00:20:32.983" starttime="20190108 00:20:32.681"></status>
</kw>
<kw name="Should Not Contain Any" library="BuiltIn">
<doc>Fails if ``container`` contains one or more of the ``*items``.</doc>
<arguments>
<arg>${res}</arg>
<arg>Invalid</arg>
<arg>syntax error</arg>
<arg>Aborted:</arg>
<arg>Error:</arg>
</arguments>
<status status="PASS" endtime="20190108 00:20:32.985" starttime="20190108 00:20:32.984"></status>
</kw>
<status status="PASS" endtime="20190108 00:20:32.985" starttime="20190108 00:20:32.680"></status>
</kw>
<kw type="teardown" name="Axos Cli With Error Check" library="keyword_common">
<tags>
<tag>@author=dfarwell</tag>
</tags>
<doc>Sends a CLI command to DUT and confirms response has no errors, if there is no prompt in your topo file this may need to be adjusted</doc>
<arguments>
<arg>${device}</arg>
<arg>end</arg>
</arguments>
<kw name="Cli" library="caferobot.command.adapter.CliAdapter">
<doc>Execute command on the specific connection and get the output of it</doc>
<arguments>
<arg>${DUT}</arg>
<arg>${CMD}</arg>
<arg>prompt=${devices.${DUT}.prompt}</arg>
<arg>timeout=${TIMEOUT}</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190108 00:20:32.995" level="INFO">send session_command, cmd=end, prompt={'#': None}, timeout=30, newline=None, retry=1, timeout_exception=1, exclude_prompt=None</msg>
<msg timestamp="20190108 00:20:33.353" level="INFO">session_command result=end
NGPON2X4</msg>
<msg timestamp="20190108 00:20:33.354" level="INFO">${res} = end
NGPON2X4</msg>
<status status="PASS" endtime="20190108 00:20:33.354" starttime="20190108 00:20:32.989"></status>
</kw>
<kw name="Should Not Contain Any" library="BuiltIn">
<doc>Fails if ``container`` contains one or more of the ``*items``.</doc>
<arguments>
<arg>${res}</arg>
<arg>Invalid</arg>
<arg>syntax error</arg>
<arg>Aborted:</arg>
<arg>Error:</arg>
</arguments>
<status status="PASS" endtime="20190108 00:20:33.357" starttime="20190108 00:20:33.356"></status>
</kw>
<status status="PASS" endtime="20190108 00:20:33.357" starttime="20190108 00:20:32.988"></status>
</kw>
<status status="PASS" endtime="20190108 00:20:33.359" starttime="20190108 00:20:32.047"></status>
</kw>
<kw name="service_point_add_transport_profile" library="keyword_service_model">
<tags>
<tag>@author=CindyGao</tag>
</tags>
<doc>Description: add transport_profile to service_point interface (This keyword is only internal use, CANNOT be used in TCs)</doc>
<arguments>
<arg>${device}</arg>
<arg>${service_point}</arg>
<arg>${transport_prf}</arg>
</arguments>
<kw name="Run Keyword And Return If" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>'lag'=='${service_model.${service_point}.type}'</arg>
<arg>prov_interface</arg>
<arg>${device}</arg>
<arg>lag</arg>
<arg>${service_model.${service_point}.name}</arg>
<arg>transport-service-profile=${transport_prf}</arg>
</arguments>
<status status="PASS" endtime="20190108 00:20:33.364" starttime="20190108 00:20:33.363"></status>
</kw>
<kw name="Log" library="BuiltIn">
<arguments>
<arg>add transport-service-profile to interface</arg>
</arguments>
<msg timestamp="20190108 00:20:33.365" level="INFO">add transport-service-profile to interface</msg>
<status status="PASS" endtime="20190108 00:20:33.366" starttime="20190108 00:20:33.364"></status>
</kw>
<kw type="for" name="${port_key} IN [ @{service_model.${service_point}.member} ]">
<kw type="foritem" name="${port_key} = interface1">
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${service_model.${service_point}.member.${port_key}}</arg>
</arguments>
<assign>
<var>${port}</var>
</assign>
<msg timestamp="20190108 00:20:33.370" level="INFO">${port} = 1/1/x4</msg>
<status status="PASS" endtime="20190108 00:20:33.370" starttime="20190108 00:20:33.368"></status>
</kw>
<kw name="Log" library="BuiltIn">
<arguments>
<arg>****** provision port ${port} transport-service-profile ******</arg>
</arguments>
<msg timestamp="20190108 00:20:33.372" level="INFO">****** provision port 1/1/x4 transport-service-profile ******</msg>
<status status="PASS" endtime="20190108 00:20:33.373" starttime="20190108 00:20:33.370"></status>
</kw>
<kw name="prov_interface_ethernet" library="keyword_command">
<tags>
<tag>@author=BlairWang</tag>
</tags>
<doc>configure on interface</doc>
<arguments>
<arg>${device}</arg>
<arg>${port}</arg>
<arg>transport-service-profile=${transport_prf}</arg>
</arguments>
<kw name="Axos Cli With Error Check" library="keyword_common">
<tags>
<tag>@author=dfarwell</tag>
</tags>
<doc>Sends a CLI command to DUT and confirms response has no errors, if there is no prompt in your topo file this may need to be adjusted</doc>
<arguments>
<arg>${device}</arg>
<arg>configure</arg>
</arguments>
<kw name="Cli" library="caferobot.command.adapter.CliAdapter">
<doc>Execute command on the specific connection and get the output of it</doc>
<arguments>
<arg>${DUT}</arg>
<arg>${CMD}</arg>
<arg>prompt=${devices.${DUT}.prompt}</arg>
<arg>timeout=${TIMEOUT}</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190108 00:20:33.379" level="INFO">send session_command, cmd=configure, prompt={'#': None}, timeout=30, newline=None, retry=1, timeout_exception=1, exclude_prompt=None</msg>
<msg timestamp="20190108 00:20:33.684" level="INFO">session_command result=configure
Enter configuration commands, one per line. End with CNTL/Z.
NGPON2X4(config)</msg>
<msg timestamp="20190108 00:20:33.685" level="INFO">${res} = configure
Enter configuration commands, one per line. End with CNTL/Z.
NGPON2X4(config)</msg>
<status status="PASS" endtime="20190108 00:20:33.686" starttime="20190108 00:20:33.376"></status>
</kw>
<kw name="Should Not Contain Any" library="BuiltIn">
<doc>Fails if ``container`` contains one or more of the ``*items``.</doc>
<arguments>
<arg>${res}</arg>
<arg>Invalid</arg>
<arg>syntax error</arg>
<arg>Aborted:</arg>
<arg>Error:</arg>
</arguments>
<status status="PASS" endtime="20190108 00:20:33.693" starttime="20190108 00:20:33.691"></status>
</kw>
<status status="PASS" endtime="20190108 00:20:33.694" starttime="20190108 00:20:33.375"></status>
</kw>
<kw name="Axos Cli With Error Check" library="keyword_common">
<tags>
<tag>@author=dfarwell</tag>
</tags>
<doc>Sends a CLI command to DUT and confirms response has no errors, if there is no prompt in your topo file this may need to be adjusted</doc>
<arguments>
<arg>${device}</arg>
<arg>interface ethernet ${interface}</arg>
</arguments>
<kw name="Cli" library="caferobot.command.adapter.CliAdapter">
<doc>Execute command on the specific connection and get the output of it</doc>
<arguments>
<arg>${DUT}</arg>
<arg>${CMD}</arg>
<arg>prompt=${devices.${DUT}.prompt}</arg>
<arg>timeout=${TIMEOUT}</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190108 00:20:33.702" level="INFO">send session_command, cmd=interface ethernet 1/1/x4, prompt={'#': None}, timeout=30, newline=None, retry=1, timeout_exception=1, exclude_prompt=None</msg>
<msg timestamp="20190108 00:20:33.963" level="INFO">session_command result=interface ethernet 1/1/x4
NGPON2X4(config-ethernet-1/1/x4)</msg>
<msg timestamp="20190108 00:20:33.964" level="INFO">${res} = interface ethernet 1/1/x4
NGPON2X4(config-ethernet-1/1/x4)</msg>
<status status="PASS" endtime="20190108 00:20:33.964" starttime="20190108 00:20:33.698"></status>
</kw>
<kw name="Should Not Contain Any" library="BuiltIn">
<doc>Fails if ``container`` contains one or more of the ``*items``.</doc>
<arguments>
<arg>${res}</arg>
<arg>Invalid</arg>
<arg>syntax error</arg>
<arg>Aborted:</arg>
<arg>Error:</arg>
</arguments>
<status status="PASS" endtime="20190108 00:20:33.966" starttime="20190108 00:20:33.965"></status>
</kw>
<status status="PASS" endtime="20190108 00:20:33.967" starttime="20190108 00:20:33.696"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${switchport}"!="${EMPTY}"</arg>
<arg>Axos Cli With Error Check</arg>
<arg>${device}</arg>
<arg>switchport ${switchport}</arg>
</arguments>
<status status="PASS" endtime="20190108 00:20:33.969" starttime="20190108 00:20:33.968"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${interface_role}"!="${EMPTY}"</arg>
<arg>Axos Cli With Error Check</arg>
<arg>${device}</arg>
<arg>role ${interface_role}</arg>
</arguments>
<status status="PASS" endtime="20190108 00:20:33.971" starttime="20190108 00:20:33.970"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${EMPTY}'!='${sub_view_type}'</arg>
<arg>Axos Cli With Error Check</arg>
<arg>${device}</arg>
<arg>${sub_view_type} ${sub_view_value}</arg>
</arguments>
<status status="PASS" endtime="20190108 00:20:33.973" starttime="20190108 00:20:33.972"></status>
</kw>
<kw name="convert_dictionary_to_string" library="keyword_command">
<tags>
<tag>@author=CindyGao</tag>
</tags>
<doc>Description: convert dictionary to string with all key and value</doc>
<arguments>
<arg>&amp;{dict_cmd}</arg>
</arguments>
<assign>
<var>${cmd_string}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${result_string}</var>
</assign>
<msg timestamp="20190108 00:20:33.978" level="INFO">${result_string} = </msg>
<status status="PASS" endtime="20190108 00:20:33.978" starttime="20190108 00:20:33.977"></status>
</kw>
<kw type="for" name="${key} IN [ @{dict.keys()} ]">
<kw type="foritem" name="${key} = transport-service-profile">
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${dict}</arg>
<arg>${key}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190108 00:20:33.981" level="INFO">${value} = auto_TransVlan_777</msg>
<status status="PASS" endtime="20190108 00:20:33.981" starttime="20190108 00:20:33.980"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${result_string} ${key} ${value}</arg>
</arguments>
<assign>
<var>${result_string}</var>
</assign>
<msg timestamp="20190108 00:20:33.983" level="INFO">${result_string} =  transport-service-profile auto_TransVlan_777</msg>
<status status="PASS" endtime="20190108 00:20:33.983" starttime="20190108 00:20:33.982"></status>
</kw>
<status status="PASS" endtime="20190108 00:20:33.983" starttime="20190108 00:20:33.979"></status>
</kw>
<status status="PASS" endtime="20190108 00:20:33.983" starttime="20190108 00:20:33.978"></status>
</kw>
<msg timestamp="20190108 00:20:33.984" level="INFO">${cmd_string} =  transport-service-profile auto_TransVlan_777</msg>
<status status="PASS" endtime="20190108 00:20:33.984" starttime="20190108 00:20:33.975"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${EMPTY}'!='${cmd_string}'</arg>
<arg>Axos Cli With Error Check</arg>
<arg>${device}</arg>
<arg>${cmd_string}</arg>
</arguments>
<kw name="Axos Cli With Error Check" library="keyword_common">
<tags>
<tag>@author=dfarwell</tag>
</tags>
<doc>Sends a CLI command to DUT and confirms response has no errors, if there is no prompt in your topo file this may need to be adjusted</doc>
<arguments>
<arg>${device}</arg>
<arg>${cmd_string}</arg>
</arguments>
<kw name="Cli" library="caferobot.command.adapter.CliAdapter">
<doc>Execute command on the specific connection and get the output of it</doc>
<arguments>
<arg>${DUT}</arg>
<arg>${CMD}</arg>
<arg>prompt=${devices.${DUT}.prompt}</arg>
<arg>timeout=${TIMEOUT}</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190108 00:20:33.990" level="INFO">send session_command, cmd= transport-service-profile auto_TransVlan_777, prompt={'#': None}, timeout=30, newline=None, retry=1, timeout_exception=1, exclude_prompt=None</msg>
<msg timestamp="20190108 00:20:34.556" level="INFO">session_command result= transport-service-profile auto_TransVlan_777
NGPON2X4(config-ethernet-1/1/x4)</msg>
<msg timestamp="20190108 00:20:34.557" level="INFO">${res} =  transport-service-profile auto_TransVlan_777
NGPON2X4(config-ethernet-1/1/x4)</msg>
<status status="PASS" endtime="20190108 00:20:34.557" starttime="20190108 00:20:33.988"></status>
</kw>
<kw name="Should Not Contain Any" library="BuiltIn">
<doc>Fails if ``container`` contains one or more of the ``*items``.</doc>
<arguments>
<arg>${res}</arg>
<arg>Invalid</arg>
<arg>syntax error</arg>
<arg>Aborted:</arg>
<arg>Error:</arg>
</arguments>
<status status="PASS" endtime="20190108 00:20:34.560" starttime="20190108 00:20:34.559"></status>
</kw>
<status status="PASS" endtime="20190108 00:20:34.561" starttime="20190108 00:20:33.986"></status>
</kw>
<status status="PASS" endtime="20190108 00:20:34.562" starttime="20190108 00:20:33.985"></status>
</kw>
<kw type="teardown" name="Axos Cli With Error Check" library="keyword_common">
<tags>
<tag>@author=dfarwell</tag>
</tags>
<doc>Sends a CLI command to DUT and confirms response has no errors, if there is no prompt in your topo file this may need to be adjusted</doc>
<arguments>
<arg>${device}</arg>
<arg>end</arg>
</arguments>
<kw name="Cli" library="caferobot.command.adapter.CliAdapter">
<doc>Execute command on the specific connection and get the output of it</doc>
<arguments>
<arg>${DUT}</arg>
<arg>${CMD}</arg>
<arg>prompt=${devices.${DUT}.prompt}</arg>
<arg>timeout=${TIMEOUT}</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190108 00:20:34.569" level="INFO">send session_command, cmd=end, prompt={'#': None}, timeout=30, newline=None, retry=1, timeout_exception=1, exclude_prompt=None</msg>
<msg timestamp="20190108 00:20:34.899" level="INFO">session_command result=end
NGPON2X4</msg>
<msg timestamp="20190108 00:20:34.900" level="INFO">${res} = end
NGPON2X4</msg>
<status status="PASS" endtime="20190108 00:20:34.900" starttime="20190108 00:20:34.565"></status>
</kw>
<kw name="Should Not Contain Any" library="BuiltIn">
<doc>Fails if ``container`` contains one or more of the ``*items``.</doc>
<arguments>
<arg>${res}</arg>
<arg>Invalid</arg>
<arg>syntax error</arg>
<arg>Aborted:</arg>
<arg>Error:</arg>
</arguments>
<status status="PASS" endtime="20190108 00:20:34.908" starttime="20190108 00:20:34.907"></status>
</kw>
<status status="PASS" endtime="20190108 00:20:34.908" starttime="20190108 00:20:34.564"></status>
</kw>
<status status="PASS" endtime="20190108 00:20:34.913" starttime="20190108 00:20:33.373"></status>
</kw>
<kw name="check_running_config_interface" library="keyword_command">
<tags>
<tag>@author=CindyGao</tag>
</tags>
<doc>Description: check "show running-config interface ${port_type} ${port_name} ${query_cmd}" information</doc>
<arguments>
<arg>${device}</arg>
<arg>ethernet</arg>
<arg>${port}</arg>
<arg>transport-service-profile=${transport_prf}</arg>
</arguments>
<kw name="Axos Cli With Error Check" library="keyword_common">
<tags>
<tag>@author=dfarwell</tag>
</tags>
<doc>Sends a CLI command to DUT and confirms response has no errors, if there is no prompt in your topo file this may need to be adjusted</doc>
<arguments>
<arg>${device}</arg>
<arg>show running-config interface ${port_type} ${port_name} ${query_cmd}</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<kw name="Cli" library="caferobot.command.adapter.CliAdapter">
<doc>Execute command on the specific connection and get the output of it</doc>
<arguments>
<arg>${DUT}</arg>
<arg>${CMD}</arg>
<arg>prompt=${devices.${DUT}.prompt}</arg>
<arg>timeout=${TIMEOUT}</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190108 00:20:34.937" level="INFO">send session_command, cmd=show running-config interface ethernet 1/1/x4 , prompt={'#': None}, timeout=30, newline=None, retry=1, timeout_exception=1, exclude_prompt=None</msg>
<msg timestamp="20190108 00:20:45.434" level="INFO">session_command result=show running-config interface ethernet 1/1/x4 
interface ethernet 1/1/x4
 no shutdown
 role                      inni
 transport-service-profile auto_TransVlan_777
 erps-ring 2
  role secondary
 !
!
NGPON2X4</msg>
<msg timestamp="20190108 00:20:45.435" level="INFO">${res} = show running-config interface ethernet 1/1/x4 
interface ethernet 1/1/x4
 no shutdown
 role                      inni
 transport-service-profile auto_TransVlan_777
 erps-ring 2
  role secondary...</msg>
<status status="PASS" endtime="20190108 00:20:45.435" starttime="20190108 00:20:34.930"></status>
</kw>
<kw name="Should Not Contain Any" library="BuiltIn">
<doc>Fails if ``container`` contains one or more of the ``*items``.</doc>
<arguments>
<arg>${res}</arg>
<arg>Invalid</arg>
<arg>syntax error</arg>
<arg>Aborted:</arg>
<arg>Error:</arg>
</arguments>
<status status="PASS" endtime="20190108 00:20:45.439" starttime="20190108 00:20:45.438"></status>
</kw>
<msg timestamp="20190108 00:20:45.440" level="INFO">${res} = show running-config interface ethernet 1/1/x4 
interface ethernet 1/1/x4
 no shutdown
 role                      inni
 transport-service-profile auto_TransVlan_777
 erps-ring 2
  role secondary...</msg>
<status status="PASS" endtime="20190108 00:20:45.440" starttime="20190108 00:20:34.928"></status>
</kw>
<kw name="Get Dictionary Keys" library="Collections">
<doc>Returns keys of the given ``dictionary``.</doc>
<arguments>
<arg>${dict_check_item}</arg>
</arguments>
<assign>
<var>@{list_key}</var>
</assign>
<msg timestamp="20190108 00:20:45.442" level="INFO">@{list_key} = [ transport-service-profile ]</msg>
<status status="PASS" endtime="20190108 00:20:45.442" starttime="20190108 00:20:45.441"></status>
</kw>
<kw type="for" name="${check_item} IN [ @{list_key} ]">
<kw type="foritem" name="${check_item} = transport-service-profile">
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${dict_check_item}</arg>
<arg>${check_item}</arg>
</arguments>
<assign>
<var>${exp_value}</var>
</assign>
<msg timestamp="20190108 00:20:45.445" level="INFO">${exp_value} = auto_TransVlan_777</msg>
<status status="PASS" endtime="20190108 00:20:45.445" starttime="20190108 00:20:45.444"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${res}</arg>
<arg>${check_item}\\s+${exp_value}</arg>
</arguments>
<status status="PASS" endtime="20190108 00:20:45.447" starttime="20190108 00:20:45.446"></status>
</kw>
<status status="PASS" endtime="20190108 00:20:45.447" starttime="20190108 00:20:45.444"></status>
</kw>
<status status="PASS" endtime="20190108 00:20:45.448" starttime="20190108 00:20:45.443"></status>
</kw>
<status status="PASS" endtime="20190108 00:20:45.449" starttime="20190108 00:20:34.926"></status>
</kw>
<status status="PASS" endtime="20190108 00:20:45.450" starttime="20190108 00:20:33.367"></status>
</kw>
<status status="PASS" endtime="20190108 00:20:45.451" starttime="20190108 00:20:33.366"></status>
</kw>
<status status="PASS" endtime="20190108 00:20:45.455" starttime="20190108 00:20:33.361"></status>
</kw>
<status status="PASS" endtime="20190108 00:20:45.463" starttime="20190108 00:20:32.040"></status>
</kw>
<kw type="foritem" name="${service_point} = service_point3">
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${service_model.${service_point}.device}</arg>
</arguments>
<assign>
<var>${device}</var>
</assign>
<msg timestamp="20190108 00:20:45.468" level="INFO">${device} = eutA</msg>
<status status="PASS" endtime="20190108 00:20:45.468" starttime="20190108 00:20:45.467"></status>
</kw>
<kw name="Log" library="BuiltIn">
<arguments>
<arg>****** uplink service add vlan ${vlan_list} for ${device} ${service_point} ******</arg>
</arguments>
<msg timestamp="20190108 00:20:45.469" level="INFO">****** uplink service add vlan 777 for eutA service_point3 ******</msg>
<status status="PASS" endtime="20190108 00:20:45.470" starttime="20190108 00:20:45.469"></status>
</kw>
<kw name="Log" library="BuiltIn">
<arguments>
<arg>create transport-service-profile</arg>
</arguments>
<msg timestamp="20190108 00:20:45.471" level="INFO">create transport-service-profile</msg>
<status status="PASS" endtime="20190108 00:20:45.471" starttime="20190108 00:20:45.470"></status>
</kw>
<kw name="prov_transport_service_profile" library="keyword_command">
<tags>
<tag>@author=BlairWang</tag>
</tags>
<doc>Puts an interface in shutdown mode</doc>
<arguments>
<arg>${device}</arg>
<arg>${transport_prf}</arg>
<arg>${vlan_list}</arg>
</arguments>
<kw name="Axos Cli With Error Check" library="keyword_common">
<tags>
<tag>@author=dfarwell</tag>
</tags>
<doc>Sends a CLI command to DUT and confirms response has no errors, if there is no prompt in your topo file this may need to be adjusted</doc>
<arguments>
<arg>${device}</arg>
<arg>configure</arg>
</arguments>
<kw name="Cli" library="caferobot.command.adapter.CliAdapter">
<doc>Execute command on the specific connection and get the output of it</doc>
<arguments>
<arg>${DUT}</arg>
<arg>${CMD}</arg>
<arg>prompt=${devices.${DUT}.prompt}</arg>
<arg>timeout=${TIMEOUT}</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190108 00:20:45.478" level="INFO">send session_command, cmd=configure, prompt={'#': None}, timeout=30, newline=None, retry=1, timeout_exception=1, exclude_prompt=None</msg>
<msg timestamp="20190108 00:20:45.788" level="INFO">session_command result=configure
Enter configuration commands, one per line. End with CNTL/Z.
Current configuration users:
sysadmin ssh (cli from 10.200.201.26) on since 2019-01-07 23:52:17 terminal mode
NGPON2X4(config)</msg>
<msg timestamp="20190108 00:20:45.789" level="INFO">${res} = configure
Enter configuration commands, one per line. End with CNTL/Z.
Current configuration users:
sysadmin ssh (cli from 10.200.201.26) on since 2019-01-07 23:52:17 terminal mode
NGPON2X4(config...</msg>
<status status="PASS" endtime="20190108 00:20:45.789" starttime="20190108 00:20:45.475"></status>
</kw>
<kw name="Should Not Contain Any" library="BuiltIn">
<doc>Fails if ``container`` contains one or more of the ``*items``.</doc>
<arguments>
<arg>${res}</arg>
<arg>Invalid</arg>
<arg>syntax error</arg>
<arg>Aborted:</arg>
<arg>Error:</arg>
</arguments>
<status status="PASS" endtime="20190108 00:20:45.793" starttime="20190108 00:20:45.792"></status>
</kw>
<status status="PASS" endtime="20190108 00:20:45.794" starttime="20190108 00:20:45.473"></status>
</kw>
<kw name="Axos Cli With Error Check" library="keyword_common">
<tags>
<tag>@author=dfarwell</tag>
</tags>
<doc>Sends a CLI command to DUT and confirms response has no errors, if there is no prompt in your topo file this may need to be adjusted</doc>
<arguments>
<arg>${device}</arg>
<arg>transport-service-profile ${transport-service-profile}</arg>
</arguments>
<kw name="Cli" library="caferobot.command.adapter.CliAdapter">
<doc>Execute command on the specific connection and get the output of it</doc>
<arguments>
<arg>${DUT}</arg>
<arg>${CMD}</arg>
<arg>prompt=${devices.${DUT}.prompt}</arg>
<arg>timeout=${TIMEOUT}</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190108 00:20:45.812" level="INFO">send session_command, cmd=transport-service-profile auto_TransVlan_777, prompt={'#': None}, timeout=30, newline=None, retry=1, timeout_exception=1, exclude_prompt=None</msg>
<msg timestamp="20190108 00:20:46.043" level="INFO">session_command result=transport-service-profile auto_TransVlan_777
NGPON2X4(config-transport-service-profile-auto_TransVlan_777)</msg>
<msg timestamp="20190108 00:20:46.044" level="INFO">${res} = transport-service-profile auto_TransVlan_777
NGPON2X4(config-transport-service-profile-auto_TransVlan_777)</msg>
<status status="PASS" endtime="20190108 00:20:46.044" starttime="20190108 00:20:45.798"></status>
</kw>
<kw name="Should Not Contain Any" library="BuiltIn">
<doc>Fails if ``container`` contains one or more of the ``*items``.</doc>
<arguments>
<arg>${res}</arg>
<arg>Invalid</arg>
<arg>syntax error</arg>
<arg>Aborted:</arg>
<arg>Error:</arg>
</arguments>
<status status="PASS" endtime="20190108 00:20:46.051" starttime="20190108 00:20:46.050"></status>
</kw>
<status status="PASS" endtime="20190108 00:20:46.052" starttime="20190108 00:20:45.796"></status>
</kw>
<kw name="Axos Cli With Error Check" library="keyword_common">
<tags>
<tag>@author=dfarwell</tag>
</tags>
<doc>Sends a CLI command to DUT and confirms response has no errors, if there is no prompt in your topo file this may need to be adjusted</doc>
<arguments>
<arg>${device}</arg>
<arg>vlan-list ${vlan-list}</arg>
</arguments>
<kw name="Cli" library="caferobot.command.adapter.CliAdapter">
<doc>Execute command on the specific connection and get the output of it</doc>
<arguments>
<arg>${DUT}</arg>
<arg>${CMD}</arg>
<arg>prompt=${devices.${DUT}.prompt}</arg>
<arg>timeout=${TIMEOUT}</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190108 00:20:46.061" level="INFO">send session_command, cmd=vlan-list 777, prompt={'#': None}, timeout=30, newline=None, retry=1, timeout_exception=1, exclude_prompt=None</msg>
<msg timestamp="20190108 00:20:46.387" level="INFO">session_command result=vlan-list 777
NGPON2X4(config-transport-service-profile-auto_TransVlan_777)</msg>
<msg timestamp="20190108 00:20:46.387" level="INFO">${res} = vlan-list 777
NGPON2X4(config-transport-service-profile-auto_TransVlan_777)</msg>
<status status="PASS" endtime="20190108 00:20:46.388" starttime="20190108 00:20:46.056"></status>
</kw>
<kw name="Should Not Contain Any" library="BuiltIn">
<doc>Fails if ``container`` contains one or more of the ``*items``.</doc>
<arguments>
<arg>${res}</arg>
<arg>Invalid</arg>
<arg>syntax error</arg>
<arg>Aborted:</arg>
<arg>Error:</arg>
</arguments>
<status status="PASS" endtime="20190108 00:20:46.390" starttime="20190108 00:20:46.389"></status>
</kw>
<status status="PASS" endtime="20190108 00:20:46.391" starttime="20190108 00:20:46.054"></status>
</kw>
<kw type="teardown" name="Axos Cli With Error Check" library="keyword_common">
<tags>
<tag>@author=dfarwell</tag>
</tags>
<doc>Sends a CLI command to DUT and confirms response has no errors, if there is no prompt in your topo file this may need to be adjusted</doc>
<arguments>
<arg>${device}</arg>
<arg>end</arg>
</arguments>
<kw name="Cli" library="caferobot.command.adapter.CliAdapter">
<doc>Execute command on the specific connection and get the output of it</doc>
<arguments>
<arg>${DUT}</arg>
<arg>${CMD}</arg>
<arg>prompt=${devices.${DUT}.prompt}</arg>
<arg>timeout=${TIMEOUT}</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190108 00:20:46.397" level="INFO">send session_command, cmd=end, prompt={'#': None}, timeout=30, newline=None, retry=1, timeout_exception=1, exclude_prompt=None</msg>
<msg timestamp="20190108 00:20:46.644" level="INFO">session_command result=end
NGPON2X4</msg>
<msg timestamp="20190108 00:20:46.645" level="INFO">${res} = end
NGPON2X4</msg>
<status status="PASS" endtime="20190108 00:20:46.645" starttime="20190108 00:20:46.394"></status>
</kw>
<kw name="Should Not Contain Any" library="BuiltIn">
<doc>Fails if ``container`` contains one or more of the ``*items``.</doc>
<arguments>
<arg>${res}</arg>
<arg>Invalid</arg>
<arg>syntax error</arg>
<arg>Aborted:</arg>
<arg>Error:</arg>
</arguments>
<status status="PASS" endtime="20190108 00:20:46.648" starttime="20190108 00:20:46.647"></status>
</kw>
<status status="PASS" endtime="20190108 00:20:46.649" starttime="20190108 00:20:46.392"></status>
</kw>
<status status="PASS" endtime="20190108 00:20:46.652" starttime="20190108 00:20:45.472"></status>
</kw>
<kw name="service_point_add_transport_profile" library="keyword_service_model">
<tags>
<tag>@author=CindyGao</tag>
</tags>
<doc>Description: add transport_profile to service_point interface (This keyword is only internal use, CANNOT be used in TCs)</doc>
<arguments>
<arg>${device}</arg>
<arg>${service_point}</arg>
<arg>${transport_prf}</arg>
</arguments>
<kw name="Run Keyword And Return If" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>'lag'=='${service_model.${service_point}.type}'</arg>
<arg>prov_interface</arg>
<arg>${device}</arg>
<arg>lag</arg>
<arg>${service_model.${service_point}.name}</arg>
<arg>transport-service-profile=${transport_prf}</arg>
</arguments>
<status status="PASS" endtime="20190108 00:20:46.656" starttime="20190108 00:20:46.655"></status>
</kw>
<kw name="Log" library="BuiltIn">
<arguments>
<arg>add transport-service-profile to interface</arg>
</arguments>
<msg timestamp="20190108 00:20:46.657" level="INFO">add transport-service-profile to interface</msg>
<status status="PASS" endtime="20190108 00:20:46.658" starttime="20190108 00:20:46.657"></status>
</kw>
<kw type="for" name="${port_key} IN [ @{service_model.${service_point}.member} ]">
<kw type="foritem" name="${port_key} = interface1">
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${service_model.${service_point}.member.${port_key}}</arg>
</arguments>
<assign>
<var>${port}</var>
</assign>
<msg timestamp="20190108 00:20:46.661" level="INFO">${port} = 1/2/x11</msg>
<status status="PASS" endtime="20190108 00:20:46.661" starttime="20190108 00:20:46.660"></status>
</kw>
<kw name="Log" library="BuiltIn">
<arguments>
<arg>****** provision port ${port} transport-service-profile ******</arg>
</arguments>
<msg timestamp="20190108 00:20:46.662" level="INFO">****** provision port 1/2/x11 transport-service-profile ******</msg>
<status status="PASS" endtime="20190108 00:20:46.663" starttime="20190108 00:20:46.662"></status>
</kw>
<kw name="prov_interface_ethernet" library="keyword_command">
<tags>
<tag>@author=BlairWang</tag>
</tags>
<doc>configure on interface</doc>
<arguments>
<arg>${device}</arg>
<arg>${port}</arg>
<arg>transport-service-profile=${transport_prf}</arg>
</arguments>
<kw name="Axos Cli With Error Check" library="keyword_common">
<tags>
<tag>@author=dfarwell</tag>
</tags>
<doc>Sends a CLI command to DUT and confirms response has no errors, if there is no prompt in your topo file this may need to be adjusted</doc>
<arguments>
<arg>${device}</arg>
<arg>configure</arg>
</arguments>
<kw name="Cli" library="caferobot.command.adapter.CliAdapter">
<doc>Execute command on the specific connection and get the output of it</doc>
<arguments>
<arg>${DUT}</arg>
<arg>${CMD}</arg>
<arg>prompt=${devices.${DUT}.prompt}</arg>
<arg>timeout=${TIMEOUT}</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190108 00:20:46.694" level="INFO">send session_command, cmd=configure, prompt={'#': None}, timeout=30, newline=None, retry=1, timeout_exception=1, exclude_prompt=None</msg>
<msg timestamp="20190108 00:20:46.970" level="INFO">session_command result=configure
Enter configuration commands, one per line. End with CNTL/Z.
Current configuration users:
sysadmin ssh (cli from 10.200.201.26) on since 2019-01-07 23:52:17 terminal mode
NGPON2X4(config)</msg>
<msg timestamp="20190108 00:20:46.971" level="INFO">${res} = configure
Enter configuration commands, one per line. End with CNTL/Z.
Current configuration users:
sysadmin ssh (cli from 10.200.201.26) on since 2019-01-07 23:52:17 terminal mode
NGPON2X4(config...</msg>
<status status="PASS" endtime="20190108 00:20:46.971" starttime="20190108 00:20:46.682"></status>
</kw>
<kw name="Should Not Contain Any" library="BuiltIn">
<doc>Fails if ``container`` contains one or more of the ``*items``.</doc>
<arguments>
<arg>${res}</arg>
<arg>Invalid</arg>
<arg>syntax error</arg>
<arg>Aborted:</arg>
<arg>Error:</arg>
</arguments>
<status status="PASS" endtime="20190108 00:20:46.974" starttime="20190108 00:20:46.973"></status>
</kw>
<status status="PASS" endtime="20190108 00:20:46.974" starttime="20190108 00:20:46.680"></status>
</kw>
<kw name="Axos Cli With Error Check" library="keyword_common">
<tags>
<tag>@author=dfarwell</tag>
</tags>
<doc>Sends a CLI command to DUT and confirms response has no errors, if there is no prompt in your topo file this may need to be adjusted</doc>
<arguments>
<arg>${device}</arg>
<arg>interface ethernet ${interface}</arg>
</arguments>
<kw name="Cli" library="caferobot.command.adapter.CliAdapter">
<doc>Execute command on the specific connection and get the output of it</doc>
<arguments>
<arg>${DUT}</arg>
<arg>${CMD}</arg>
<arg>prompt=${devices.${DUT}.prompt}</arg>
<arg>timeout=${TIMEOUT}</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190108 00:20:46.980" level="INFO">send session_command, cmd=interface ethernet 1/2/x11, prompt={'#': None}, timeout=30, newline=None, retry=1, timeout_exception=1, exclude_prompt=None</msg>
<msg timestamp="20190108 00:20:47.222" level="INFO">session_command result=interface ethernet 1/2/x11
NGPON2X4(config-ethernet-1/2/x11)</msg>
<msg timestamp="20190108 00:20:47.223" level="INFO">${res} = interface ethernet 1/2/x11
NGPON2X4(config-ethernet-1/2/x11)</msg>
<status status="PASS" endtime="20190108 00:20:47.223" starttime="20190108 00:20:46.977"></status>
</kw>
<kw name="Should Not Contain Any" library="BuiltIn">
<doc>Fails if ``container`` contains one or more of the ``*items``.</doc>
<arguments>
<arg>${res}</arg>
<arg>Invalid</arg>
<arg>syntax error</arg>
<arg>Aborted:</arg>
<arg>Error:</arg>
</arguments>
<status status="PASS" endtime="20190108 00:20:47.226" starttime="20190108 00:20:47.225"></status>
</kw>
<status status="PASS" endtime="20190108 00:20:47.227" starttime="20190108 00:20:46.976"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${switchport}"!="${EMPTY}"</arg>
<arg>Axos Cli With Error Check</arg>
<arg>${device}</arg>
<arg>switchport ${switchport}</arg>
</arguments>
<status status="PASS" endtime="20190108 00:20:47.238" starttime="20190108 00:20:47.236"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${interface_role}"!="${EMPTY}"</arg>
<arg>Axos Cli With Error Check</arg>
<arg>${device}</arg>
<arg>role ${interface_role}</arg>
</arguments>
<status status="PASS" endtime="20190108 00:20:47.239" starttime="20190108 00:20:47.238"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${EMPTY}'!='${sub_view_type}'</arg>
<arg>Axos Cli With Error Check</arg>
<arg>${device}</arg>
<arg>${sub_view_type} ${sub_view_value}</arg>
</arguments>
<status status="PASS" endtime="20190108 00:20:47.241" starttime="20190108 00:20:47.240"></status>
</kw>
<kw name="convert_dictionary_to_string" library="keyword_command">
<tags>
<tag>@author=CindyGao</tag>
</tags>
<doc>Description: convert dictionary to string with all key and value</doc>
<arguments>
<arg>&amp;{dict_cmd}</arg>
</arguments>
<assign>
<var>${cmd_string}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${result_string}</var>
</assign>
<msg timestamp="20190108 00:20:47.246" level="INFO">${result_string} = </msg>
<status status="PASS" endtime="20190108 00:20:47.247" starttime="20190108 00:20:47.245"></status>
</kw>
<kw type="for" name="${key} IN [ @{dict.keys()} ]">
<kw type="foritem" name="${key} = transport-service-profile">
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${dict}</arg>
<arg>${key}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190108 00:20:47.250" level="INFO">${value} = auto_TransVlan_777</msg>
<status status="PASS" endtime="20190108 00:20:47.250" starttime="20190108 00:20:47.249"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${result_string} ${key} ${value}</arg>
</arguments>
<assign>
<var>${result_string}</var>
</assign>
<msg timestamp="20190108 00:20:47.252" level="INFO">${result_string} =  transport-service-profile auto_TransVlan_777</msg>
<status status="PASS" endtime="20190108 00:20:47.252" starttime="20190108 00:20:47.251"></status>
</kw>
<status status="PASS" endtime="20190108 00:20:47.252" starttime="20190108 00:20:47.248"></status>
</kw>
<status status="PASS" endtime="20190108 00:20:47.253" starttime="20190108 00:20:47.247"></status>
</kw>
<msg timestamp="20190108 00:20:47.253" level="INFO">${cmd_string} =  transport-service-profile auto_TransVlan_777</msg>
<status status="PASS" endtime="20190108 00:20:47.254" starttime="20190108 00:20:47.243"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${EMPTY}'!='${cmd_string}'</arg>
<arg>Axos Cli With Error Check</arg>
<arg>${device}</arg>
<arg>${cmd_string}</arg>
</arguments>
<kw name="Axos Cli With Error Check" library="keyword_common">
<tags>
<tag>@author=dfarwell</tag>
</tags>
<doc>Sends a CLI command to DUT and confirms response has no errors, if there is no prompt in your topo file this may need to be adjusted</doc>
<arguments>
<arg>${device}</arg>
<arg>${cmd_string}</arg>
</arguments>
<kw name="Cli" library="caferobot.command.adapter.CliAdapter">
<doc>Execute command on the specific connection and get the output of it</doc>
<arguments>
<arg>${DUT}</arg>
<arg>${CMD}</arg>
<arg>prompt=${devices.${DUT}.prompt}</arg>
<arg>timeout=${TIMEOUT}</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190108 00:20:47.260" level="INFO">send session_command, cmd= transport-service-profile auto_TransVlan_777, prompt={'#': None}, timeout=30, newline=None, retry=1, timeout_exception=1, exclude_prompt=None</msg>
<msg timestamp="20190108 00:20:54.188" level="INFO">session_command result= transport-service-profile auto_TransVlan_777
NGPON2X4(config-ethernet-1/2/x11)</msg>
<msg timestamp="20190108 00:20:54.189" level="INFO">${res} =  transport-service-profile auto_TransVlan_777
NGPON2X4(config-ethernet-1/2/x11)</msg>
<status status="PASS" endtime="20190108 00:20:54.189" starttime="20190108 00:20:47.257"></status>
</kw>
<kw name="Should Not Contain Any" library="BuiltIn">
<doc>Fails if ``container`` contains one or more of the ``*items``.</doc>
<arguments>
<arg>${res}</arg>
<arg>Invalid</arg>
<arg>syntax error</arg>
<arg>Aborted:</arg>
<arg>Error:</arg>
</arguments>
<status status="PASS" endtime="20190108 00:20:54.193" starttime="20190108 00:20:54.192"></status>
</kw>
<status status="PASS" endtime="20190108 00:20:54.193" starttime="20190108 00:20:47.256"></status>
</kw>
<status status="PASS" endtime="20190108 00:20:54.195" starttime="20190108 00:20:47.254"></status>
</kw>
<kw type="teardown" name="Axos Cli With Error Check" library="keyword_common">
<tags>
<tag>@author=dfarwell</tag>
</tags>
<doc>Sends a CLI command to DUT and confirms response has no errors, if there is no prompt in your topo file this may need to be adjusted</doc>
<arguments>
<arg>${device}</arg>
<arg>end</arg>
</arguments>
<kw name="Cli" library="caferobot.command.adapter.CliAdapter">
<doc>Execute command on the specific connection and get the output of it</doc>
<arguments>
<arg>${DUT}</arg>
<arg>${CMD}</arg>
<arg>prompt=${devices.${DUT}.prompt}</arg>
<arg>timeout=${TIMEOUT}</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190108 00:20:54.199" level="INFO">send session_command, cmd=end, prompt={'#': None}, timeout=30, newline=None, retry=1, timeout_exception=1, exclude_prompt=None</msg>
<msg timestamp="20190108 00:20:54.510" level="INFO">session_command result=end
NGPON2X4</msg>
<msg timestamp="20190108 00:20:54.510" level="INFO">${res} = end
NGPON2X4</msg>
<status status="PASS" endtime="20190108 00:20:54.510" starttime="20190108 00:20:54.197"></status>
</kw>
<kw name="Should Not Contain Any" library="BuiltIn">
<doc>Fails if ``container`` contains one or more of the ``*items``.</doc>
<arguments>
<arg>${res}</arg>
<arg>Invalid</arg>
<arg>syntax error</arg>
<arg>Aborted:</arg>
<arg>Error:</arg>
</arguments>
<status status="PASS" endtime="20190108 00:20:54.513" starttime="20190108 00:20:54.512"></status>
</kw>
<status status="PASS" endtime="20190108 00:20:54.514" starttime="20190108 00:20:54.196"></status>
</kw>
<status status="PASS" endtime="20190108 00:20:54.515" starttime="20190108 00:20:46.678"></status>
</kw>
<kw name="check_running_config_interface" library="keyword_command">
<tags>
<tag>@author=CindyGao</tag>
</tags>
<doc>Description: check "show running-config interface ${port_type} ${port_name} ${query_cmd}" information</doc>
<arguments>
<arg>${device}</arg>
<arg>ethernet</arg>
<arg>${port}</arg>
<arg>transport-service-profile=${transport_prf}</arg>
</arguments>
<kw name="Axos Cli With Error Check" library="keyword_common">
<tags>
<tag>@author=dfarwell</tag>
</tags>
<doc>Sends a CLI command to DUT and confirms response has no errors, if there is no prompt in your topo file this may need to be adjusted</doc>
<arguments>
<arg>${device}</arg>
<arg>show running-config interface ${port_type} ${port_name} ${query_cmd}</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<kw name="Cli" library="caferobot.command.adapter.CliAdapter">
<doc>Execute command on the specific connection and get the output of it</doc>
<arguments>
<arg>${DUT}</arg>
<arg>${CMD}</arg>
<arg>prompt=${devices.${DUT}.prompt}</arg>
<arg>timeout=${TIMEOUT}</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190108 00:20:54.529" level="INFO">send session_command, cmd=show running-config interface ethernet 1/2/x11 , prompt={'#': None}, timeout=30, newline=None, retry=1, timeout_exception=1, exclude_prompt=None</msg>
<msg timestamp="20190108 00:21:03.098" level="INFO">session_command result=show running-config interface ethernet 1/2/x11 
interface ethernet 1/2/x11
 no shutdown
 role                      inni
 transport-service-profile auto_TransVlan_777
!
NGPON2X4</msg>
<msg timestamp="20190108 00:21:03.098" level="INFO">${res} = show running-config interface ethernet 1/2/x11 
interface ethernet 1/2/x11
 no shutdown
 role                      inni
 transport-service-profile auto_TransVlan_777
!
NGPON2X4</msg>
<status status="PASS" endtime="20190108 00:21:03.099" starttime="20190108 00:20:54.526"></status>
</kw>
<kw name="Should Not Contain Any" library="BuiltIn">
<doc>Fails if ``container`` contains one or more of the ``*items``.</doc>
<arguments>
<arg>${res}</arg>
<arg>Invalid</arg>
<arg>syntax error</arg>
<arg>Aborted:</arg>
<arg>Error:</arg>
</arguments>
<status status="PASS" endtime="20190108 00:21:03.123" starttime="20190108 00:21:03.121"></status>
</kw>
<msg timestamp="20190108 00:21:03.124" level="INFO">${res} = show running-config interface ethernet 1/2/x11 
interface ethernet 1/2/x11
 no shutdown
 role                      inni
 transport-service-profile auto_TransVlan_777
!
NGPON2X4</msg>
<status status="PASS" endtime="20190108 00:21:03.124" starttime="20190108 00:20:54.524"></status>
</kw>
<kw name="Get Dictionary Keys" library="Collections">
<doc>Returns keys of the given ``dictionary``.</doc>
<arguments>
<arg>${dict_check_item}</arg>
</arguments>
<assign>
<var>@{list_key}</var>
</assign>
<msg timestamp="20190108 00:21:03.126" level="INFO">@{list_key} = [ transport-service-profile ]</msg>
<status status="PASS" endtime="20190108 00:21:03.126" starttime="20190108 00:21:03.125"></status>
</kw>
<kw type="for" name="${check_item} IN [ @{list_key} ]">
<kw type="foritem" name="${check_item} = transport-service-profile">
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${dict_check_item}</arg>
<arg>${check_item}</arg>
</arguments>
<assign>
<var>${exp_value}</var>
</assign>
<msg timestamp="20190108 00:21:03.129" level="INFO">${exp_value} = auto_TransVlan_777</msg>
<status status="PASS" endtime="20190108 00:21:03.130" starttime="20190108 00:21:03.129"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${res}</arg>
<arg>${check_item}\\s+${exp_value}</arg>
</arguments>
<status status="PASS" endtime="20190108 00:21:03.131" starttime="20190108 00:21:03.130"></status>
</kw>
<status status="PASS" endtime="20190108 00:21:03.131" starttime="20190108 00:21:03.128"></status>
</kw>
<status status="PASS" endtime="20190108 00:21:03.132" starttime="20190108 00:21:03.127"></status>
</kw>
<status status="PASS" endtime="20190108 00:21:03.132" starttime="20190108 00:20:54.521"></status>
</kw>
<status status="PASS" endtime="20190108 00:21:03.134" starttime="20190108 00:20:46.659"></status>
</kw>
<status status="PASS" endtime="20190108 00:21:03.136" starttime="20190108 00:20:46.658"></status>
</kw>
<status status="PASS" endtime="20190108 00:21:03.144" starttime="20190108 00:20:46.654"></status>
</kw>
<status status="PASS" endtime="20190108 00:21:03.146" starttime="20190108 00:20:45.466"></status>
</kw>
<kw type="foritem" name="${service_point} = service_point4">
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${service_model.${service_point}.device}</arg>
</arguments>
<assign>
<var>${device}</var>
</assign>
<msg timestamp="20190108 00:21:03.151" level="INFO">${device} = eutA</msg>
<status status="PASS" endtime="20190108 00:21:03.152" starttime="20190108 00:21:03.150"></status>
</kw>
<kw name="Log" library="BuiltIn">
<arguments>
<arg>****** uplink service add vlan ${vlan_list} for ${device} ${service_point} ******</arg>
</arguments>
<msg timestamp="20190108 00:21:03.153" level="INFO">****** uplink service add vlan 777 for eutA service_point4 ******</msg>
<status status="PASS" endtime="20190108 00:21:03.153" starttime="20190108 00:21:03.152"></status>
</kw>
<kw name="Log" library="BuiltIn">
<arguments>
<arg>create transport-service-profile</arg>
</arguments>
<msg timestamp="20190108 00:21:03.154" level="INFO">create transport-service-profile</msg>
<status status="PASS" endtime="20190108 00:21:03.155" starttime="20190108 00:21:03.154"></status>
</kw>
<kw name="prov_transport_service_profile" library="keyword_command">
<tags>
<tag>@author=BlairWang</tag>
</tags>
<doc>Puts an interface in shutdown mode</doc>
<arguments>
<arg>${device}</arg>
<arg>${transport_prf}</arg>
<arg>${vlan_list}</arg>
</arguments>
<kw name="Axos Cli With Error Check" library="keyword_common">
<tags>
<tag>@author=dfarwell</tag>
</tags>
<doc>Sends a CLI command to DUT and confirms response has no errors, if there is no prompt in your topo file this may need to be adjusted</doc>
<arguments>
<arg>${device}</arg>
<arg>configure</arg>
</arguments>
<kw name="Cli" library="caferobot.command.adapter.CliAdapter">
<doc>Execute command on the specific connection and get the output of it</doc>
<arguments>
<arg>${DUT}</arg>
<arg>${CMD}</arg>
<arg>prompt=${devices.${DUT}.prompt}</arg>
<arg>timeout=${TIMEOUT}</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190108 00:21:03.162" level="INFO">send session_command, cmd=configure, prompt={'#': None}, timeout=30, newline=None, retry=1, timeout_exception=1, exclude_prompt=None</msg>
<msg timestamp="20190108 00:21:03.434" level="INFO">session_command result=configure
Enter configuration commands, one per line. End with CNTL/Z.
Current configuration users:
sysadmin ssh (cli from 10.200.201.26) on since 2019-01-07 23:52:17 terminal mode
NGPON2X4(config)</msg>
<msg timestamp="20190108 00:21:03.435" level="INFO">${res} = configure
Enter configuration commands, one per line. End with CNTL/Z.
Current configuration users:
sysadmin ssh (cli from 10.200.201.26) on since 2019-01-07 23:52:17 terminal mode
NGPON2X4(config...</msg>
<status status="PASS" endtime="20190108 00:21:03.435" starttime="20190108 00:21:03.160"></status>
</kw>
<kw name="Should Not Contain Any" library="BuiltIn">
<doc>Fails if ``container`` contains one or more of the ``*items``.</doc>
<arguments>
<arg>${res}</arg>
<arg>Invalid</arg>
<arg>syntax error</arg>
<arg>Aborted:</arg>
<arg>Error:</arg>
</arguments>
<status status="PASS" endtime="20190108 00:21:03.438" starttime="20190108 00:21:03.437"></status>
</kw>
<status status="PASS" endtime="20190108 00:21:03.438" starttime="20190108 00:21:03.157"></status>
</kw>
<kw name="Axos Cli With Error Check" library="keyword_common">
<tags>
<tag>@author=dfarwell</tag>
</tags>
<doc>Sends a CLI command to DUT and confirms response has no errors, if there is no prompt in your topo file this may need to be adjusted</doc>
<arguments>
<arg>${device}</arg>
<arg>transport-service-profile ${transport-service-profile}</arg>
</arguments>
<kw name="Cli" library="caferobot.command.adapter.CliAdapter">
<doc>Execute command on the specific connection and get the output of it</doc>
<arguments>
<arg>${DUT}</arg>
<arg>${CMD}</arg>
<arg>prompt=${devices.${DUT}.prompt}</arg>
<arg>timeout=${TIMEOUT}</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190108 00:21:03.445" level="INFO">send session_command, cmd=transport-service-profile auto_TransVlan_777, prompt={'#': None}, timeout=30, newline=None, retry=1, timeout_exception=1, exclude_prompt=None</msg>
<msg timestamp="20190108 00:21:03.710" level="INFO">session_command result=transport-service-profile auto_TransVlan_777
NGPON2X4(config-transport-service-profile-auto_TransVlan_777)</msg>
<msg timestamp="20190108 00:21:03.711" level="INFO">${res} = transport-service-profile auto_TransVlan_777
NGPON2X4(config-transport-service-profile-auto_TransVlan_777)</msg>
<status status="PASS" endtime="20190108 00:21:03.711" starttime="20190108 00:21:03.442"></status>
</kw>
<kw name="Should Not Contain Any" library="BuiltIn">
<doc>Fails if ``container`` contains one or more of the ``*items``.</doc>
<arguments>
<arg>${res}</arg>
<arg>Invalid</arg>
<arg>syntax error</arg>
<arg>Aborted:</arg>
<arg>Error:</arg>
</arguments>
<status status="PASS" endtime="20190108 00:21:03.716" starttime="20190108 00:21:03.715"></status>
</kw>
<status status="PASS" endtime="20190108 00:21:03.717" starttime="20190108 00:21:03.440"></status>
</kw>
<kw name="Axos Cli With Error Check" library="keyword_common">
<tags>
<tag>@author=dfarwell</tag>
</tags>
<doc>Sends a CLI command to DUT and confirms response has no errors, if there is no prompt in your topo file this may need to be adjusted</doc>
<arguments>
<arg>${device}</arg>
<arg>vlan-list ${vlan-list}</arg>
</arguments>
<kw name="Cli" library="caferobot.command.adapter.CliAdapter">
<doc>Execute command on the specific connection and get the output of it</doc>
<arguments>
<arg>${DUT}</arg>
<arg>${CMD}</arg>
<arg>prompt=${devices.${DUT}.prompt}</arg>
<arg>timeout=${TIMEOUT}</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190108 00:21:03.728" level="INFO">send session_command, cmd=vlan-list 777, prompt={'#': None}, timeout=30, newline=None, retry=1, timeout_exception=1, exclude_prompt=None</msg>
<msg timestamp="20190108 00:21:04.000" level="INFO">session_command result=vlan-list 777
NGPON2X4(config-transport-service-profile-auto_TransVlan_777)</msg>
<msg timestamp="20190108 00:21:04.001" level="INFO">${res} = vlan-list 777
NGPON2X4(config-transport-service-profile-auto_TransVlan_777)</msg>
<status status="PASS" endtime="20190108 00:21:04.001" starttime="20190108 00:21:03.722"></status>
</kw>
<kw name="Should Not Contain Any" library="BuiltIn">
<doc>Fails if ``container`` contains one or more of the ``*items``.</doc>
<arguments>
<arg>${res}</arg>
<arg>Invalid</arg>
<arg>syntax error</arg>
<arg>Aborted:</arg>
<arg>Error:</arg>
</arguments>
<status status="PASS" endtime="20190108 00:21:04.004" starttime="20190108 00:21:04.003"></status>
</kw>
<status status="PASS" endtime="20190108 00:21:04.005" starttime="20190108 00:21:03.720"></status>
</kw>
<kw type="teardown" name="Axos Cli With Error Check" library="keyword_common">
<tags>
<tag>@author=dfarwell</tag>
</tags>
<doc>Sends a CLI command to DUT and confirms response has no errors, if there is no prompt in your topo file this may need to be adjusted</doc>
<arguments>
<arg>${device}</arg>
<arg>end</arg>
</arguments>
<kw name="Cli" library="caferobot.command.adapter.CliAdapter">
<doc>Execute command on the specific connection and get the output of it</doc>
<arguments>
<arg>${DUT}</arg>
<arg>${CMD}</arg>
<arg>prompt=${devices.${DUT}.prompt}</arg>
<arg>timeout=${TIMEOUT}</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190108 00:21:04.024" level="INFO">send session_command, cmd=end, prompt={'#': None}, timeout=30, newline=None, retry=1, timeout_exception=1, exclude_prompt=None</msg>
<msg timestamp="20190108 00:21:04.315" level="INFO">session_command result=end
NGPON2X4</msg>
<msg timestamp="20190108 00:21:04.315" level="INFO">${res} = end
NGPON2X4</msg>
<status status="PASS" endtime="20190108 00:21:04.316" starttime="20190108 00:21:04.017"></status>
</kw>
<kw name="Should Not Contain Any" library="BuiltIn">
<doc>Fails if ``container`` contains one or more of the ``*items``.</doc>
<arguments>
<arg>${res}</arg>
<arg>Invalid</arg>
<arg>syntax error</arg>
<arg>Aborted:</arg>
<arg>Error:</arg>
</arguments>
<status status="PASS" endtime="20190108 00:21:04.319" starttime="20190108 00:21:04.317"></status>
</kw>
<status status="PASS" endtime="20190108 00:21:04.319" starttime="20190108 00:21:04.014"></status>
</kw>
<status status="PASS" endtime="20190108 00:21:04.321" starttime="20190108 00:21:03.155"></status>
</kw>
<kw name="service_point_add_transport_profile" library="keyword_service_model">
<tags>
<tag>@author=CindyGao</tag>
</tags>
<doc>Description: add transport_profile to service_point interface (This keyword is only internal use, CANNOT be used in TCs)</doc>
<arguments>
<arg>${device}</arg>
<arg>${service_point}</arg>
<arg>${transport_prf}</arg>
</arguments>
<kw name="Run Keyword And Return If" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>'lag'=='${service_model.${service_point}.type}'</arg>
<arg>prov_interface</arg>
<arg>${device}</arg>
<arg>lag</arg>
<arg>${service_model.${service_point}.name}</arg>
<arg>transport-service-profile=${transport_prf}</arg>
</arguments>
<status status="PASS" endtime="20190108 00:21:04.326" starttime="20190108 00:21:04.324"></status>
</kw>
<kw name="Log" library="BuiltIn">
<arguments>
<arg>add transport-service-profile to interface</arg>
</arguments>
<msg timestamp="20190108 00:21:04.327" level="INFO">add transport-service-profile to interface</msg>
<status status="PASS" endtime="20190108 00:21:04.327" starttime="20190108 00:21:04.326"></status>
</kw>
<kw type="for" name="${port_key} IN [ @{service_model.${service_point}.member} ]">
<kw type="foritem" name="${port_key} = interface1">
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${service_model.${service_point}.member.${port_key}}</arg>
</arguments>
<assign>
<var>${port}</var>
</assign>
<msg timestamp="20190108 00:21:04.331" level="INFO">${port} = 1/2/x12</msg>
<status status="PASS" endtime="20190108 00:21:04.331" starttime="20190108 00:21:04.330"></status>
</kw>
<kw name="Log" library="BuiltIn">
<arguments>
<arg>****** provision port ${port} transport-service-profile ******</arg>
</arguments>
<msg timestamp="20190108 00:21:04.332" level="INFO">****** provision port 1/2/x12 transport-service-profile ******</msg>
<status status="PASS" endtime="20190108 00:21:04.332" starttime="20190108 00:21:04.332"></status>
</kw>
<kw name="prov_interface_ethernet" library="keyword_command">
<tags>
<tag>@author=BlairWang</tag>
</tags>
<doc>configure on interface</doc>
<arguments>
<arg>${device}</arg>
<arg>${port}</arg>
<arg>transport-service-profile=${transport_prf}</arg>
</arguments>
<kw name="Axos Cli With Error Check" library="keyword_common">
<tags>
<tag>@author=dfarwell</tag>
</tags>
<doc>Sends a CLI command to DUT and confirms response has no errors, if there is no prompt in your topo file this may need to be adjusted</doc>
<arguments>
<arg>${device}</arg>
<arg>configure</arg>
</arguments>
<kw name="Cli" library="caferobot.command.adapter.CliAdapter">
<doc>Execute command on the specific connection and get the output of it</doc>
<arguments>
<arg>${DUT}</arg>
<arg>${CMD}</arg>
<arg>prompt=${devices.${DUT}.prompt}</arg>
<arg>timeout=${TIMEOUT}</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190108 00:21:04.338" level="INFO">send session_command, cmd=configure, prompt={'#': None}, timeout=30, newline=None, retry=1, timeout_exception=1, exclude_prompt=None</msg>
<msg timestamp="20190108 00:21:04.628" level="INFO">session_command result=configure
Enter configuration commands, one per line. End with CNTL/Z.
Current configuration users:
sysadmin ssh (cli from 10.200.201.26) on since 2019-01-07 23:52:17 terminal mode
NGPON2X4(config)</msg>
<msg timestamp="20190108 00:21:04.629" level="INFO">${res} = configure
Enter configuration commands, one per line. End with CNTL/Z.
Current configuration users:
sysadmin ssh (cli from 10.200.201.26) on since 2019-01-07 23:52:17 terminal mode
NGPON2X4(config...</msg>
<status status="PASS" endtime="20190108 00:21:04.629" starttime="20190108 00:21:04.336"></status>
</kw>
<kw name="Should Not Contain Any" library="BuiltIn">
<doc>Fails if ``container`` contains one or more of the ``*items``.</doc>
<arguments>
<arg>${res}</arg>
<arg>Invalid</arg>
<arg>syntax error</arg>
<arg>Aborted:</arg>
<arg>Error:</arg>
</arguments>
<status status="PASS" endtime="20190108 00:21:04.632" starttime="20190108 00:21:04.631"></status>
</kw>
<status status="PASS" endtime="20190108 00:21:04.633" starttime="20190108 00:21:04.335"></status>
</kw>
<kw name="Axos Cli With Error Check" library="keyword_common">
<tags>
<tag>@author=dfarwell</tag>
</tags>
<doc>Sends a CLI command to DUT and confirms response has no errors, if there is no prompt in your topo file this may need to be adjusted</doc>
<arguments>
<arg>${device}</arg>
<arg>interface ethernet ${interface}</arg>
</arguments>
<kw name="Cli" library="caferobot.command.adapter.CliAdapter">
<doc>Execute command on the specific connection and get the output of it</doc>
<arguments>
<arg>${DUT}</arg>
<arg>${CMD}</arg>
<arg>prompt=${devices.${DUT}.prompt}</arg>
<arg>timeout=${TIMEOUT}</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190108 00:21:04.638" level="INFO">send session_command, cmd=interface ethernet 1/2/x12, prompt={'#': None}, timeout=30, newline=None, retry=1, timeout_exception=1, exclude_prompt=None</msg>
<msg timestamp="20190108 00:21:04.908" level="INFO">session_command result=interface ethernet 1/2/x12
NGPON2X4(config-ethernet-1/2/x12)</msg>
<msg timestamp="20190108 00:21:04.909" level="INFO">${res} = interface ethernet 1/2/x12
NGPON2X4(config-ethernet-1/2/x12)</msg>
<status status="PASS" endtime="20190108 00:21:04.909" starttime="20190108 00:21:04.636"></status>
</kw>
<kw name="Should Not Contain Any" library="BuiltIn">
<doc>Fails if ``container`` contains one or more of the ``*items``.</doc>
<arguments>
<arg>${res}</arg>
<arg>Invalid</arg>
<arg>syntax error</arg>
<arg>Aborted:</arg>
<arg>Error:</arg>
</arguments>
<status status="PASS" endtime="20190108 00:21:04.912" starttime="20190108 00:21:04.911"></status>
</kw>
<status status="PASS" endtime="20190108 00:21:04.912" starttime="20190108 00:21:04.634"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${switchport}"!="${EMPTY}"</arg>
<arg>Axos Cli With Error Check</arg>
<arg>${device}</arg>
<arg>switchport ${switchport}</arg>
</arguments>
<status status="PASS" endtime="20190108 00:21:04.915" starttime="20190108 00:21:04.914"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${interface_role}"!="${EMPTY}"</arg>
<arg>Axos Cli With Error Check</arg>
<arg>${device}</arg>
<arg>role ${interface_role}</arg>
</arguments>
<status status="PASS" endtime="20190108 00:21:04.916" starttime="20190108 00:21:04.915"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${EMPTY}'!='${sub_view_type}'</arg>
<arg>Axos Cli With Error Check</arg>
<arg>${device}</arg>
<arg>${sub_view_type} ${sub_view_value}</arg>
</arguments>
<status status="PASS" endtime="20190108 00:21:04.918" starttime="20190108 00:21:04.917"></status>
</kw>
<kw name="convert_dictionary_to_string" library="keyword_command">
<tags>
<tag>@author=CindyGao</tag>
</tags>
<doc>Description: convert dictionary to string with all key and value</doc>
<arguments>
<arg>&amp;{dict_cmd}</arg>
</arguments>
<assign>
<var>${cmd_string}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${result_string}</var>
</assign>
<msg timestamp="20190108 00:21:04.923" level="INFO">${result_string} = </msg>
<status status="PASS" endtime="20190108 00:21:04.923" starttime="20190108 00:21:04.922"></status>
</kw>
<kw type="for" name="${key} IN [ @{dict.keys()} ]">
<kw type="foritem" name="${key} = transport-service-profile">
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${dict}</arg>
<arg>${key}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190108 00:21:04.926" level="INFO">${value} = auto_TransVlan_777</msg>
<status status="PASS" endtime="20190108 00:21:04.926" starttime="20190108 00:21:04.925"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${result_string} ${key} ${value}</arg>
</arguments>
<assign>
<var>${result_string}</var>
</assign>
<msg timestamp="20190108 00:21:04.929" level="INFO">${result_string} =  transport-service-profile auto_TransVlan_777</msg>
<status status="PASS" endtime="20190108 00:21:04.929" starttime="20190108 00:21:04.927"></status>
</kw>
<status status="PASS" endtime="20190108 00:21:04.930" starttime="20190108 00:21:04.925"></status>
</kw>
<status status="PASS" endtime="20190108 00:21:04.930" starttime="20190108 00:21:04.924"></status>
</kw>
<msg timestamp="20190108 00:21:04.931" level="INFO">${cmd_string} =  transport-service-profile auto_TransVlan_777</msg>
<status status="PASS" endtime="20190108 00:21:04.931" starttime="20190108 00:21:04.920"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${EMPTY}'!='${cmd_string}'</arg>
<arg>Axos Cli With Error Check</arg>
<arg>${device}</arg>
<arg>${cmd_string}</arg>
</arguments>
<kw name="Axos Cli With Error Check" library="keyword_common">
<tags>
<tag>@author=dfarwell</tag>
</tags>
<doc>Sends a CLI command to DUT and confirms response has no errors, if there is no prompt in your topo file this may need to be adjusted</doc>
<arguments>
<arg>${device}</arg>
<arg>${cmd_string}</arg>
</arguments>
<kw name="Cli" library="caferobot.command.adapter.CliAdapter">
<doc>Execute command on the specific connection and get the output of it</doc>
<arguments>
<arg>${DUT}</arg>
<arg>${CMD}</arg>
<arg>prompt=${devices.${DUT}.prompt}</arg>
<arg>timeout=${TIMEOUT}</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190108 00:21:04.936" level="INFO">send session_command, cmd= transport-service-profile auto_TransVlan_777, prompt={'#': None}, timeout=30, newline=None, retry=1, timeout_exception=1, exclude_prompt=None</msg>
<msg timestamp="20190108 00:21:08.238" level="INFO">session_command result= transport-service-profile auto_TransVlan_777
NGPON2X4(config-ethernet-1/2/x12)</msg>
<msg timestamp="20190108 00:21:08.238" level="INFO">${res} =  transport-service-profile auto_TransVlan_777
NGPON2X4(config-ethernet-1/2/x12)</msg>
<status status="PASS" endtime="20190108 00:21:08.239" starttime="20190108 00:21:04.934"></status>
</kw>
<kw name="Should Not Contain Any" library="BuiltIn">
<doc>Fails if ``container`` contains one or more of the ``*items``.</doc>
<arguments>
<arg>${res}</arg>
<arg>Invalid</arg>
<arg>syntax error</arg>
<arg>Aborted:</arg>
<arg>Error:</arg>
</arguments>
<status status="PASS" endtime="20190108 00:21:08.242" starttime="20190108 00:21:08.240"></status>
</kw>
<status status="PASS" endtime="20190108 00:21:08.242" starttime="20190108 00:21:04.933"></status>
</kw>
<status status="PASS" endtime="20190108 00:21:08.244" starttime="20190108 00:21:04.932"></status>
</kw>
<kw type="teardown" name="Axos Cli With Error Check" library="keyword_common">
<tags>
<tag>@author=dfarwell</tag>
</tags>
<doc>Sends a CLI command to DUT and confirms response has no errors, if there is no prompt in your topo file this may need to be adjusted</doc>
<arguments>
<arg>${device}</arg>
<arg>end</arg>
</arguments>
<kw name="Cli" library="caferobot.command.adapter.CliAdapter">
<doc>Execute command on the specific connection and get the output of it</doc>
<arguments>
<arg>${DUT}</arg>
<arg>${CMD}</arg>
<arg>prompt=${devices.${DUT}.prompt}</arg>
<arg>timeout=${TIMEOUT}</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190108 00:21:08.251" level="INFO">send session_command, cmd=end, prompt={'#': None}, timeout=30, newline=None, retry=1, timeout_exception=1, exclude_prompt=None</msg>
<msg timestamp="20190108 00:21:08.641" level="INFO">session_command result=end
NGPON2X4</msg>
<msg timestamp="20190108 00:21:08.642" level="INFO">${res} = end
NGPON2X4</msg>
<status status="PASS" endtime="20190108 00:21:08.642" starttime="20190108 00:21:08.248"></status>
</kw>
<kw name="Should Not Contain Any" library="BuiltIn">
<doc>Fails if ``container`` contains one or more of the ``*items``.</doc>
<arguments>
<arg>${res}</arg>
<arg>Invalid</arg>
<arg>syntax error</arg>
<arg>Aborted:</arg>
<arg>Error:</arg>
</arguments>
<status status="PASS" endtime="20190108 00:21:08.645" starttime="20190108 00:21:08.644"></status>
</kw>
<status status="PASS" endtime="20190108 00:21:08.646" starttime="20190108 00:21:08.246"></status>
</kw>
<status status="PASS" endtime="20190108 00:21:08.648" starttime="20190108 00:21:04.333"></status>
</kw>
<kw name="check_running_config_interface" library="keyword_command">
<tags>
<tag>@author=CindyGao</tag>
</tags>
<doc>Description: check "show running-config interface ${port_type} ${port_name} ${query_cmd}" information</doc>
<arguments>
<arg>${device}</arg>
<arg>ethernet</arg>
<arg>${port}</arg>
<arg>transport-service-profile=${transport_prf}</arg>
</arguments>
<kw name="Axos Cli With Error Check" library="keyword_common">
<tags>
<tag>@author=dfarwell</tag>
</tags>
<doc>Sends a CLI command to DUT and confirms response has no errors, if there is no prompt in your topo file this may need to be adjusted</doc>
<arguments>
<arg>${device}</arg>
<arg>show running-config interface ${port_type} ${port_name} ${query_cmd}</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<kw name="Cli" library="caferobot.command.adapter.CliAdapter">
<doc>Execute command on the specific connection and get the output of it</doc>
<arguments>
<arg>${DUT}</arg>
<arg>${CMD}</arg>
<arg>prompt=${devices.${DUT}.prompt}</arg>
<arg>timeout=${TIMEOUT}</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190108 00:21:08.672" level="INFO">send session_command, cmd=show running-config interface ethernet 1/2/x12 , prompt={'#': None}, timeout=30, newline=None, retry=1, timeout_exception=1, exclude_prompt=None</msg>
<msg timestamp="20190108 00:21:16.214" level="INFO">session_command result=show running-config interface ethernet 1/2/x12 
interface ethernet 1/2/x12
 no shutdown
 role                      inni
 transport-service-profile auto_TransVlan_777
!
NGPON2X4</msg>
<msg timestamp="20190108 00:21:16.215" level="INFO">${res} = show running-config interface ethernet 1/2/x12 
interface ethernet 1/2/x12
 no shutdown
 role                      inni
 transport-service-profile auto_TransVlan_777
!
NGPON2X4</msg>
<status status="PASS" endtime="20190108 00:21:16.215" starttime="20190108 00:21:08.668"></status>
</kw>
<kw name="Should Not Contain Any" library="BuiltIn">
<doc>Fails if ``container`` contains one or more of the ``*items``.</doc>
<arguments>
<arg>${res}</arg>
<arg>Invalid</arg>
<arg>syntax error</arg>
<arg>Aborted:</arg>
<arg>Error:</arg>
</arguments>
<status status="PASS" endtime="20190108 00:21:16.218" starttime="20190108 00:21:16.216"></status>
</kw>
<msg timestamp="20190108 00:21:16.218" level="INFO">${res} = show running-config interface ethernet 1/2/x12 
interface ethernet 1/2/x12
 no shutdown
 role                      inni
 transport-service-profile auto_TransVlan_777
!
NGPON2X4</msg>
<status status="PASS" endtime="20190108 00:21:16.218" starttime="20190108 00:21:08.666"></status>
</kw>
<kw name="Get Dictionary Keys" library="Collections">
<doc>Returns keys of the given ``dictionary``.</doc>
<arguments>
<arg>${dict_check_item}</arg>
</arguments>
<assign>
<var>@{list_key}</var>
</assign>
<msg timestamp="20190108 00:21:16.221" level="INFO">@{list_key} = [ transport-service-profile ]</msg>
<status status="PASS" endtime="20190108 00:21:16.221" starttime="20190108 00:21:16.220"></status>
</kw>
<kw type="for" name="${check_item} IN [ @{list_key} ]">
<kw type="foritem" name="${check_item} = transport-service-profile">
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${dict_check_item}</arg>
<arg>${check_item}</arg>
</arguments>
<assign>
<var>${exp_value}</var>
</assign>
<msg timestamp="20190108 00:21:16.224" level="INFO">${exp_value} = auto_TransVlan_777</msg>
<status status="PASS" endtime="20190108 00:21:16.224" starttime="20190108 00:21:16.223"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${res}</arg>
<arg>${check_item}\\s+${exp_value}</arg>
</arguments>
<status status="PASS" endtime="20190108 00:21:16.226" starttime="20190108 00:21:16.225"></status>
</kw>
<status status="PASS" endtime="20190108 00:21:16.226" starttime="20190108 00:21:16.222"></status>
</kw>
<status status="PASS" endtime="20190108 00:21:16.227" starttime="20190108 00:21:16.221"></status>
</kw>
<status status="PASS" endtime="20190108 00:21:16.227" starttime="20190108 00:21:08.664"></status>
</kw>
<status status="PASS" endtime="20190108 00:21:16.230" starttime="20190108 00:21:04.329"></status>
</kw>
<status status="PASS" endtime="20190108 00:21:16.232" starttime="20190108 00:21:04.328"></status>
</kw>
<status status="PASS" endtime="20190108 00:21:16.233" starttime="20190108 00:21:04.323"></status>
</kw>
<status status="PASS" endtime="20190108 00:21:16.235" starttime="20190108 00:21:03.149"></status>
</kw>
<status status="PASS" endtime="20190108 00:21:16.236" starttime="20190108 00:20:18.664"></status>
</kw>
<status status="PASS" endtime="20190108 00:21:16.238" starttime="20190108 00:20:18.657"></status>
</kw>
<status status="PASS" endtime="20190108 00:21:16.239" starttime="20190108 00:19:57.166"></status>
</kw>
<suite source="/home/guchen/workspace/AXOS/AXOS-automation/Milan/ST_Test_Cases/System/HW_Support/MTU/testcase/tc_9k_INNI_port_to_INNI_port.robot" id="s1-s1-s1-s1-s1-s1-s1-s1-s1" name="tc 9k INNI port to INNI port">
<test id="s1-s1-s1-s1-s1-s1-s1-s1-s1-t1" name="tc_tc_9k_INNI_port_to_INNI_port.robot">
<kw type="setup" name="setup">
<msg timestamp="20190108 00:21:16.586" level="WARN">Multiple keywords with name 'setup' found. Please specify keyword fullname:
	cafebase.setup
	setup</msg>
<kw name="Log" library="BuiltIn">
<arguments>
<arg>set card 1 ethernet mtu</arg>
</arguments>
<msg timestamp="20190108 00:21:16.587" level="INFO">set card 1 ethernet mtu</msg>
<status status="PASS" endtime="20190108 00:21:16.588" starttime="20190108 00:21:16.587"></status>
</kw>
<kw name="prov_interface_ethernet" library="keyword_command">
<tags>
<tag>@author=BlairWang</tag>
</tags>
<doc>configure on interface</doc>
<arguments>
<arg>eutA</arg>
<arg>${service_model.service_point1.member.interface1}</arg>
<arg>speed=auto</arg>
<arg>mtu=9000</arg>
</arguments>
<kw name="Axos Cli With Error Check" library="keyword_common">
<tags>
<tag>@author=dfarwell</tag>
</tags>
<doc>Sends a CLI command to DUT and confirms response has no errors, if there is no prompt in your topo file this may need to be adjusted</doc>
<arguments>
<arg>${device}</arg>
<arg>configure</arg>
</arguments>
<kw name="Cli" library="caferobot.command.adapter.CliAdapter">
<doc>Execute command on the specific connection and get the output of it</doc>
<arguments>
<arg>${DUT}</arg>
<arg>${CMD}</arg>
<arg>prompt=${devices.${DUT}.prompt}</arg>
<arg>timeout=${TIMEOUT}</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190108 00:21:16.603" level="INFO">send session_command, cmd=configure, prompt={'#': None}, timeout=30, newline=None, retry=1, timeout_exception=1, exclude_prompt=None</msg>
<msg timestamp="20190108 00:21:16.978" level="INFO">session_command result=configure
Enter configuration commands, one per line. End with CNTL/Z.
NGPON2X4(config)</msg>
<msg timestamp="20190108 00:21:16.978" level="INFO">${res} = configure
Enter configuration commands, one per line. End with CNTL/Z.
NGPON2X4(config)</msg>
<status status="PASS" endtime="20190108 00:21:16.978" starttime="20190108 00:21:16.592"></status>
</kw>
<kw name="Should Not Contain Any" library="BuiltIn">
<doc>Fails if ``container`` contains one or more of the ``*items``.</doc>
<arguments>
<arg>${res}</arg>
<arg>Invalid</arg>
<arg>syntax error</arg>
<arg>Aborted:</arg>
<arg>Error:</arg>
</arguments>
<status status="PASS" endtime="20190108 00:21:16.982" starttime="20190108 00:21:16.980"></status>
</kw>
<status status="PASS" endtime="20190108 00:21:16.982" starttime="20190108 00:21:16.590"></status>
</kw>
<kw name="Axos Cli With Error Check" library="keyword_common">
<tags>
<tag>@author=dfarwell</tag>
</tags>
<doc>Sends a CLI command to DUT and confirms response has no errors, if there is no prompt in your topo file this may need to be adjusted</doc>
<arguments>
<arg>${device}</arg>
<arg>interface ethernet ${interface}</arg>
</arguments>
<kw name="Cli" library="caferobot.command.adapter.CliAdapter">
<doc>Execute command on the specific connection and get the output of it</doc>
<arguments>
<arg>${DUT}</arg>
<arg>${CMD}</arg>
<arg>prompt=${devices.${DUT}.prompt}</arg>
<arg>timeout=${TIMEOUT}</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190108 00:21:16.988" level="INFO">send session_command, cmd=interface ethernet 1/1/x3, prompt={'#': None}, timeout=30, newline=None, retry=1, timeout_exception=1, exclude_prompt=None</msg>
<msg timestamp="20190108 00:21:17.493" level="INFO">session_command result=interface ethernet 1/1/x3
NGPON2X4(config-ethernet-1/1/x3)</msg>
<msg timestamp="20190108 00:21:17.493" level="INFO">${res} = interface ethernet 1/1/x3
NGPON2X4(config-ethernet-1/1/x3)</msg>
<status status="PASS" endtime="20190108 00:21:17.494" starttime="20190108 00:21:16.986"></status>
</kw>
<kw name="Should Not Contain Any" library="BuiltIn">
<doc>Fails if ``container`` contains one or more of the ``*items``.</doc>
<arguments>
<arg>${res}</arg>
<arg>Invalid</arg>
<arg>syntax error</arg>
<arg>Aborted:</arg>
<arg>Error:</arg>
</arguments>
<status status="PASS" endtime="20190108 00:21:17.496" starttime="20190108 00:21:17.495"></status>
</kw>
<status status="PASS" endtime="20190108 00:21:17.497" starttime="20190108 00:21:16.984"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${switchport}"!="${EMPTY}"</arg>
<arg>Axos Cli With Error Check</arg>
<arg>${device}</arg>
<arg>switchport ${switchport}</arg>
</arguments>
<status status="PASS" endtime="20190108 00:21:17.499" starttime="20190108 00:21:17.498"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${interface_role}"!="${EMPTY}"</arg>
<arg>Axos Cli With Error Check</arg>
<arg>${device}</arg>
<arg>role ${interface_role}</arg>
</arguments>
<status status="PASS" endtime="20190108 00:21:17.501" starttime="20190108 00:21:17.500"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${EMPTY}'!='${sub_view_type}'</arg>
<arg>Axos Cli With Error Check</arg>
<arg>${device}</arg>
<arg>${sub_view_type} ${sub_view_value}</arg>
</arguments>
<status status="PASS" endtime="20190108 00:21:17.502" starttime="20190108 00:21:17.502"></status>
</kw>
<kw name="convert_dictionary_to_string" library="keyword_command">
<tags>
<tag>@author=CindyGao</tag>
</tags>
<doc>Description: convert dictionary to string with all key and value</doc>
<arguments>
<arg>&amp;{dict_cmd}</arg>
</arguments>
<assign>
<var>${cmd_string}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${result_string}</var>
</assign>
<msg timestamp="20190108 00:21:17.508" level="INFO">${result_string} = </msg>
<status status="PASS" endtime="20190108 00:21:17.508" starttime="20190108 00:21:17.507"></status>
</kw>
<kw type="for" name="${key} IN [ @{dict.keys()} ]">
<kw type="foritem" name="${key} = speed">
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${dict}</arg>
<arg>${key}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190108 00:21:17.512" level="INFO">${value} = auto</msg>
<status status="PASS" endtime="20190108 00:21:17.512" starttime="20190108 00:21:17.511"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${result_string} ${key} ${value}</arg>
</arguments>
<assign>
<var>${result_string}</var>
</assign>
<msg timestamp="20190108 00:21:17.514" level="INFO">${result_string} =  speed auto</msg>
<status status="PASS" endtime="20190108 00:21:17.514" starttime="20190108 00:21:17.513"></status>
</kw>
<status status="PASS" endtime="20190108 00:21:17.515" starttime="20190108 00:21:17.510"></status>
</kw>
<kw type="foritem" name="${key} = mtu">
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${dict}</arg>
<arg>${key}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190108 00:21:17.518" level="INFO">${value} = 9000</msg>
<status status="PASS" endtime="20190108 00:21:17.518" starttime="20190108 00:21:17.517"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${result_string} ${key} ${value}</arg>
</arguments>
<assign>
<var>${result_string}</var>
</assign>
<msg timestamp="20190108 00:21:17.521" level="INFO">${result_string} =  speed auto mtu 9000</msg>
<status status="PASS" endtime="20190108 00:21:17.521" starttime="20190108 00:21:17.519"></status>
</kw>
<status status="PASS" endtime="20190108 00:21:17.522" starttime="20190108 00:21:17.516"></status>
</kw>
<status status="PASS" endtime="20190108 00:21:17.522" starttime="20190108 00:21:17.508"></status>
</kw>
<msg timestamp="20190108 00:21:17.523" level="INFO">${cmd_string} =  speed auto mtu 9000</msg>
<status status="PASS" endtime="20190108 00:21:17.523" starttime="20190108 00:21:17.505"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${EMPTY}'!='${cmd_string}'</arg>
<arg>Axos Cli With Error Check</arg>
<arg>${device}</arg>
<arg>${cmd_string}</arg>
</arguments>
<kw name="Axos Cli With Error Check" library="keyword_common">
<tags>
<tag>@author=dfarwell</tag>
</tags>
<doc>Sends a CLI command to DUT and confirms response has no errors, if there is no prompt in your topo file this may need to be adjusted</doc>
<arguments>
<arg>${device}</arg>
<arg>${cmd_string}</arg>
</arguments>
<kw name="Cli" library="caferobot.command.adapter.CliAdapter">
<doc>Execute command on the specific connection and get the output of it</doc>
<arguments>
<arg>${DUT}</arg>
<arg>${CMD}</arg>
<arg>prompt=${devices.${DUT}.prompt}</arg>
<arg>timeout=${TIMEOUT}</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190108 00:21:17.538" level="INFO">send session_command, cmd= speed auto mtu 9000, prompt={'#': None}, timeout=30, newline=None, retry=1, timeout_exception=1, exclude_prompt=None</msg>
<msg timestamp="20190108 00:21:18.080" level="INFO">session_command result= speed auto mtu 9000
NGPON2X4(config-ethernet-1/1/x3)</msg>
<msg timestamp="20190108 00:21:18.080" level="INFO">${res} =  speed auto mtu 9000
NGPON2X4(config-ethernet-1/1/x3)</msg>
<status status="PASS" endtime="20190108 00:21:18.080" starttime="20190108 00:21:17.528"></status>
</kw>
<kw name="Should Not Contain Any" library="BuiltIn">
<doc>Fails if ``container`` contains one or more of the ``*items``.</doc>
<arguments>
<arg>${res}</arg>
<arg>Invalid</arg>
<arg>syntax error</arg>
<arg>Aborted:</arg>
<arg>Error:</arg>
</arguments>
<status status="PASS" endtime="20190108 00:21:18.083" starttime="20190108 00:21:18.082"></status>
</kw>
<status status="PASS" endtime="20190108 00:21:18.084" starttime="20190108 00:21:17.526"></status>
</kw>
<status status="PASS" endtime="20190108 00:21:18.085" starttime="20190108 00:21:17.524"></status>
</kw>
<kw type="teardown" name="Axos Cli With Error Check" library="keyword_common">
<tags>
<tag>@author=dfarwell</tag>
</tags>
<doc>Sends a CLI command to DUT and confirms response has no errors, if there is no prompt in your topo file this may need to be adjusted</doc>
<arguments>
<arg>${device}</arg>
<arg>end</arg>
</arguments>
<kw name="Cli" library="caferobot.command.adapter.CliAdapter">
<doc>Execute command on the specific connection and get the output of it</doc>
<arguments>
<arg>${DUT}</arg>
<arg>${CMD}</arg>
<arg>prompt=${devices.${DUT}.prompt}</arg>
<arg>timeout=${TIMEOUT}</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190108 00:21:18.090" level="INFO">send session_command, cmd=end, prompt={'#': None}, timeout=30, newline=None, retry=1, timeout_exception=1, exclude_prompt=None</msg>
<msg timestamp="20190108 00:21:18.455" level="INFO">session_command result=end
NGPON2X4</msg>
<msg timestamp="20190108 00:21:18.456" level="INFO">${res} = end
NGPON2X4</msg>
<status status="PASS" endtime="20190108 00:21:18.456" starttime="20190108 00:21:18.088"></status>
</kw>
<kw name="Should Not Contain Any" library="BuiltIn">
<doc>Fails if ``container`` contains one or more of the ``*items``.</doc>
<arguments>
<arg>${res}</arg>
<arg>Invalid</arg>
<arg>syntax error</arg>
<arg>Aborted:</arg>
<arg>Error:</arg>
</arguments>
<status status="PASS" endtime="20190108 00:21:18.459" starttime="20190108 00:21:18.458"></status>
</kw>
<status status="PASS" endtime="20190108 00:21:18.460" starttime="20190108 00:21:18.086"></status>
</kw>
<status status="PASS" endtime="20190108 00:21:18.463" starttime="20190108 00:21:16.588"></status>
</kw>
<kw name="prov_interface_ethernet" library="keyword_command">
<tags>
<tag>@author=BlairWang</tag>
</tags>
<doc>configure on interface</doc>
<arguments>
<arg>eutA</arg>
<arg>${service_model.service_point2.member.interface1}</arg>
<arg>speed=auto</arg>
<arg>mtu=9600</arg>
</arguments>
<kw name="Axos Cli With Error Check" library="keyword_common">
<tags>
<tag>@author=dfarwell</tag>
</tags>
<doc>Sends a CLI command to DUT and confirms response has no errors, if there is no prompt in your topo file this may need to be adjusted</doc>
<arguments>
<arg>${device}</arg>
<arg>configure</arg>
</arguments>
<kw name="Cli" library="caferobot.command.adapter.CliAdapter">
<doc>Execute command on the specific connection and get the output of it</doc>
<arguments>
<arg>${DUT}</arg>
<arg>${CMD}</arg>
<arg>prompt=${devices.${DUT}.prompt}</arg>
<arg>timeout=${TIMEOUT}</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190108 00:21:18.479" level="INFO">send session_command, cmd=configure, prompt={'#': None}, timeout=30, newline=None, retry=1, timeout_exception=1, exclude_prompt=None</msg>
<msg timestamp="20190108 00:21:18.867" level="INFO">session_command result=configure
Enter configuration commands, one per line. End with CNTL/Z.
NGPON2X4(config)</msg>
<msg timestamp="20190108 00:21:18.868" level="INFO">${res} = configure
Enter configuration commands, one per line. End with CNTL/Z.
NGPON2X4(config)</msg>
<status status="PASS" endtime="20190108 00:21:18.868" starttime="20190108 00:21:18.469"></status>
</kw>
<kw name="Should Not Contain Any" library="BuiltIn">
<doc>Fails if ``container`` contains one or more of the ``*items``.</doc>
<arguments>
<arg>${res}</arg>
<arg>Invalid</arg>
<arg>syntax error</arg>
<arg>Aborted:</arg>
<arg>Error:</arg>
</arguments>
<status status="PASS" endtime="20190108 00:21:18.871" starttime="20190108 00:21:18.870"></status>
</kw>
<status status="PASS" endtime="20190108 00:21:18.871" starttime="20190108 00:21:18.467"></status>
</kw>
<kw name="Axos Cli With Error Check" library="keyword_common">
<tags>
<tag>@author=dfarwell</tag>
</tags>
<doc>Sends a CLI command to DUT and confirms response has no errors, if there is no prompt in your topo file this may need to be adjusted</doc>
<arguments>
<arg>${device}</arg>
<arg>interface ethernet ${interface}</arg>
</arguments>
<kw name="Cli" library="caferobot.command.adapter.CliAdapter">
<doc>Execute command on the specific connection and get the output of it</doc>
<arguments>
<arg>${DUT}</arg>
<arg>${CMD}</arg>
<arg>prompt=${devices.${DUT}.prompt}</arg>
<arg>timeout=${TIMEOUT}</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190108 00:21:18.877" level="INFO">send session_command, cmd=interface ethernet 1/1/x4, prompt={'#': None}, timeout=30, newline=None, retry=1, timeout_exception=1, exclude_prompt=None</msg>
<msg timestamp="20190108 00:21:19.240" level="INFO">session_command result=interface ethernet 1/1/x4
NGPON2X4(config-ethernet-1/1/x4)</msg>
<msg timestamp="20190108 00:21:19.241" level="INFO">${res} = interface ethernet 1/1/x4
NGPON2X4(config-ethernet-1/1/x4)</msg>
<status status="PASS" endtime="20190108 00:21:19.241" starttime="20190108 00:21:18.875"></status>
</kw>
<kw name="Should Not Contain Any" library="BuiltIn">
<doc>Fails if ``container`` contains one or more of the ``*items``.</doc>
<arguments>
<arg>${res}</arg>
<arg>Invalid</arg>
<arg>syntax error</arg>
<arg>Aborted:</arg>
<arg>Error:</arg>
</arguments>
<status status="PASS" endtime="20190108 00:21:19.244" starttime="20190108 00:21:19.244"></status>
</kw>
<status status="PASS" endtime="20190108 00:21:19.245" starttime="20190108 00:21:18.873"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${switchport}"!="${EMPTY}"</arg>
<arg>Axos Cli With Error Check</arg>
<arg>${device}</arg>
<arg>switchport ${switchport}</arg>
</arguments>
<status status="PASS" endtime="20190108 00:21:19.247" starttime="20190108 00:21:19.246"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${interface_role}"!="${EMPTY}"</arg>
<arg>Axos Cli With Error Check</arg>
<arg>${device}</arg>
<arg>role ${interface_role}</arg>
</arguments>
<status status="PASS" endtime="20190108 00:21:19.249" starttime="20190108 00:21:19.248"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${EMPTY}'!='${sub_view_type}'</arg>
<arg>Axos Cli With Error Check</arg>
<arg>${device}</arg>
<arg>${sub_view_type} ${sub_view_value}</arg>
</arguments>
<status status="PASS" endtime="20190108 00:21:19.250" starttime="20190108 00:21:19.249"></status>
</kw>
<kw name="convert_dictionary_to_string" library="keyword_command">
<tags>
<tag>@author=CindyGao</tag>
</tags>
<doc>Description: convert dictionary to string with all key and value</doc>
<arguments>
<arg>&amp;{dict_cmd}</arg>
</arguments>
<assign>
<var>${cmd_string}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${result_string}</var>
</assign>
<msg timestamp="20190108 00:21:19.255" level="INFO">${result_string} = </msg>
<status status="PASS" endtime="20190108 00:21:19.255" starttime="20190108 00:21:19.254"></status>
</kw>
<kw type="for" name="${key} IN [ @{dict.keys()} ]">
<kw type="foritem" name="${key} = speed">
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${dict}</arg>
<arg>${key}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190108 00:21:19.258" level="INFO">${value} = auto</msg>
<status status="PASS" endtime="20190108 00:21:19.258" starttime="20190108 00:21:19.257"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${result_string} ${key} ${value}</arg>
</arguments>
<assign>
<var>${result_string}</var>
</assign>
<msg timestamp="20190108 00:21:19.260" level="INFO">${result_string} =  speed auto</msg>
<status status="PASS" endtime="20190108 00:21:19.260" starttime="20190108 00:21:19.259"></status>
</kw>
<status status="PASS" endtime="20190108 00:21:19.260" starttime="20190108 00:21:19.256"></status>
</kw>
<kw type="foritem" name="${key} = mtu">
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${dict}</arg>
<arg>${key}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190108 00:21:19.262" level="INFO">${value} = 9600</msg>
<status status="PASS" endtime="20190108 00:21:19.262" starttime="20190108 00:21:19.261"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${result_string} ${key} ${value}</arg>
</arguments>
<assign>
<var>${result_string}</var>
</assign>
<msg timestamp="20190108 00:21:19.264" level="INFO">${result_string} =  speed auto mtu 9600</msg>
<status status="PASS" endtime="20190108 00:21:19.264" starttime="20190108 00:21:19.263"></status>
</kw>
<status status="PASS" endtime="20190108 00:21:19.264" starttime="20190108 00:21:19.261"></status>
</kw>
<status status="PASS" endtime="20190108 00:21:19.265" starttime="20190108 00:21:19.256"></status>
</kw>
<msg timestamp="20190108 00:21:19.265" level="INFO">${cmd_string} =  speed auto mtu 9600</msg>
<status status="PASS" endtime="20190108 00:21:19.265" starttime="20190108 00:21:19.253"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${EMPTY}'!='${cmd_string}'</arg>
<arg>Axos Cli With Error Check</arg>
<arg>${device}</arg>
<arg>${cmd_string}</arg>
</arguments>
<kw name="Axos Cli With Error Check" library="keyword_common">
<tags>
<tag>@author=dfarwell</tag>
</tags>
<doc>Sends a CLI command to DUT and confirms response has no errors, if there is no prompt in your topo file this may need to be adjusted</doc>
<arguments>
<arg>${device}</arg>
<arg>${cmd_string}</arg>
</arguments>
<kw name="Cli" library="caferobot.command.adapter.CliAdapter">
<doc>Execute command on the specific connection and get the output of it</doc>
<arguments>
<arg>${DUT}</arg>
<arg>${CMD}</arg>
<arg>prompt=${devices.${DUT}.prompt}</arg>
<arg>timeout=${TIMEOUT}</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190108 00:21:19.272" level="INFO">send session_command, cmd= speed auto mtu 9600, prompt={'#': None}, timeout=30, newline=None, retry=1, timeout_exception=1, exclude_prompt=None</msg>
<msg timestamp="20190108 00:21:19.759" level="INFO">session_command result= speed auto mtu 9600
NGPON2X4(config-ethernet-1/1/x4)</msg>
<msg timestamp="20190108 00:21:19.759" level="INFO">${res} =  speed auto mtu 9600
NGPON2X4(config-ethernet-1/1/x4)</msg>
<status status="PASS" endtime="20190108 00:21:19.760" starttime="20190108 00:21:19.269"></status>
</kw>
<kw name="Should Not Contain Any" library="BuiltIn">
<doc>Fails if ``container`` contains one or more of the ``*items``.</doc>
<arguments>
<arg>${res}</arg>
<arg>Invalid</arg>
<arg>syntax error</arg>
<arg>Aborted:</arg>
<arg>Error:</arg>
</arguments>
<status status="PASS" endtime="20190108 00:21:19.765" starttime="20190108 00:21:19.762"></status>
</kw>
<status status="PASS" endtime="20190108 00:21:19.765" starttime="20190108 00:21:19.267"></status>
</kw>
<status status="PASS" endtime="20190108 00:21:19.767" starttime="20190108 00:21:19.266"></status>
</kw>
<kw type="teardown" name="Axos Cli With Error Check" library="keyword_common">
<tags>
<tag>@author=dfarwell</tag>
</tags>
<doc>Sends a CLI command to DUT and confirms response has no errors, if there is no prompt in your topo file this may need to be adjusted</doc>
<arguments>
<arg>${device}</arg>
<arg>end</arg>
</arguments>
<kw name="Cli" library="caferobot.command.adapter.CliAdapter">
<doc>Execute command on the specific connection and get the output of it</doc>
<arguments>
<arg>${DUT}</arg>
<arg>${CMD}</arg>
<arg>prompt=${devices.${DUT}.prompt}</arg>
<arg>timeout=${TIMEOUT}</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190108 00:21:19.777" level="INFO">send session_command, cmd=end, prompt={'#': None}, timeout=30, newline=None, retry=1, timeout_exception=1, exclude_prompt=None</msg>
<msg timestamp="20190108 00:21:20.144" level="INFO">session_command result=end
NGPON2X4</msg>
<msg timestamp="20190108 00:21:20.145" level="INFO">${res} = end
NGPON2X4</msg>
<status status="PASS" endtime="20190108 00:21:20.145" starttime="20190108 00:21:19.770"></status>
</kw>
<kw name="Should Not Contain Any" library="BuiltIn">
<doc>Fails if ``container`` contains one or more of the ``*items``.</doc>
<arguments>
<arg>${res}</arg>
<arg>Invalid</arg>
<arg>syntax error</arg>
<arg>Aborted:</arg>
<arg>Error:</arg>
</arguments>
<status status="PASS" endtime="20190108 00:21:20.149" starttime="20190108 00:21:20.147"></status>
</kw>
<status status="PASS" endtime="20190108 00:21:20.149" starttime="20190108 00:21:19.768"></status>
</kw>
<status status="PASS" endtime="20190108 00:21:20.151" starttime="20190108 00:21:18.465"></status>
</kw>
<kw name="Log" library="BuiltIn">
<arguments>
<arg>set card 2 ethernet mtu</arg>
</arguments>
<msg timestamp="20190108 00:21:20.154" level="INFO">set card 2 ethernet mtu</msg>
<status status="PASS" endtime="20190108 00:21:20.154" starttime="20190108 00:21:20.153"></status>
</kw>
<kw name="prov_interface_ethernet" library="keyword_command">
<tags>
<tag>@author=BlairWang</tag>
</tags>
<doc>configure on interface</doc>
<arguments>
<arg>eutA</arg>
<arg>${service_model.service_point3.member.interface1}</arg>
<arg>speed=auto</arg>
<arg>mtu=9000</arg>
</arguments>
<kw name="Axos Cli With Error Check" library="keyword_common">
<tags>
<tag>@author=dfarwell</tag>
</tags>
<doc>Sends a CLI command to DUT and confirms response has no errors, if there is no prompt in your topo file this may need to be adjusted</doc>
<arguments>
<arg>${device}</arg>
<arg>configure</arg>
</arguments>
<kw name="Cli" library="caferobot.command.adapter.CliAdapter">
<doc>Execute command on the specific connection and get the output of it</doc>
<arguments>
<arg>${DUT}</arg>
<arg>${CMD}</arg>
<arg>prompt=${devices.${DUT}.prompt}</arg>
<arg>timeout=${TIMEOUT}</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190108 00:21:20.160" level="INFO">send session_command, cmd=configure, prompt={'#': None}, timeout=30, newline=None, retry=1, timeout_exception=1, exclude_prompt=None</msg>
<msg timestamp="20190108 00:21:20.519" level="INFO">session_command result=configure
Enter configuration commands, one per line. End with CNTL/Z.
NGPON2X4(config)</msg>
<msg timestamp="20190108 00:21:20.519" level="INFO">${res} = configure
Enter configuration commands, one per line. End with CNTL/Z.
NGPON2X4(config)</msg>
<status status="PASS" endtime="20190108 00:21:20.520" starttime="20190108 00:21:20.158"></status>
</kw>
<kw name="Should Not Contain Any" library="BuiltIn">
<doc>Fails if ``container`` contains one or more of the ``*items``.</doc>
<arguments>
<arg>${res}</arg>
<arg>Invalid</arg>
<arg>syntax error</arg>
<arg>Aborted:</arg>
<arg>Error:</arg>
</arguments>
<status status="PASS" endtime="20190108 00:21:20.524" starttime="20190108 00:21:20.522"></status>
</kw>
<status status="PASS" endtime="20190108 00:21:20.525" starttime="20190108 00:21:20.157"></status>
</kw>
<kw name="Axos Cli With Error Check" library="keyword_common">
<tags>
<tag>@author=dfarwell</tag>
</tags>
<doc>Sends a CLI command to DUT and confirms response has no errors, if there is no prompt in your topo file this may need to be adjusted</doc>
<arguments>
<arg>${device}</arg>
<arg>interface ethernet ${interface}</arg>
</arguments>
<kw name="Cli" library="caferobot.command.adapter.CliAdapter">
<doc>Execute command on the specific connection and get the output of it</doc>
<arguments>
<arg>${DUT}</arg>
<arg>${CMD}</arg>
<arg>prompt=${devices.${DUT}.prompt}</arg>
<arg>timeout=${TIMEOUT}</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190108 00:21:20.531" level="INFO">send session_command, cmd=interface ethernet 1/2/x11, prompt={'#': None}, timeout=30, newline=None, retry=1, timeout_exception=1, exclude_prompt=None</msg>
<msg timestamp="20190108 00:21:20.872" level="INFO">session_command result=interface ethernet 1/2/x11
NGPON2X4(config-ethernet-1/2/x11)</msg>
<msg timestamp="20190108 00:21:20.873" level="INFO">${res} = interface ethernet 1/2/x11
NGPON2X4(config-ethernet-1/2/x11)</msg>
<status status="PASS" endtime="20190108 00:21:20.873" starttime="20190108 00:21:20.529"></status>
</kw>
<kw name="Should Not Contain Any" library="BuiltIn">
<doc>Fails if ``container`` contains one or more of the ``*items``.</doc>
<arguments>
<arg>${res}</arg>
<arg>Invalid</arg>
<arg>syntax error</arg>
<arg>Aborted:</arg>
<arg>Error:</arg>
</arguments>
<status status="PASS" endtime="20190108 00:21:20.876" starttime="20190108 00:21:20.875"></status>
</kw>
<status status="PASS" endtime="20190108 00:21:20.877" starttime="20190108 00:21:20.527"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${switchport}"!="${EMPTY}"</arg>
<arg>Axos Cli With Error Check</arg>
<arg>${device}</arg>
<arg>switchport ${switchport}</arg>
</arguments>
<status status="PASS" endtime="20190108 00:21:20.879" starttime="20190108 00:21:20.878"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${interface_role}"!="${EMPTY}"</arg>
<arg>Axos Cli With Error Check</arg>
<arg>${device}</arg>
<arg>role ${interface_role}</arg>
</arguments>
<status status="PASS" endtime="20190108 00:21:20.881" starttime="20190108 00:21:20.880"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${EMPTY}'!='${sub_view_type}'</arg>
<arg>Axos Cli With Error Check</arg>
<arg>${device}</arg>
<arg>${sub_view_type} ${sub_view_value}</arg>
</arguments>
<status status="PASS" endtime="20190108 00:21:20.882" starttime="20190108 00:21:20.881"></status>
</kw>
<kw name="convert_dictionary_to_string" library="keyword_command">
<tags>
<tag>@author=CindyGao</tag>
</tags>
<doc>Description: convert dictionary to string with all key and value</doc>
<arguments>
<arg>&amp;{dict_cmd}</arg>
</arguments>
<assign>
<var>${cmd_string}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${result_string}</var>
</assign>
<msg timestamp="20190108 00:21:20.887" level="INFO">${result_string} = </msg>
<status status="PASS" endtime="20190108 00:21:20.887" starttime="20190108 00:21:20.886"></status>
</kw>
<kw type="for" name="${key} IN [ @{dict.keys()} ]">
<kw type="foritem" name="${key} = speed">
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${dict}</arg>
<arg>${key}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190108 00:21:20.890" level="INFO">${value} = auto</msg>
<status status="PASS" endtime="20190108 00:21:20.890" starttime="20190108 00:21:20.889"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${result_string} ${key} ${value}</arg>
</arguments>
<assign>
<var>${result_string}</var>
</assign>
<msg timestamp="20190108 00:21:20.892" level="INFO">${result_string} =  speed auto</msg>
<status status="PASS" endtime="20190108 00:21:20.892" starttime="20190108 00:21:20.891"></status>
</kw>
<status status="PASS" endtime="20190108 00:21:20.892" starttime="20190108 00:21:20.888"></status>
</kw>
<kw type="foritem" name="${key} = mtu">
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${dict}</arg>
<arg>${key}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190108 00:21:20.894" level="INFO">${value} = 9000</msg>
<status status="PASS" endtime="20190108 00:21:20.895" starttime="20190108 00:21:20.894"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${result_string} ${key} ${value}</arg>
</arguments>
<assign>
<var>${result_string}</var>
</assign>
<msg timestamp="20190108 00:21:20.896" level="INFO">${result_string} =  speed auto mtu 9000</msg>
<status status="PASS" endtime="20190108 00:21:20.897" starttime="20190108 00:21:20.895"></status>
</kw>
<status status="PASS" endtime="20190108 00:21:20.897" starttime="20190108 00:21:20.893"></status>
</kw>
<status status="PASS" endtime="20190108 00:21:20.897" starttime="20190108 00:21:20.888"></status>
</kw>
<msg timestamp="20190108 00:21:20.898" level="INFO">${cmd_string} =  speed auto mtu 9000</msg>
<status status="PASS" endtime="20190108 00:21:20.898" starttime="20190108 00:21:20.885"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${EMPTY}'!='${cmd_string}'</arg>
<arg>Axos Cli With Error Check</arg>
<arg>${device}</arg>
<arg>${cmd_string}</arg>
</arguments>
<kw name="Axos Cli With Error Check" library="keyword_common">
<tags>
<tag>@author=dfarwell</tag>
</tags>
<doc>Sends a CLI command to DUT and confirms response has no errors, if there is no prompt in your topo file this may need to be adjusted</doc>
<arguments>
<arg>${device}</arg>
<arg>${cmd_string}</arg>
</arguments>
<kw name="Cli" library="caferobot.command.adapter.CliAdapter">
<doc>Execute command on the specific connection and get the output of it</doc>
<arguments>
<arg>${DUT}</arg>
<arg>${CMD}</arg>
<arg>prompt=${devices.${DUT}.prompt}</arg>
<arg>timeout=${TIMEOUT}</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190108 00:21:20.904" level="INFO">send session_command, cmd= speed auto mtu 9000, prompt={'#': None}, timeout=30, newline=None, retry=1, timeout_exception=1, exclude_prompt=None</msg>
<msg timestamp="20190108 00:21:21.394" level="INFO">session_command result= speed auto mtu 9000
NGPON2X4(config-ethernet-1/2/x11)</msg>
<msg timestamp="20190108 00:21:21.395" level="INFO">${res} =  speed auto mtu 9000
NGPON2X4(config-ethernet-1/2/x11)</msg>
<status status="PASS" endtime="20190108 00:21:21.395" starttime="20190108 00:21:20.901"></status>
</kw>
<kw name="Should Not Contain Any" library="BuiltIn">
<doc>Fails if ``container`` contains one or more of the ``*items``.</doc>
<arguments>
<arg>${res}</arg>
<arg>Invalid</arg>
<arg>syntax error</arg>
<arg>Aborted:</arg>
<arg>Error:</arg>
</arguments>
<status status="PASS" endtime="20190108 00:21:21.399" starttime="20190108 00:21:21.397"></status>
</kw>
<status status="PASS" endtime="20190108 00:21:21.399" starttime="20190108 00:21:20.900"></status>
</kw>
<status status="PASS" endtime="20190108 00:21:21.401" starttime="20190108 00:21:20.899"></status>
</kw>
<kw type="teardown" name="Axos Cli With Error Check" library="keyword_common">
<tags>
<tag>@author=dfarwell</tag>
</tags>
<doc>Sends a CLI command to DUT and confirms response has no errors, if there is no prompt in your topo file this may need to be adjusted</doc>
<arguments>
<arg>${device}</arg>
<arg>end</arg>
</arguments>
<kw name="Cli" library="caferobot.command.adapter.CliAdapter">
<doc>Execute command on the specific connection and get the output of it</doc>
<arguments>
<arg>${DUT}</arg>
<arg>${CMD}</arg>
<arg>prompt=${devices.${DUT}.prompt}</arg>
<arg>timeout=${TIMEOUT}</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190108 00:21:21.407" level="INFO">send session_command, cmd=end, prompt={'#': None}, timeout=30, newline=None, retry=1, timeout_exception=1, exclude_prompt=None</msg>
<msg timestamp="20190108 00:21:21.861" level="INFO">session_command result=end
NGPON2X4</msg>
<msg timestamp="20190108 00:21:21.862" level="INFO">${res} = end
NGPON2X4</msg>
<status status="PASS" endtime="20190108 00:21:21.862" starttime="20190108 00:21:21.405"></status>
</kw>
<kw name="Should Not Contain Any" library="BuiltIn">
<doc>Fails if ``container`` contains one or more of the ``*items``.</doc>
<arguments>
<arg>${res}</arg>
<arg>Invalid</arg>
<arg>syntax error</arg>
<arg>Aborted:</arg>
<arg>Error:</arg>
</arguments>
<status status="PASS" endtime="20190108 00:21:21.866" starttime="20190108 00:21:21.865"></status>
</kw>
<status status="PASS" endtime="20190108 00:21:21.866" starttime="20190108 00:21:21.403"></status>
</kw>
<status status="PASS" endtime="20190108 00:21:21.870" starttime="20190108 00:21:20.155"></status>
</kw>
<kw name="prov_interface_ethernet" library="keyword_command">
<tags>
<tag>@author=BlairWang</tag>
</tags>
<doc>configure on interface</doc>
<arguments>
<arg>eutA</arg>
<arg>${service_model.service_point4.member.interface1}</arg>
<arg>speed=auto</arg>
<arg>mtu=9600</arg>
</arguments>
<kw name="Axos Cli With Error Check" library="keyword_common">
<tags>
<tag>@author=dfarwell</tag>
</tags>
<doc>Sends a CLI command to DUT and confirms response has no errors, if there is no prompt in your topo file this may need to be adjusted</doc>
<arguments>
<arg>${device}</arg>
<arg>configure</arg>
</arguments>
<kw name="Cli" library="caferobot.command.adapter.CliAdapter">
<doc>Execute command on the specific connection and get the output of it</doc>
<arguments>
<arg>${DUT}</arg>
<arg>${CMD}</arg>
<arg>prompt=${devices.${DUT}.prompt}</arg>
<arg>timeout=${TIMEOUT}</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190108 00:21:21.885" level="INFO">send session_command, cmd=configure, prompt={'#': None}, timeout=30, newline=None, retry=1, timeout_exception=1, exclude_prompt=None</msg>
<msg timestamp="20190108 00:21:22.353" level="INFO">session_command result=configure
Enter configuration commands, one per line. End with CNTL/Z.
NGPON2X4(config)</msg>
<msg timestamp="20190108 00:21:22.353" level="INFO">${res} = configure
Enter configuration commands, one per line. End with CNTL/Z.
NGPON2X4(config)</msg>
<status status="PASS" endtime="20190108 00:21:22.354" starttime="20190108 00:21:21.882"></status>
</kw>
<kw name="Should Not Contain Any" library="BuiltIn">
<doc>Fails if ``container`` contains one or more of the ``*items``.</doc>
<arguments>
<arg>${res}</arg>
<arg>Invalid</arg>
<arg>syntax error</arg>
<arg>Aborted:</arg>
<arg>Error:</arg>
</arguments>
<status status="PASS" endtime="20190108 00:21:22.356" starttime="20190108 00:21:22.355"></status>
</kw>
<status status="PASS" endtime="20190108 00:21:22.357" starttime="20190108 00:21:21.881"></status>
</kw>
<kw name="Axos Cli With Error Check" library="keyword_common">
<tags>
<tag>@author=dfarwell</tag>
</tags>
<doc>Sends a CLI command to DUT and confirms response has no errors, if there is no prompt in your topo file this may need to be adjusted</doc>
<arguments>
<arg>${device}</arg>
<arg>interface ethernet ${interface}</arg>
</arguments>
<kw name="Cli" library="caferobot.command.adapter.CliAdapter">
<doc>Execute command on the specific connection and get the output of it</doc>
<arguments>
<arg>${DUT}</arg>
<arg>${CMD}</arg>
<arg>prompt=${devices.${DUT}.prompt}</arg>
<arg>timeout=${TIMEOUT}</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190108 00:21:22.371" level="INFO">send session_command, cmd=interface ethernet 1/2/x12, prompt={'#': None}, timeout=30, newline=None, retry=1, timeout_exception=1, exclude_prompt=None</msg>
<msg timestamp="20190108 00:21:22.791" level="INFO">session_command result=interface ethernet 1/2/x12
NGPON2X4(config-ethernet-1/2/x12)</msg>
<msg timestamp="20190108 00:21:22.792" level="INFO">${res} = interface ethernet 1/2/x12
NGPON2X4(config-ethernet-1/2/x12)</msg>
<status status="PASS" endtime="20190108 00:21:22.792" starttime="20190108 00:21:22.368"></status>
</kw>
<kw name="Should Not Contain Any" library="BuiltIn">
<doc>Fails if ``container`` contains one or more of the ``*items``.</doc>
<arguments>
<arg>${res}</arg>
<arg>Invalid</arg>
<arg>syntax error</arg>
<arg>Aborted:</arg>
<arg>Error:</arg>
</arguments>
<status status="PASS" endtime="20190108 00:21:22.801" starttime="20190108 00:21:22.799"></status>
</kw>
<status status="PASS" endtime="20190108 00:21:22.801" starttime="20190108 00:21:22.367"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${switchport}"!="${EMPTY}"</arg>
<arg>Axos Cli With Error Check</arg>
<arg>${device}</arg>
<arg>switchport ${switchport}</arg>
</arguments>
<status status="PASS" endtime="20190108 00:21:22.804" starttime="20190108 00:21:22.803"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${interface_role}"!="${EMPTY}"</arg>
<arg>Axos Cli With Error Check</arg>
<arg>${device}</arg>
<arg>role ${interface_role}</arg>
</arguments>
<status status="PASS" endtime="20190108 00:21:22.805" starttime="20190108 00:21:22.804"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${EMPTY}'!='${sub_view_type}'</arg>
<arg>Axos Cli With Error Check</arg>
<arg>${device}</arg>
<arg>${sub_view_type} ${sub_view_value}</arg>
</arguments>
<status status="PASS" endtime="20190108 00:21:22.807" starttime="20190108 00:21:22.806"></status>
</kw>
<kw name="convert_dictionary_to_string" library="keyword_command">
<tags>
<tag>@author=CindyGao</tag>
</tags>
<doc>Description: convert dictionary to string with all key and value</doc>
<arguments>
<arg>&amp;{dict_cmd}</arg>
</arguments>
<assign>
<var>${cmd_string}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${result_string}</var>
</assign>
<msg timestamp="20190108 00:21:22.811" level="INFO">${result_string} = </msg>
<status status="PASS" endtime="20190108 00:21:22.811" starttime="20190108 00:21:22.810"></status>
</kw>
<kw type="for" name="${key} IN [ @{dict.keys()} ]">
<kw type="foritem" name="${key} = speed">
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${dict}</arg>
<arg>${key}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190108 00:21:22.817" level="INFO">${value} = auto</msg>
<status status="PASS" endtime="20190108 00:21:22.818" starttime="20190108 00:21:22.816"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${result_string} ${key} ${value}</arg>
</arguments>
<assign>
<var>${result_string}</var>
</assign>
<msg timestamp="20190108 00:21:22.819" level="INFO">${result_string} =  speed auto</msg>
<status status="PASS" endtime="20190108 00:21:22.819" starttime="20190108 00:21:22.818"></status>
</kw>
<status status="PASS" endtime="20190108 00:21:22.819" starttime="20190108 00:21:22.816"></status>
</kw>
<kw type="foritem" name="${key} = mtu">
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${dict}</arg>
<arg>${key}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190108 00:21:22.822" level="INFO">${value} = 9600</msg>
<status status="PASS" endtime="20190108 00:21:22.822" starttime="20190108 00:21:22.821"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${result_string} ${key} ${value}</arg>
</arguments>
<assign>
<var>${result_string}</var>
</assign>
<msg timestamp="20190108 00:21:22.823" level="INFO">${result_string} =  speed auto mtu 9600</msg>
<status status="PASS" endtime="20190108 00:21:22.823" starttime="20190108 00:21:22.822"></status>
</kw>
<status status="PASS" endtime="20190108 00:21:22.824" starttime="20190108 00:21:22.820"></status>
</kw>
<status status="PASS" endtime="20190108 00:21:22.824" starttime="20190108 00:21:22.812"></status>
</kw>
<msg timestamp="20190108 00:21:22.824" level="INFO">${cmd_string} =  speed auto mtu 9600</msg>
<status status="PASS" endtime="20190108 00:21:22.825" starttime="20190108 00:21:22.809"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${EMPTY}'!='${cmd_string}'</arg>
<arg>Axos Cli With Error Check</arg>
<arg>${device}</arg>
<arg>${cmd_string}</arg>
</arguments>
<kw name="Axos Cli With Error Check" library="keyword_common">
<tags>
<tag>@author=dfarwell</tag>
</tags>
<doc>Sends a CLI command to DUT and confirms response has no errors, if there is no prompt in your topo file this may need to be adjusted</doc>
<arguments>
<arg>${device}</arg>
<arg>${cmd_string}</arg>
</arguments>
<kw name="Cli" library="caferobot.command.adapter.CliAdapter">
<doc>Execute command on the specific connection and get the output of it</doc>
<arguments>
<arg>${DUT}</arg>
<arg>${CMD}</arg>
<arg>prompt=${devices.${DUT}.prompt}</arg>
<arg>timeout=${TIMEOUT}</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190108 00:21:22.830" level="INFO">send session_command, cmd= speed auto mtu 9600, prompt={'#': None}, timeout=30, newline=None, retry=1, timeout_exception=1, exclude_prompt=None</msg>
<msg timestamp="20190108 00:21:23.390" level="INFO">session_command result= speed auto mtu 9600
NGPON2X4(config-ethernet-1/2/x12)</msg>
<msg timestamp="20190108 00:21:23.391" level="INFO">${res} =  speed auto mtu 9600
NGPON2X4(config-ethernet-1/2/x12)</msg>
<status status="PASS" endtime="20190108 00:21:23.391" starttime="20190108 00:21:22.828"></status>
</kw>
<kw name="Should Not Contain Any" library="BuiltIn">
<doc>Fails if ``container`` contains one or more of the ``*items``.</doc>
<arguments>
<arg>${res}</arg>
<arg>Invalid</arg>
<arg>syntax error</arg>
<arg>Aborted:</arg>
<arg>Error:</arg>
</arguments>
<status status="PASS" endtime="20190108 00:21:23.397" starttime="20190108 00:21:23.395"></status>
</kw>
<status status="PASS" endtime="20190108 00:21:23.398" starttime="20190108 00:21:22.826"></status>
</kw>
<status status="PASS" endtime="20190108 00:21:23.400" starttime="20190108 00:21:22.825"></status>
</kw>
<kw type="teardown" name="Axos Cli With Error Check" library="keyword_common">
<tags>
<tag>@author=dfarwell</tag>
</tags>
<doc>Sends a CLI command to DUT and confirms response has no errors, if there is no prompt in your topo file this may need to be adjusted</doc>
<arguments>
<arg>${device}</arg>
<arg>end</arg>
</arguments>
<kw name="Cli" library="caferobot.command.adapter.CliAdapter">
<doc>Execute command on the specific connection and get the output of it</doc>
<arguments>
<arg>${DUT}</arg>
<arg>${CMD}</arg>
<arg>prompt=${devices.${DUT}.prompt}</arg>
<arg>timeout=${TIMEOUT}</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190108 00:21:23.410" level="INFO">send session_command, cmd=end, prompt={'#': None}, timeout=30, newline=None, retry=1, timeout_exception=1, exclude_prompt=None</msg>
<msg timestamp="20190108 00:21:23.844" level="INFO">session_command result=end
NGPON2X4</msg>
<msg timestamp="20190108 00:21:23.844" level="INFO">${res} = end
NGPON2X4</msg>
<status status="PASS" endtime="20190108 00:21:23.844" starttime="20190108 00:21:23.407"></status>
</kw>
<kw name="Should Not Contain Any" library="BuiltIn">
<doc>Fails if ``container`` contains one or more of the ``*items``.</doc>
<arguments>
<arg>${res}</arg>
<arg>Invalid</arg>
<arg>syntax error</arg>
<arg>Aborted:</arg>
<arg>Error:</arg>
</arguments>
<status status="PASS" endtime="20190108 00:21:23.847" starttime="20190108 00:21:23.846"></status>
</kw>
<status status="PASS" endtime="20190108 00:21:23.848" starttime="20190108 00:21:23.404"></status>
</kw>
<status status="PASS" endtime="20190108 00:21:23.852" starttime="20190108 00:21:21.879"></status>
</kw>
<status status="PASS" endtime="20190108 00:21:23.853" starttime="20190108 00:21:16.584"></status>
</kw>
<kw name="Log" library="BuiltIn">
<arguments>
<arg>check card 1 mtu</arg>
</arguments>
<msg timestamp="20190108 00:21:23.945" level="INFO">check card 1 mtu</msg>
<status status="PASS" endtime="20190108 00:21:23.945" starttime="20190108 00:21:23.944"></status>
</kw>
<kw name="check_running_config_interface" library="keyword_command">
<tags>
<tag>@author=CindyGao</tag>
</tags>
<doc>Description: check "show running-config interface ${port_type} ${port_name} ${query_cmd}" information</doc>
<arguments>
<arg>eutA</arg>
<arg>${service_model.service_point1.type}</arg>
<arg>${service_model.service_point1.member.interface1}</arg>
<arg>mtu=9000</arg>
</arguments>
<kw name="Axos Cli With Error Check" library="keyword_common">
<tags>
<tag>@author=dfarwell</tag>
</tags>
<doc>Sends a CLI command to DUT and confirms response has no errors, if there is no prompt in your topo file this may need to be adjusted</doc>
<arguments>
<arg>${device}</arg>
<arg>show running-config interface ${port_type} ${port_name} ${query_cmd}</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<kw name="Cli" library="caferobot.command.adapter.CliAdapter">
<doc>Execute command on the specific connection and get the output of it</doc>
<arguments>
<arg>${DUT}</arg>
<arg>${CMD}</arg>
<arg>prompt=${devices.${DUT}.prompt}</arg>
<arg>timeout=${TIMEOUT}</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190108 00:21:24.164" level="INFO">send session_command, cmd=show running-config interface eth 1/1/x3 , prompt={'#': None}, timeout=30, newline=None, retry=1, timeout_exception=1, exclude_prompt=None</msg>
<msg timestamp="20190108 00:21:34.267" level="INFO">session_command result=show running-config interface eth 1/1/x3 
interface ethernet 1/1/x3
 no shutdown
 mtu                       9000
 role                      inni
 transport-service-profile auto_TransVlan_777
!
NGPON2X4</msg>
<msg timestamp="20190108 00:21:34.268" level="INFO">${res} = show running-config interface eth 1/1/x3 
interface ethernet 1/1/x3
 no shutdown
 mtu                       9000
 role                      inni
 transport-service-profile auto_TransVlan_777
!
...</msg>
<status status="PASS" endtime="20190108 00:21:34.268" starttime="20190108 00:21:24.145"></status>
</kw>
<kw name="Should Not Contain Any" library="BuiltIn">
<doc>Fails if ``container`` contains one or more of the ``*items``.</doc>
<arguments>
<arg>${res}</arg>
<arg>Invalid</arg>
<arg>syntax error</arg>
<arg>Aborted:</arg>
<arg>Error:</arg>
</arguments>
<status status="PASS" endtime="20190108 00:21:34.272" starttime="20190108 00:21:34.270"></status>
</kw>
<msg timestamp="20190108 00:21:34.272" level="INFO">${res} = show running-config interface eth 1/1/x3 
interface ethernet 1/1/x3
 no shutdown
 mtu                       9000
 role                      inni
 transport-service-profile auto_TransVlan_777
!
...</msg>
<status status="PASS" endtime="20190108 00:21:34.272" starttime="20190108 00:21:24.143"></status>
</kw>
<kw name="Get Dictionary Keys" library="Collections">
<doc>Returns keys of the given ``dictionary``.</doc>
<arguments>
<arg>${dict_check_item}</arg>
</arguments>
<assign>
<var>@{list_key}</var>
</assign>
<msg timestamp="20190108 00:21:34.275" level="INFO">@{list_key} = [ mtu ]</msg>
<status status="PASS" endtime="20190108 00:21:34.275" starttime="20190108 00:21:34.274"></status>
</kw>
<kw type="for" name="${check_item} IN [ @{list_key} ]">
<kw type="foritem" name="${check_item} = mtu">
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${dict_check_item}</arg>
<arg>${check_item}</arg>
</arguments>
<assign>
<var>${exp_value}</var>
</assign>
<msg timestamp="20190108 00:21:34.278" level="INFO">${exp_value} = 9000</msg>
<status status="PASS" endtime="20190108 00:21:34.278" starttime="20190108 00:21:34.277"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${res}</arg>
<arg>${check_item}\\s+${exp_value}</arg>
</arguments>
<status status="PASS" endtime="20190108 00:21:34.280" starttime="20190108 00:21:34.279"></status>
</kw>
<status status="PASS" endtime="20190108 00:21:34.280" starttime="20190108 00:21:34.276"></status>
</kw>
<status status="PASS" endtime="20190108 00:21:34.281" starttime="20190108 00:21:34.276"></status>
</kw>
<status status="PASS" endtime="20190108 00:21:34.281" starttime="20190108 00:21:24.140"></status>
</kw>
<kw name="check_running_config_interface" library="keyword_command">
<tags>
<tag>@author=CindyGao</tag>
</tags>
<doc>Description: check "show running-config interface ${port_type} ${port_name} ${query_cmd}" information</doc>
<arguments>
<arg>eutA</arg>
<arg>${service_model.service_point2.type}</arg>
<arg>${service_model.service_point2.member.interface1}</arg>
<arg>mtu=9600</arg>
</arguments>
<kw name="Axos Cli With Error Check" library="keyword_common">
<tags>
<tag>@author=dfarwell</tag>
</tags>
<doc>Sends a CLI command to DUT and confirms response has no errors, if there is no prompt in your topo file this may need to be adjusted</doc>
<arguments>
<arg>${device}</arg>
<arg>show running-config interface ${port_type} ${port_name} ${query_cmd}</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<kw name="Cli" library="caferobot.command.adapter.CliAdapter">
<doc>Execute command on the specific connection and get the output of it</doc>
<arguments>
<arg>${DUT}</arg>
<arg>${CMD}</arg>
<arg>prompt=${devices.${DUT}.prompt}</arg>
<arg>timeout=${TIMEOUT}</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190108 00:21:34.402" level="INFO">send session_command, cmd=show running-config interface eth 1/1/x4 , prompt={'#': None}, timeout=30, newline=None, retry=1, timeout_exception=1, exclude_prompt=None</msg>
<msg timestamp="20190108 00:21:45.896" level="INFO">session_command result=show running-config interface eth 1/1/x4 
interface ethernet 1/1/x4
 no shutdown
 mtu                       9600
 role                      inni
 transport-service-profile auto_TransVlan_777
 erps-ring 2
  role secondary
 !
!
NGPON2X4</msg>
<msg timestamp="20190108 00:21:45.896" level="INFO">${res} = show running-config interface eth 1/1/x4 
interface ethernet 1/1/x4
 no shutdown
 mtu                       9600
 role                      inni
 transport-service-profile auto_TransVlan_777
 er...</msg>
<status status="PASS" endtime="20190108 00:21:45.896" starttime="20190108 00:21:34.398"></status>
</kw>
<kw name="Should Not Contain Any" library="BuiltIn">
<doc>Fails if ``container`` contains one or more of the ``*items``.</doc>
<arguments>
<arg>${res}</arg>
<arg>Invalid</arg>
<arg>syntax error</arg>
<arg>Aborted:</arg>
<arg>Error:</arg>
</arguments>
<status status="PASS" endtime="20190108 00:21:45.899" starttime="20190108 00:21:45.898"></status>
</kw>
<msg timestamp="20190108 00:21:45.900" level="INFO">${res} = show running-config interface eth 1/1/x4 
interface ethernet 1/1/x4
 no shutdown
 mtu                       9600
 role                      inni
 transport-service-profile auto_TransVlan_777
 er...</msg>
<status status="PASS" endtime="20190108 00:21:45.900" starttime="20190108 00:21:34.396"></status>
</kw>
<kw name="Get Dictionary Keys" library="Collections">
<doc>Returns keys of the given ``dictionary``.</doc>
<arguments>
<arg>${dict_check_item}</arg>
</arguments>
<assign>
<var>@{list_key}</var>
</assign>
<msg timestamp="20190108 00:21:45.902" level="INFO">@{list_key} = [ mtu ]</msg>
<status status="PASS" endtime="20190108 00:21:45.903" starttime="20190108 00:21:45.901"></status>
</kw>
<kw type="for" name="${check_item} IN [ @{list_key} ]">
<kw type="foritem" name="${check_item} = mtu">
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${dict_check_item}</arg>
<arg>${check_item}</arg>
</arguments>
<assign>
<var>${exp_value}</var>
</assign>
<msg timestamp="20190108 00:21:45.906" level="INFO">${exp_value} = 9600</msg>
<status status="PASS" endtime="20190108 00:21:45.906" starttime="20190108 00:21:45.905"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${res}</arg>
<arg>${check_item}\\s+${exp_value}</arg>
</arguments>
<status status="PASS" endtime="20190108 00:21:45.908" starttime="20190108 00:21:45.907"></status>
</kw>
<status status="PASS" endtime="20190108 00:21:45.908" starttime="20190108 00:21:45.904"></status>
</kw>
<status status="PASS" endtime="20190108 00:21:45.909" starttime="20190108 00:21:45.903"></status>
</kw>
<status status="PASS" endtime="20190108 00:21:45.909" starttime="20190108 00:21:34.394"></status>
</kw>
<kw name="Log" library="BuiltIn">
<arguments>
<arg>check card 2 mtu</arg>
</arguments>
<msg timestamp="20190108 00:21:45.947" level="INFO">check card 2 mtu</msg>
<status status="PASS" endtime="20190108 00:21:45.947" starttime="20190108 00:21:45.946"></status>
</kw>
<kw name="check_running_config_interface" library="keyword_command">
<tags>
<tag>@author=CindyGao</tag>
</tags>
<doc>Description: check "show running-config interface ${port_type} ${port_name} ${query_cmd}" information</doc>
<arguments>
<arg>eutA</arg>
<arg>${service_model.service_point3.type}</arg>
<arg>${service_model.service_point3.member.interface1}</arg>
<arg>mtu=9000</arg>
</arguments>
<kw name="Axos Cli With Error Check" library="keyword_common">
<tags>
<tag>@author=dfarwell</tag>
</tags>
<doc>Sends a CLI command to DUT and confirms response has no errors, if there is no prompt in your topo file this may need to be adjusted</doc>
<arguments>
<arg>${device}</arg>
<arg>show running-config interface ${port_type} ${port_name} ${query_cmd}</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<kw name="Cli" library="caferobot.command.adapter.CliAdapter">
<doc>Execute command on the specific connection and get the output of it</doc>
<arguments>
<arg>${DUT}</arg>
<arg>${CMD}</arg>
<arg>prompt=${devices.${DUT}.prompt}</arg>
<arg>timeout=${TIMEOUT}</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190108 00:21:46.031" level="INFO">send session_command, cmd=show running-config interface eth 1/2/x11 , prompt={'#': None}, timeout=30, newline=None, retry=1, timeout_exception=1, exclude_prompt=None</msg>
<msg timestamp="20190108 00:21:56.510" level="INFO">session_command result=show running-config interface eth 1/2/x11 
interface ethernet 1/2/x11
 no shutdown
 mtu                       9000
 role                      inni
 transport-service-profile auto_TransVlan_777
!
NGPON2X4</msg>
<msg timestamp="20190108 00:21:56.511" level="INFO">${res} = show running-config interface eth 1/2/x11 
interface ethernet 1/2/x11
 no shutdown
 mtu                       9000
 role                      inni
 transport-service-profile auto_TransVlan_777
!...</msg>
<status status="PASS" endtime="20190108 00:21:56.511" starttime="20190108 00:21:46.029"></status>
</kw>
<kw name="Should Not Contain Any" library="BuiltIn">
<doc>Fails if ``container`` contains one or more of the ``*items``.</doc>
<arguments>
<arg>${res}</arg>
<arg>Invalid</arg>
<arg>syntax error</arg>
<arg>Aborted:</arg>
<arg>Error:</arg>
</arguments>
<status status="PASS" endtime="20190108 00:21:56.514" starttime="20190108 00:21:56.513"></status>
</kw>
<msg timestamp="20190108 00:21:56.515" level="INFO">${res} = show running-config interface eth 1/2/x11 
interface ethernet 1/2/x11
 no shutdown
 mtu                       9000
 role                      inni
 transport-service-profile auto_TransVlan_777
!...</msg>
<status status="PASS" endtime="20190108 00:21:56.515" starttime="20190108 00:21:46.018"></status>
</kw>
<kw name="Get Dictionary Keys" library="Collections">
<doc>Returns keys of the given ``dictionary``.</doc>
<arguments>
<arg>${dict_check_item}</arg>
</arguments>
<assign>
<var>@{list_key}</var>
</assign>
<msg timestamp="20190108 00:21:56.522" level="INFO">@{list_key} = [ mtu ]</msg>
<status status="PASS" endtime="20190108 00:21:56.522" starttime="20190108 00:21:56.521"></status>
</kw>
<kw type="for" name="${check_item} IN [ @{list_key} ]">
<kw type="foritem" name="${check_item} = mtu">
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${dict_check_item}</arg>
<arg>${check_item}</arg>
</arguments>
<assign>
<var>${exp_value}</var>
</assign>
<msg timestamp="20190108 00:21:56.525" level="INFO">${exp_value} = 9000</msg>
<status status="PASS" endtime="20190108 00:21:56.525" starttime="20190108 00:21:56.524"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${res}</arg>
<arg>${check_item}\\s+${exp_value}</arg>
</arguments>
<status status="PASS" endtime="20190108 00:21:56.527" starttime="20190108 00:21:56.526"></status>
</kw>
<status status="PASS" endtime="20190108 00:21:56.527" starttime="20190108 00:21:56.524"></status>
</kw>
<status status="PASS" endtime="20190108 00:21:56.528" starttime="20190108 00:21:56.523"></status>
</kw>
<status status="PASS" endtime="20190108 00:21:56.528" starttime="20190108 00:21:46.015"></status>
</kw>
<kw name="check_running_config_interface" library="keyword_command">
<tags>
<tag>@author=CindyGao</tag>
</tags>
<doc>Description: check "show running-config interface ${port_type} ${port_name} ${query_cmd}" information</doc>
<arguments>
<arg>eutA</arg>
<arg>${service_model.service_point4.type}</arg>
<arg>${service_model.service_point4.member.interface1}</arg>
<arg>mtu=9600</arg>
</arguments>
<kw name="Axos Cli With Error Check" library="keyword_common">
<tags>
<tag>@author=dfarwell</tag>
</tags>
<doc>Sends a CLI command to DUT and confirms response has no errors, if there is no prompt in your topo file this may need to be adjusted</doc>
<arguments>
<arg>${device}</arg>
<arg>show running-config interface ${port_type} ${port_name} ${query_cmd}</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<kw name="Cli" library="caferobot.command.adapter.CliAdapter">
<doc>Execute command on the specific connection and get the output of it</doc>
<arguments>
<arg>${DUT}</arg>
<arg>${CMD}</arg>
<arg>prompt=${devices.${DUT}.prompt}</arg>
<arg>timeout=${TIMEOUT}</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190108 00:21:56.581" level="INFO">send session_command, cmd=show running-config interface eth 1/2/x12 , prompt={'#': None}, timeout=30, newline=None, retry=1, timeout_exception=1, exclude_prompt=None</msg>
<msg timestamp="20190108 00:22:05.345" level="INFO">session_command result=show running-config interface eth 1/2/x12 
interface ethernet 1/2/x12
 no shutdown
 mtu                       9600
 role                      inni
 transport-service-profile auto_TransVlan_777
!
NGPON2X4</msg>
<msg timestamp="20190108 00:22:05.345" level="INFO">${res} = show running-config interface eth 1/2/x12 
interface ethernet 1/2/x12
 no shutdown
 mtu                       9600
 role                      inni
 transport-service-profile auto_TransVlan_777
!...</msg>
<status status="PASS" endtime="20190108 00:22:05.345" starttime="20190108 00:21:56.579"></status>
</kw>
<kw name="Should Not Contain Any" library="BuiltIn">
<doc>Fails if ``container`` contains one or more of the ``*items``.</doc>
<arguments>
<arg>${res}</arg>
<arg>Invalid</arg>
<arg>syntax error</arg>
<arg>Aborted:</arg>
<arg>Error:</arg>
</arguments>
<status status="PASS" endtime="20190108 00:22:05.350" starttime="20190108 00:22:05.348"></status>
</kw>
<msg timestamp="20190108 00:22:05.350" level="INFO">${res} = show running-config interface eth 1/2/x12 
interface ethernet 1/2/x12
 no shutdown
 mtu                       9600
 role                      inni
 transport-service-profile auto_TransVlan_777
!...</msg>
<status status="PASS" endtime="20190108 00:22:05.351" starttime="20190108 00:21:56.577"></status>
</kw>
<kw name="Get Dictionary Keys" library="Collections">
<doc>Returns keys of the given ``dictionary``.</doc>
<arguments>
<arg>${dict_check_item}</arg>
</arguments>
<assign>
<var>@{list_key}</var>
</assign>
<msg timestamp="20190108 00:22:05.354" level="INFO">@{list_key} = [ mtu ]</msg>
<status status="PASS" endtime="20190108 00:22:05.355" starttime="20190108 00:22:05.353"></status>
</kw>
<kw type="for" name="${check_item} IN [ @{list_key} ]">
<kw type="foritem" name="${check_item} = mtu">
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${dict_check_item}</arg>
<arg>${check_item}</arg>
</arguments>
<assign>
<var>${exp_value}</var>
</assign>
<msg timestamp="20190108 00:22:05.357" level="INFO">${exp_value} = 9600</msg>
<status status="PASS" endtime="20190108 00:22:05.358" starttime="20190108 00:22:05.357"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${res}</arg>
<arg>${check_item}\\s+${exp_value}</arg>
</arguments>
<status status="PASS" endtime="20190108 00:22:05.359" starttime="20190108 00:22:05.358"></status>
</kw>
<status status="PASS" endtime="20190108 00:22:05.359" starttime="20190108 00:22:05.356"></status>
</kw>
<status status="PASS" endtime="20190108 00:22:05.360" starttime="20190108 00:22:05.355"></status>
</kw>
<status status="PASS" endtime="20190108 00:22:05.360" starttime="20190108 00:21:56.574"></status>
</kw>
<kw name="Log" library="BuiltIn">
<arguments>
<arg>success</arg>
</arguments>
<msg timestamp="20190108 00:22:05.419" level="INFO">success</msg>
<status status="PASS" endtime="20190108 00:22:05.419" starttime="20190108 00:22:05.418"></status>
</kw>
<kw type="teardown" name="teardown">
<msg timestamp="20190108 00:22:05.495" level="WARN">Multiple keywords with name 'teardown' found. Please specify keyword fullname:
	cafebase.teardown
	teardown</msg>
<kw name="Log" library="BuiltIn">
<arguments>
<arg>reset card 1 ethernet to default 2000</arg>
</arguments>
<msg timestamp="20190108 00:22:05.497" level="INFO">reset card 1 ethernet to default 2000</msg>
<status status="PASS" endtime="20190108 00:22:05.497" starttime="20190108 00:22:05.496"></status>
</kw>
<kw name="dprov_interface_ethernet" library="keyword_command">
<tags>
<tag>@author=BlairWang</tag>
</tags>
<doc>configure on interface</doc>
<arguments>
<arg>eutA</arg>
<arg>${service_model.service_point1.member.interface1}</arg>
<arg>mtu</arg>
</arguments>
<kw name="Axos Cli With Error Check" library="keyword_common">
<tags>
<tag>@author=dfarwell</tag>
</tags>
<doc>Sends a CLI command to DUT and confirms response has no errors, if there is no prompt in your topo file this may need to be adjusted</doc>
<arguments>
<arg>${device}</arg>
<arg>configure</arg>
</arguments>
<kw name="Cli" library="caferobot.command.adapter.CliAdapter">
<doc>Execute command on the specific connection and get the output of it</doc>
<arguments>
<arg>${DUT}</arg>
<arg>${CMD}</arg>
<arg>prompt=${devices.${DUT}.prompt}</arg>
<arg>timeout=${TIMEOUT}</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190108 00:22:05.519" level="INFO">send session_command, cmd=configure, prompt={'#': None}, timeout=30, newline=None, retry=1, timeout_exception=1, exclude_prompt=None</msg>
<msg timestamp="20190108 00:22:05.910" level="INFO">session_command result=configure
Enter configuration commands, one per line. End with CNTL/Z.
Current configuration users:
sysadmin ssh (cli from 10.200.201.26) on since 2019-01-07 23:52:17 terminal mode
NGPON2X4(config)</msg>
<msg timestamp="20190108 00:22:05.910" level="INFO">${res} = configure
Enter configuration commands, one per line. End with CNTL/Z.
Current configuration users:
sysadmin ssh (cli from 10.200.201.26) on since 2019-01-07 23:52:17 terminal mode
NGPON2X4(config...</msg>
<status status="PASS" endtime="20190108 00:22:05.911" starttime="20190108 00:22:05.501"></status>
</kw>
<kw name="Should Not Contain Any" library="BuiltIn">
<doc>Fails if ``container`` contains one or more of the ``*items``.</doc>
<arguments>
<arg>${res}</arg>
<arg>Invalid</arg>
<arg>syntax error</arg>
<arg>Aborted:</arg>
<arg>Error:</arg>
</arguments>
<status status="PASS" endtime="20190108 00:22:05.914" starttime="20190108 00:22:05.912"></status>
</kw>
<status status="PASS" endtime="20190108 00:22:05.915" starttime="20190108 00:22:05.499"></status>
</kw>
<kw name="Axos Cli With Error Check" library="keyword_common">
<tags>
<tag>@author=dfarwell</tag>
</tags>
<doc>Sends a CLI command to DUT and confirms response has no errors, if there is no prompt in your topo file this may need to be adjusted</doc>
<arguments>
<arg>${device}</arg>
<arg>interface ethernet ${interface}</arg>
</arguments>
<kw name="Cli" library="caferobot.command.adapter.CliAdapter">
<doc>Execute command on the specific connection and get the output of it</doc>
<arguments>
<arg>${DUT}</arg>
<arg>${CMD}</arg>
<arg>prompt=${devices.${DUT}.prompt}</arg>
<arg>timeout=${TIMEOUT}</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190108 00:22:05.925" level="INFO">send session_command, cmd=interface ethernet 1/1/x3, prompt={'#': None}, timeout=30, newline=None, retry=1, timeout_exception=1, exclude_prompt=None</msg>
<msg timestamp="20190108 00:22:06.381" level="INFO">session_command result=interface ethernet 1/1/x3
NGPON2X4(config-ethernet-1/1/x3)</msg>
<msg timestamp="20190108 00:22:06.381" level="INFO">${res} = interface ethernet 1/1/x3
NGPON2X4(config-ethernet-1/1/x3)</msg>
<status status="PASS" endtime="20190108 00:22:06.381" starttime="20190108 00:22:05.920"></status>
</kw>
<kw name="Should Not Contain Any" library="BuiltIn">
<doc>Fails if ``container`` contains one or more of the ``*items``.</doc>
<arguments>
<arg>${res}</arg>
<arg>Invalid</arg>
<arg>syntax error</arg>
<arg>Aborted:</arg>
<arg>Error:</arg>
</arguments>
<status status="PASS" endtime="20190108 00:22:06.384" starttime="20190108 00:22:06.383"></status>
</kw>
<status status="PASS" endtime="20190108 00:22:06.385" starttime="20190108 00:22:05.917"></status>
</kw>
<kw type="for" name="${element} IN [ @{list_cmd} ]">
<kw type="foritem" name="${element} = mtu">
<kw name="Axos Cli With Error Check" library="keyword_common">
<tags>
<tag>@author=dfarwell</tag>
</tags>
<doc>Sends a CLI command to DUT and confirms response has no errors, if there is no prompt in your topo file this may need to be adjusted</doc>
<arguments>
<arg>${device}</arg>
<arg>no ${element}</arg>
</arguments>
<kw name="Cli" library="caferobot.command.adapter.CliAdapter">
<doc>Execute command on the specific connection and get the output of it</doc>
<arguments>
<arg>${DUT}</arg>
<arg>${CMD}</arg>
<arg>prompt=${devices.${DUT}.prompt}</arg>
<arg>timeout=${TIMEOUT}</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190108 00:22:06.392" level="INFO">send session_command, cmd=no mtu, prompt={'#': None}, timeout=30, newline=None, retry=1, timeout_exception=1, exclude_prompt=None</msg>
<msg timestamp="20190108 00:22:09.692" level="INFO">session_command result=no mtu
NGPON2X4(config-ethernet-1/1/x3)</msg>
<msg timestamp="20190108 00:22:09.693" level="INFO">${res} = no mtu
NGPON2X4(config-ethernet-1/1/x3)</msg>
<status status="PASS" endtime="20190108 00:22:09.693" starttime="20190108 00:22:06.390"></status>
</kw>
<kw name="Should Not Contain Any" library="BuiltIn">
<doc>Fails if ``container`` contains one or more of the ``*items``.</doc>
<arguments>
<arg>${res}</arg>
<arg>Invalid</arg>
<arg>syntax error</arg>
<arg>Aborted:</arg>
<arg>Error:</arg>
</arguments>
<status status="PASS" endtime="20190108 00:22:09.702" starttime="20190108 00:22:09.700"></status>
</kw>
<status status="PASS" endtime="20190108 00:22:09.703" starttime="20190108 00:22:06.388"></status>
</kw>
<status status="PASS" endtime="20190108 00:22:09.705" starttime="20190108 00:22:06.387"></status>
</kw>
<status status="PASS" endtime="20190108 00:22:09.706" starttime="20190108 00:22:06.387"></status>
</kw>
<kw type="teardown" name="Axos Cli With Error Check" library="keyword_common">
<tags>
<tag>@author=dfarwell</tag>
</tags>
<doc>Sends a CLI command to DUT and confirms response has no errors, if there is no prompt in your topo file this may need to be adjusted</doc>
<arguments>
<arg>${device}</arg>
<arg>end</arg>
</arguments>
<kw name="Cli" library="caferobot.command.adapter.CliAdapter">
<doc>Execute command on the specific connection and get the output of it</doc>
<arguments>
<arg>${DUT}</arg>
<arg>${CMD}</arg>
<arg>prompt=${devices.${DUT}.prompt}</arg>
<arg>timeout=${TIMEOUT}</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190108 00:22:09.715" level="INFO">send session_command, cmd=end, prompt={'#': None}, timeout=30, newline=None, retry=1, timeout_exception=1, exclude_prompt=None</msg>
<msg timestamp="20190108 00:22:10.114" level="INFO">session_command result=end
NGPON2X4</msg>
<msg timestamp="20190108 00:22:10.114" level="INFO">${res} = end
NGPON2X4</msg>
<status status="PASS" endtime="20190108 00:22:10.114" starttime="20190108 00:22:09.711"></status>
</kw>
<kw name="Should Not Contain Any" library="BuiltIn">
<doc>Fails if ``container`` contains one or more of the ``*items``.</doc>
<arguments>
<arg>${res}</arg>
<arg>Invalid</arg>
<arg>syntax error</arg>
<arg>Aborted:</arg>
<arg>Error:</arg>
</arguments>
<status status="PASS" endtime="20190108 00:22:10.123" starttime="20190108 00:22:10.122"></status>
</kw>
<status status="PASS" endtime="20190108 00:22:10.124" starttime="20190108 00:22:09.708"></status>
</kw>
<status status="PASS" endtime="20190108 00:22:10.125" starttime="20190108 00:22:05.498"></status>
</kw>
<kw name="dprov_interface_ethernet" library="keyword_command">
<tags>
<tag>@author=BlairWang</tag>
</tags>
<doc>configure on interface</doc>
<arguments>
<arg>eutA</arg>
<arg>${service_model.service_point2.member.interface1}</arg>
<arg>mtu</arg>
</arguments>
<kw name="Axos Cli With Error Check" library="keyword_common">
<tags>
<tag>@author=dfarwell</tag>
</tags>
<doc>Sends a CLI command to DUT and confirms response has no errors, if there is no prompt in your topo file this may need to be adjusted</doc>
<arguments>
<arg>${device}</arg>
<arg>configure</arg>
</arguments>
<kw name="Cli" library="caferobot.command.adapter.CliAdapter">
<doc>Execute command on the specific connection and get the output of it</doc>
<arguments>
<arg>${DUT}</arg>
<arg>${CMD}</arg>
<arg>prompt=${devices.${DUT}.prompt}</arg>
<arg>timeout=${TIMEOUT}</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190108 00:22:10.131" level="INFO">send session_command, cmd=configure, prompt={'#': None}, timeout=30, newline=None, retry=1, timeout_exception=1, exclude_prompt=None</msg>
<msg timestamp="20190108 00:22:10.536" level="INFO">session_command result=configure
Enter configuration commands, one per line. End with CNTL/Z.
Current configuration users:
sysadmin ssh (cli from 10.200.201.26) on since 2019-01-07 23:52:17 terminal mode
NGPON2X4(config)</msg>
<msg timestamp="20190108 00:22:10.537" level="INFO">${res} = configure
Enter configuration commands, one per line. End with CNTL/Z.
Current configuration users:
sysadmin ssh (cli from 10.200.201.26) on since 2019-01-07 23:52:17 terminal mode
NGPON2X4(config...</msg>
<status status="PASS" endtime="20190108 00:22:10.537" starttime="20190108 00:22:10.129"></status>
</kw>
<kw name="Should Not Contain Any" library="BuiltIn">
<doc>Fails if ``container`` contains one or more of the ``*items``.</doc>
<arguments>
<arg>${res}</arg>
<arg>Invalid</arg>
<arg>syntax error</arg>
<arg>Aborted:</arg>
<arg>Error:</arg>
</arguments>
<status status="PASS" endtime="20190108 00:22:10.539" starttime="20190108 00:22:10.538"></status>
</kw>
<status status="PASS" endtime="20190108 00:22:10.540" starttime="20190108 00:22:10.128"></status>
</kw>
<kw name="Axos Cli With Error Check" library="keyword_common">
<tags>
<tag>@author=dfarwell</tag>
</tags>
<doc>Sends a CLI command to DUT and confirms response has no errors, if there is no prompt in your topo file this may need to be adjusted</doc>
<arguments>
<arg>${device}</arg>
<arg>interface ethernet ${interface}</arg>
</arguments>
<kw name="Cli" library="caferobot.command.adapter.CliAdapter">
<doc>Execute command on the specific connection and get the output of it</doc>
<arguments>
<arg>${DUT}</arg>
<arg>${CMD}</arg>
<arg>prompt=${devices.${DUT}.prompt}</arg>
<arg>timeout=${TIMEOUT}</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190108 00:22:10.545" level="INFO">send session_command, cmd=interface ethernet 1/1/x4, prompt={'#': None}, timeout=30, newline=None, retry=1, timeout_exception=1, exclude_prompt=None</msg>
<msg timestamp="20190108 00:22:10.919" level="INFO">session_command result=interface ethernet 1/1/x4
NGPON2X4(config-ethernet-1/1/x4)</msg>
<msg timestamp="20190108 00:22:10.919" level="INFO">${res} = interface ethernet 1/1/x4
NGPON2X4(config-ethernet-1/1/x4)</msg>
<status status="PASS" endtime="20190108 00:22:10.920" starttime="20190108 00:22:10.542"></status>
</kw>
<kw name="Should Not Contain Any" library="BuiltIn">
<doc>Fails if ``container`` contains one or more of the ``*items``.</doc>
<arguments>
<arg>${res}</arg>
<arg>Invalid</arg>
<arg>syntax error</arg>
<arg>Aborted:</arg>
<arg>Error:</arg>
</arguments>
<status status="PASS" endtime="20190108 00:22:10.922" starttime="20190108 00:22:10.921"></status>
</kw>
<status status="PASS" endtime="20190108 00:22:10.923" starttime="20190108 00:22:10.541"></status>
</kw>
<kw type="for" name="${element} IN [ @{list_cmd} ]">
<kw type="foritem" name="${element} = mtu">
<kw name="Axos Cli With Error Check" library="keyword_common">
<tags>
<tag>@author=dfarwell</tag>
</tags>
<doc>Sends a CLI command to DUT and confirms response has no errors, if there is no prompt in your topo file this may need to be adjusted</doc>
<arguments>
<arg>${device}</arg>
<arg>no ${element}</arg>
</arguments>
<kw name="Cli" library="caferobot.command.adapter.CliAdapter">
<doc>Execute command on the specific connection and get the output of it</doc>
<arguments>
<arg>${DUT}</arg>
<arg>${CMD}</arg>
<arg>prompt=${devices.${DUT}.prompt}</arg>
<arg>timeout=${TIMEOUT}</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190108 00:22:10.930" level="INFO">send session_command, cmd=no mtu, prompt={'#': None}, timeout=30, newline=None, retry=1, timeout_exception=1, exclude_prompt=None</msg>
<msg timestamp="20190108 00:22:11.536" level="INFO">session_command result=no mtu
NGPON2X4(config-ethernet-1/1/x4)</msg>
<msg timestamp="20190108 00:22:11.537" level="INFO">${res} = no mtu
NGPON2X4(config-ethernet-1/1/x4)</msg>
<status status="PASS" endtime="20190108 00:22:11.537" starttime="20190108 00:22:10.927"></status>
</kw>
<kw name="Should Not Contain Any" library="BuiltIn">
<doc>Fails if ``container`` contains one or more of the ``*items``.</doc>
<arguments>
<arg>${res}</arg>
<arg>Invalid</arg>
<arg>syntax error</arg>
<arg>Aborted:</arg>
<arg>Error:</arg>
</arguments>
<status status="PASS" endtime="20190108 00:22:11.540" starttime="20190108 00:22:11.539"></status>
</kw>
<status status="PASS" endtime="20190108 00:22:11.541" starttime="20190108 00:22:10.926"></status>
</kw>
<status status="PASS" endtime="20190108 00:22:11.542" starttime="20190108 00:22:10.925"></status>
</kw>
<status status="PASS" endtime="20190108 00:22:11.543" starttime="20190108 00:22:10.924"></status>
</kw>
<kw type="teardown" name="Axos Cli With Error Check" library="keyword_common">
<tags>
<tag>@author=dfarwell</tag>
</tags>
<doc>Sends a CLI command to DUT and confirms response has no errors, if there is no prompt in your topo file this may need to be adjusted</doc>
<arguments>
<arg>${device}</arg>
<arg>end</arg>
</arguments>
<kw name="Cli" library="caferobot.command.adapter.CliAdapter">
<doc>Execute command on the specific connection and get the output of it</doc>
<arguments>
<arg>${DUT}</arg>
<arg>${CMD}</arg>
<arg>prompt=${devices.${DUT}.prompt}</arg>
<arg>timeout=${TIMEOUT}</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190108 00:22:11.549" level="INFO">send session_command, cmd=end, prompt={'#': None}, timeout=30, newline=None, retry=1, timeout_exception=1, exclude_prompt=None</msg>
<msg timestamp="20190108 00:22:11.968" level="INFO">session_command result=end
NGPON2X4</msg>
<msg timestamp="20190108 00:22:11.968" level="INFO">${res} = end
NGPON2X4</msg>
<status status="PASS" endtime="20190108 00:22:11.968" starttime="20190108 00:22:11.546"></status>
</kw>
<kw name="Should Not Contain Any" library="BuiltIn">
<doc>Fails if ``container`` contains one or more of the ``*items``.</doc>
<arguments>
<arg>${res}</arg>
<arg>Invalid</arg>
<arg>syntax error</arg>
<arg>Aborted:</arg>
<arg>Error:</arg>
</arguments>
<status status="PASS" endtime="20190108 00:22:11.974" starttime="20190108 00:22:11.972"></status>
</kw>
<status status="PASS" endtime="20190108 00:22:11.975" starttime="20190108 00:22:11.545"></status>
</kw>
<status status="PASS" endtime="20190108 00:22:11.977" starttime="20190108 00:22:10.127"></status>
</kw>
<kw name="Log" library="BuiltIn">
<arguments>
<arg>reset card 2 ethernet to default 2000</arg>
</arguments>
<msg timestamp="20190108 00:22:11.980" level="INFO">reset card 2 ethernet to default 2000</msg>
<status status="PASS" endtime="20190108 00:22:11.980" starttime="20190108 00:22:11.979"></status>
</kw>
<kw name="dprov_interface_ethernet" library="keyword_command">
<tags>
<tag>@author=BlairWang</tag>
</tags>
<doc>configure on interface</doc>
<arguments>
<arg>eutA</arg>
<arg>${service_model.service_point3.member.interface1}</arg>
<arg>mtu</arg>
</arguments>
<kw name="Axos Cli With Error Check" library="keyword_common">
<tags>
<tag>@author=dfarwell</tag>
</tags>
<doc>Sends a CLI command to DUT and confirms response has no errors, if there is no prompt in your topo file this may need to be adjusted</doc>
<arguments>
<arg>${device}</arg>
<arg>configure</arg>
</arguments>
<kw name="Cli" library="caferobot.command.adapter.CliAdapter">
<doc>Execute command on the specific connection and get the output of it</doc>
<arguments>
<arg>${DUT}</arg>
<arg>${CMD}</arg>
<arg>prompt=${devices.${DUT}.prompt}</arg>
<arg>timeout=${TIMEOUT}</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190108 00:22:11.985" level="INFO">send session_command, cmd=configure, prompt={'#': None}, timeout=30, newline=None, retry=1, timeout_exception=1, exclude_prompt=None</msg>
<msg timestamp="20190108 00:22:12.354" level="INFO">session_command result=configure
Enter configuration commands, one per line. End with CNTL/Z.
NGPON2X4(config)</msg>
<msg timestamp="20190108 00:22:12.354" level="INFO">${res} = configure
Enter configuration commands, one per line. End with CNTL/Z.
NGPON2X4(config)</msg>
<status status="PASS" endtime="20190108 00:22:12.354" starttime="20190108 00:22:11.983"></status>
</kw>
<kw name="Should Not Contain Any" library="BuiltIn">
<doc>Fails if ``container`` contains one or more of the ``*items``.</doc>
<arguments>
<arg>${res}</arg>
<arg>Invalid</arg>
<arg>syntax error</arg>
<arg>Aborted:</arg>
<arg>Error:</arg>
</arguments>
<status status="PASS" endtime="20190108 00:22:12.357" starttime="20190108 00:22:12.356"></status>
</kw>
<status status="PASS" endtime="20190108 00:22:12.358" starttime="20190108 00:22:11.982"></status>
</kw>
<kw name="Axos Cli With Error Check" library="keyword_common">
<tags>
<tag>@author=dfarwell</tag>
</tags>
<doc>Sends a CLI command to DUT and confirms response has no errors, if there is no prompt in your topo file this may need to be adjusted</doc>
<arguments>
<arg>${device}</arg>
<arg>interface ethernet ${interface}</arg>
</arguments>
<kw name="Cli" library="caferobot.command.adapter.CliAdapter">
<doc>Execute command on the specific connection and get the output of it</doc>
<arguments>
<arg>${DUT}</arg>
<arg>${CMD}</arg>
<arg>prompt=${devices.${DUT}.prompt}</arg>
<arg>timeout=${TIMEOUT}</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190108 00:22:12.363" level="INFO">send session_command, cmd=interface ethernet 1/2/x11, prompt={'#': None}, timeout=30, newline=None, retry=1, timeout_exception=1, exclude_prompt=None</msg>
<msg timestamp="20190108 00:22:12.852" level="INFO">session_command result=interface ethernet 1/2/x11
NGPON2X4(config-ethernet-1/2/x11)</msg>
<msg timestamp="20190108 00:22:12.853" level="INFO">${res} = interface ethernet 1/2/x11
NGPON2X4(config-ethernet-1/2/x11)</msg>
<status status="PASS" endtime="20190108 00:22:12.853" starttime="20190108 00:22:12.361"></status>
</kw>
<kw name="Should Not Contain Any" library="BuiltIn">
<doc>Fails if ``container`` contains one or more of the ``*items``.</doc>
<arguments>
<arg>${res}</arg>
<arg>Invalid</arg>
<arg>syntax error</arg>
<arg>Aborted:</arg>
<arg>Error:</arg>
</arguments>
<status status="PASS" endtime="20190108 00:22:12.856" starttime="20190108 00:22:12.855"></status>
</kw>
<status status="PASS" endtime="20190108 00:22:12.856" starttime="20190108 00:22:12.359"></status>
</kw>
<kw type="for" name="${element} IN [ @{list_cmd} ]">
<kw type="foritem" name="${element} = mtu">
<kw name="Axos Cli With Error Check" library="keyword_common">
<tags>
<tag>@author=dfarwell</tag>
</tags>
<doc>Sends a CLI command to DUT and confirms response has no errors, if there is no prompt in your topo file this may need to be adjusted</doc>
<arguments>
<arg>${device}</arg>
<arg>no ${element}</arg>
</arguments>
<kw name="Cli" library="caferobot.command.adapter.CliAdapter">
<doc>Execute command on the specific connection and get the output of it</doc>
<arguments>
<arg>${DUT}</arg>
<arg>${CMD}</arg>
<arg>prompt=${devices.${DUT}.prompt}</arg>
<arg>timeout=${TIMEOUT}</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190108 00:22:12.866" level="INFO">send session_command, cmd=no mtu, prompt={'#': None}, timeout=30, newline=None, retry=1, timeout_exception=1, exclude_prompt=None</msg>
<msg timestamp="20190108 00:22:13.530" level="INFO">session_command result=no mtu
NGPON2X4(config-ethernet-1/2/x11)</msg>
<msg timestamp="20190108 00:22:13.531" level="INFO">${res} = no mtu
NGPON2X4(config-ethernet-1/2/x11)</msg>
<status status="PASS" endtime="20190108 00:22:13.531" starttime="20190108 00:22:12.861"></status>
</kw>
<kw name="Should Not Contain Any" library="BuiltIn">
<doc>Fails if ``container`` contains one or more of the ``*items``.</doc>
<arguments>
<arg>${res}</arg>
<arg>Invalid</arg>
<arg>syntax error</arg>
<arg>Aborted:</arg>
<arg>Error:</arg>
</arguments>
<status status="PASS" endtime="20190108 00:22:13.534" starttime="20190108 00:22:13.533"></status>
</kw>
<status status="PASS" endtime="20190108 00:22:13.535" starttime="20190108 00:22:12.859"></status>
</kw>
<status status="PASS" endtime="20190108 00:22:13.538" starttime="20190108 00:22:12.859"></status>
</kw>
<status status="PASS" endtime="20190108 00:22:13.540" starttime="20190108 00:22:12.858"></status>
</kw>
<kw type="teardown" name="Axos Cli With Error Check" library="keyword_common">
<tags>
<tag>@author=dfarwell</tag>
</tags>
<doc>Sends a CLI command to DUT and confirms response has no errors, if there is no prompt in your topo file this may need to be adjusted</doc>
<arguments>
<arg>${device}</arg>
<arg>end</arg>
</arguments>
<kw name="Cli" library="caferobot.command.adapter.CliAdapter">
<doc>Execute command on the specific connection and get the output of it</doc>
<arguments>
<arg>${DUT}</arg>
<arg>${CMD}</arg>
<arg>prompt=${devices.${DUT}.prompt}</arg>
<arg>timeout=${TIMEOUT}</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190108 00:22:13.568" level="INFO">send session_command, cmd=end, prompt={'#': None}, timeout=30, newline=None, retry=1, timeout_exception=1, exclude_prompt=None</msg>
<msg timestamp="20190108 00:22:14.029" level="INFO">session_command result=end
NGPON2X4</msg>
<msg timestamp="20190108 00:22:14.029" level="INFO">${res} = end
NGPON2X4</msg>
<status status="PASS" endtime="20190108 00:22:14.029" starttime="20190108 00:22:13.543"></status>
</kw>
<kw name="Should Not Contain Any" library="BuiltIn">
<doc>Fails if ``container`` contains one or more of the ``*items``.</doc>
<arguments>
<arg>${res}</arg>
<arg>Invalid</arg>
<arg>syntax error</arg>
<arg>Aborted:</arg>
<arg>Error:</arg>
</arguments>
<status status="PASS" endtime="20190108 00:22:14.032" starttime="20190108 00:22:14.031"></status>
</kw>
<status status="PASS" endtime="20190108 00:22:14.033" starttime="20190108 00:22:13.541"></status>
</kw>
<status status="PASS" endtime="20190108 00:22:14.035" starttime="20190108 00:22:11.980"></status>
</kw>
<kw name="dprov_interface_ethernet" library="keyword_command">
<tags>
<tag>@author=BlairWang</tag>
</tags>
<doc>configure on interface</doc>
<arguments>
<arg>eutA</arg>
<arg>${service_model.service_point4.member.interface1}</arg>
<arg>mtu</arg>
</arguments>
<kw name="Axos Cli With Error Check" library="keyword_common">
<tags>
<tag>@author=dfarwell</tag>
</tags>
<doc>Sends a CLI command to DUT and confirms response has no errors, if there is no prompt in your topo file this may need to be adjusted</doc>
<arguments>
<arg>${device}</arg>
<arg>configure</arg>
</arguments>
<kw name="Cli" library="caferobot.command.adapter.CliAdapter">
<doc>Execute command on the specific connection and get the output of it</doc>
<arguments>
<arg>${DUT}</arg>
<arg>${CMD}</arg>
<arg>prompt=${devices.${DUT}.prompt}</arg>
<arg>timeout=${TIMEOUT}</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190108 00:22:14.041" level="INFO">send session_command, cmd=configure, prompt={'#': None}, timeout=30, newline=None, retry=1, timeout_exception=1, exclude_prompt=None</msg>
<msg timestamp="20190108 00:22:14.678" level="INFO">session_command result=configure
Enter configuration commands, one per line. End with CNTL/Z.
NGPON2X4(config)</msg>
<msg timestamp="20190108 00:22:14.679" level="INFO">${res} = configure
Enter configuration commands, one per line. End with CNTL/Z.
NGPON2X4(config)</msg>
<status status="PASS" endtime="20190108 00:22:14.679" starttime="20190108 00:22:14.039"></status>
</kw>
<kw name="Should Not Contain Any" library="BuiltIn">
<doc>Fails if ``container`` contains one or more of the ``*items``.</doc>
<arguments>
<arg>${res}</arg>
<arg>Invalid</arg>
<arg>syntax error</arg>
<arg>Aborted:</arg>
<arg>Error:</arg>
</arguments>
<status status="PASS" endtime="20190108 00:22:14.683" starttime="20190108 00:22:14.682"></status>
</kw>
<status status="PASS" endtime="20190108 00:22:14.683" starttime="20190108 00:22:14.038"></status>
</kw>
<kw name="Axos Cli With Error Check" library="keyword_common">
<tags>
<tag>@author=dfarwell</tag>
</tags>
<doc>Sends a CLI command to DUT and confirms response has no errors, if there is no prompt in your topo file this may need to be adjusted</doc>
<arguments>
<arg>${device}</arg>
<arg>interface ethernet ${interface}</arg>
</arguments>
<kw name="Cli" library="caferobot.command.adapter.CliAdapter">
<doc>Execute command on the specific connection and get the output of it</doc>
<arguments>
<arg>${DUT}</arg>
<arg>${CMD}</arg>
<arg>prompt=${devices.${DUT}.prompt}</arg>
<arg>timeout=${TIMEOUT}</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190108 00:22:14.693" level="INFO">send session_command, cmd=interface ethernet 1/2/x12, prompt={'#': None}, timeout=30, newline=None, retry=1, timeout_exception=1, exclude_prompt=None</msg>
<msg timestamp="20190108 00:22:15.217" level="INFO">session_command result=interface ethernet 1/2/x12
NGPON2X4(config-ethernet-1/2/x12)</msg>
<msg timestamp="20190108 00:22:15.217" level="INFO">${res} = interface ethernet 1/2/x12
NGPON2X4(config-ethernet-1/2/x12)</msg>
<status status="PASS" endtime="20190108 00:22:15.217" starttime="20190108 00:22:14.688"></status>
</kw>
<kw name="Should Not Contain Any" library="BuiltIn">
<doc>Fails if ``container`` contains one or more of the ``*items``.</doc>
<arguments>
<arg>${res}</arg>
<arg>Invalid</arg>
<arg>syntax error</arg>
<arg>Aborted:</arg>
<arg>Error:</arg>
</arguments>
<status status="PASS" endtime="20190108 00:22:15.221" starttime="20190108 00:22:15.220"></status>
</kw>
<status status="PASS" endtime="20190108 00:22:15.221" starttime="20190108 00:22:14.686"></status>
</kw>
<kw type="for" name="${element} IN [ @{list_cmd} ]">
<kw type="foritem" name="${element} = mtu">
<kw name="Axos Cli With Error Check" library="keyword_common">
<tags>
<tag>@author=dfarwell</tag>
</tags>
<doc>Sends a CLI command to DUT and confirms response has no errors, if there is no prompt in your topo file this may need to be adjusted</doc>
<arguments>
<arg>${device}</arg>
<arg>no ${element}</arg>
</arguments>
<kw name="Cli" library="caferobot.command.adapter.CliAdapter">
<doc>Execute command on the specific connection and get the output of it</doc>
<arguments>
<arg>${DUT}</arg>
<arg>${CMD}</arg>
<arg>prompt=${devices.${DUT}.prompt}</arg>
<arg>timeout=${TIMEOUT}</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190108 00:22:15.227" level="INFO">send session_command, cmd=no mtu, prompt={'#': None}, timeout=30, newline=None, retry=1, timeout_exception=1, exclude_prompt=None</msg>
<msg timestamp="20190108 00:22:15.765" level="INFO">session_command result=no mtu
NGPON2X4(config-ethernet-1/2/x12)</msg>
<msg timestamp="20190108 00:22:15.765" level="INFO">${res} = no mtu
NGPON2X4(config-ethernet-1/2/x12)</msg>
<status status="PASS" endtime="20190108 00:22:15.765" starttime="20190108 00:22:15.225"></status>
</kw>
<kw name="Should Not Contain Any" library="BuiltIn">
<doc>Fails if ``container`` contains one or more of the ``*items``.</doc>
<arguments>
<arg>${res}</arg>
<arg>Invalid</arg>
<arg>syntax error</arg>
<arg>Aborted:</arg>
<arg>Error:</arg>
</arguments>
<status status="PASS" endtime="20190108 00:22:15.769" starttime="20190108 00:22:15.767"></status>
</kw>
<status status="PASS" endtime="20190108 00:22:15.769" starttime="20190108 00:22:15.224"></status>
</kw>
<status status="PASS" endtime="20190108 00:22:15.778" starttime="20190108 00:22:15.223"></status>
</kw>
<status status="PASS" endtime="20190108 00:22:15.780" starttime="20190108 00:22:15.222"></status>
</kw>
<kw type="teardown" name="Axos Cli With Error Check" library="keyword_common">
<tags>
<tag>@author=dfarwell</tag>
</tags>
<doc>Sends a CLI command to DUT and confirms response has no errors, if there is no prompt in your topo file this may need to be adjusted</doc>
<arguments>
<arg>${device}</arg>
<arg>end</arg>
</arguments>
<kw name="Cli" library="caferobot.command.adapter.CliAdapter">
<doc>Execute command on the specific connection and get the output of it</doc>
<arguments>
<arg>${DUT}</arg>
<arg>${CMD}</arg>
<arg>prompt=${devices.${DUT}.prompt}</arg>
<arg>timeout=${TIMEOUT}</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190108 00:22:15.787" level="INFO">send session_command, cmd=end, prompt={'#': None}, timeout=30, newline=None, retry=1, timeout_exception=1, exclude_prompt=None</msg>
<msg timestamp="20190108 00:22:16.123" level="INFO">session_command result=end
NGPON2X4</msg>
<msg timestamp="20190108 00:22:16.123" level="INFO">${res} = end
NGPON2X4</msg>
<status status="PASS" endtime="20190108 00:22:16.123" starttime="20190108 00:22:15.785"></status>
</kw>
<kw name="Should Not Contain Any" library="BuiltIn">
<doc>Fails if ``container`` contains one or more of the ``*items``.</doc>
<arguments>
<arg>${res}</arg>
<arg>Invalid</arg>
<arg>syntax error</arg>
<arg>Aborted:</arg>
<arg>Error:</arg>
</arguments>
<status status="PASS" endtime="20190108 00:22:16.126" starttime="20190108 00:22:16.125"></status>
</kw>
<status status="PASS" endtime="20190108 00:22:16.127" starttime="20190108 00:22:15.782"></status>
</kw>
<status status="PASS" endtime="20190108 00:22:16.128" starttime="20190108 00:22:14.037"></status>
</kw>
<status status="PASS" endtime="20190108 00:22:16.130" starttime="20190108 00:22:05.481"></status>
</kw>
<doc>The purpose of this test is to Check card's ethernet mtu 9000
1.set ethernet mtu 9000
2.check ethernet mtu 9000</doc>
<tags>
<tag>@author=pzhang</tag>
<tag>@eut=10GE-12</tag>
<tag>@eut=GPON-8r2</tag>
<tag>@feature=HW_Support</tag>
<tag>@globalid=2533451</tag>
<tag>@subfeature=MTU_size_of_9k</tag>
<tag>@tcid=AXOS_E72_PARENT-TC-4716</tag>
<tag>@user_interface=CLI</tag>
</tags>
<status status="PASS" endtime="20190108 00:22:16.200" critical="yes" starttime="20190108 00:21:16.492"></status>
</test>
<doc>The purpose of this test is to Check card's ethernet mtu 9000
1.set ethernet mtu 9000
2.check ethernet mtu 9000
</doc>
<status status="PASS" endtime="20190108 00:22:16.403" starttime="20190108 00:21:16.240"></status>
</suite>
<kw type="teardown" name="test_teardown">
<kw name="Log" library="BuiltIn">
<arguments>
<arg>Enter teardown</arg>
</arguments>
<msg timestamp="20190108 00:22:16.490" level="INFO">Enter teardown</msg>
<status status="PASS" endtime="20190108 00:22:16.491" starttime="20190108 00:22:16.490"></status>
</kw>
<kw name="Log" library="BuiltIn">
<arguments>
<arg>service_point remove_svc and deprovision</arg>
</arguments>
<msg timestamp="20190108 00:22:16.492" level="INFO">service_point remove_svc and deprovision</msg>
<status status="PASS" endtime="20190108 00:22:16.492" starttime="20190108 00:22:16.491"></status>
</kw>
<kw name="service_point_remove_vlan" library="keyword_service_model">
<tags>
<tag>@author=CindyGao</tag>
</tags>
<doc>Description: remove vlan for service_point</doc>
<arguments>
<arg>service_point_list1</arg>
<arg>${service_vlan}</arg>
</arguments>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${vlan_list}</arg>
</arguments>
<assign>
<var>${vlan_list_str}</var>
</assign>
<msg timestamp="20190108 00:22:16.494" level="DEBUG">Argument types are:
&lt;type 'int'&gt;</msg>
<msg timestamp="20190108 00:22:16.495" level="INFO">${vlan_list_str} = 777</msg>
<status status="PASS" endtime="20190108 00:22:16.495" starttime="20190108 00:22:16.494"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${vlan_list_str}</arg>
<arg>,</arg>
<arg>_</arg>
</arguments>
<assign>
<var>${vlan_list_str}</var>
</assign>
<msg timestamp="20190108 00:22:16.496" level="INFO">${vlan_list_str} = 777</msg>
<status status="PASS" endtime="20190108 00:22:16.497" starttime="20190108 00:22:16.495"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${cfg_prefix}_TransVlan_${vlan_list_str}</arg>
</arguments>
<assign>
<var>${transport_prf}</var>
</assign>
<msg timestamp="20190108 00:22:16.498" level="INFO">${transport_prf} = auto_TransVlan_777</msg>
<status status="PASS" endtime="20190108 00:22:16.498" starttime="20190108 00:22:16.497"></status>
</kw>
<kw type="for" name="${service_point} IN [ @{service_model.${service_point_list}} ]">
<kw type="foritem" name="${service_point} = service_point1">
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${service_model.${service_point}.device}</arg>
</arguments>
<assign>
<var>${device}</var>
</assign>
<msg timestamp="20190108 00:22:16.502" level="INFO">${device} = eutA</msg>
<status status="PASS" endtime="20190108 00:22:16.502" starttime="20190108 00:22:16.501"></status>
</kw>
<kw name="Log" library="BuiltIn">
<arguments>
<arg>****** uplink service remove vlan ${vlan_list} for ${device} ${service_point} ******</arg>
</arguments>
<msg timestamp="20190108 00:22:16.503" level="INFO">****** uplink service remove vlan 777 for eutA service_point1 ******</msg>
<status status="PASS" endtime="20190108 00:22:16.503" starttime="20190108 00:22:16.502"></status>
</kw>
<kw name="service_point_remove_transport_profile" library="keyword_service_model">
<tags>
<tag>@author=CindyGao</tag>
</tags>
<doc>Description: remove transport_profile for service_point interface (This keyword is only internal use, CANNOT be used in TCs)</doc>
<arguments>
<arg>${device}</arg>
<arg>${service_point}</arg>
<arg>${transport_prf}</arg>
</arguments>
<kw name="Run Keyword And Return If" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>'lag'=='${service_model.${service_point}.type}'</arg>
<arg>dprov_interface</arg>
<arg>${device}</arg>
<arg>lag</arg>
<arg>${service_model.${service_point}.name}</arg>
<arg>transport-service-profile=${transport_prf}</arg>
</arguments>
<status status="PASS" endtime="20190108 00:22:16.520" starttime="20190108 00:22:16.505"></status>
</kw>
<kw name="Log" library="BuiltIn">
<arguments>
<arg>remove transport-service-profile from interface</arg>
</arguments>
<msg timestamp="20190108 00:22:16.522" level="INFO">remove transport-service-profile from interface</msg>
<status status="PASS" endtime="20190108 00:22:16.522" starttime="20190108 00:22:16.521"></status>
</kw>
<kw type="for" name="${port_key} IN [ @{service_model.${service_point}.member} ]">
<kw type="foritem" name="${port_key} = interface1">
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${service_model.${service_point}.member.${port_key}}</arg>
</arguments>
<assign>
<var>${port}</var>
</assign>
<msg timestamp="20190108 00:22:16.525" level="INFO">${port} = 1/1/x3</msg>
<status status="PASS" endtime="20190108 00:22:16.525" starttime="20190108 00:22:16.524"></status>
</kw>
<kw name="Log" library="BuiltIn">
<arguments>
<arg>****** deprovision port ${port} transport-service-profile******</arg>
</arguments>
<msg timestamp="20190108 00:22:16.527" level="INFO">****** deprovision port 1/1/x3 transport-service-profile******</msg>
<status status="PASS" endtime="20190108 00:22:16.527" starttime="20190108 00:22:16.526"></status>
</kw>
<kw name="Cli" library="caferobot.command.adapter.CliAdapter">
<doc>Execute command on the specific connection and get the output of it</doc>
<arguments>
<arg>${device}</arg>
<arg>show running-config interface ethernet ${port}</arg>
</arguments>
<msg timestamp="20190108 00:22:16.530" level="INFO">send session_command, cmd=show running-config interface ethernet 1/1/x3, prompt=None, timeout=None, newline=None, retry=1, timeout_exception=1, exclude_prompt=None</msg>
<msg timestamp="20190108 00:22:23.883" level="INFO">session_command result=show running-config interface ethernet 1/1/x3

Broadcast message from root@NGPON2X4 (Tue Jan  8 00:05:02 2019):

WARNING: Inithacks are enabled in this system. System behavior may be unpredictable, unless you are aware of their purpose. Enter: "disable.inithack.warnings" to disable this warning message for this session.
interface ethernet 1/1/x3
 no shutdown
 role                      inni
 transport-service-profile auto_TransVlan_777
!
NGPON2X4</msg>
<status status="PASS" endtime="20190108 00:22:23.884" starttime="20190108 00:22:16.527"></status>
</kw>
<kw name="dprov_interface_ethernet" library="keyword_command">
<tags>
<tag>@author=BlairWang</tag>
</tags>
<doc>configure on interface</doc>
<arguments>
<arg>${device}</arg>
<arg>${port}</arg>
<arg>transport-service-profile</arg>
</arguments>
<kw name="Axos Cli With Error Check" library="keyword_common">
<tags>
<tag>@author=dfarwell</tag>
</tags>
<doc>Sends a CLI command to DUT and confirms response has no errors, if there is no prompt in your topo file this may need to be adjusted</doc>
<arguments>
<arg>${device}</arg>
<arg>configure</arg>
</arguments>
<kw name="Cli" library="caferobot.command.adapter.CliAdapter">
<doc>Execute command on the specific connection and get the output of it</doc>
<arguments>
<arg>${DUT}</arg>
<arg>${CMD}</arg>
<arg>prompt=${devices.${DUT}.prompt}</arg>
<arg>timeout=${TIMEOUT}</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190108 00:22:23.892" level="INFO">send session_command, cmd=configure, prompt={'#': None}, timeout=30, newline=None, retry=1, timeout_exception=1, exclude_prompt=None</msg>
<msg timestamp="20190108 00:22:24.197" level="INFO">session_command result=configure
Enter configuration commands, one per line. End with CNTL/Z.
NGPON2X4(config)</msg>
<msg timestamp="20190108 00:22:24.197" level="INFO">${res} = configure
Enter configuration commands, one per line. End with CNTL/Z.
NGPON2X4(config)</msg>
<status status="PASS" endtime="20190108 00:22:24.197" starttime="20190108 00:22:23.890"></status>
</kw>
<kw name="Should Not Contain Any" library="BuiltIn">
<doc>Fails if ``container`` contains one or more of the ``*items``.</doc>
<arguments>
<arg>${res}</arg>
<arg>Invalid</arg>
<arg>syntax error</arg>
<arg>Aborted:</arg>
<arg>Error:</arg>
</arguments>
<status status="PASS" endtime="20190108 00:22:24.200" starttime="20190108 00:22:24.199"></status>
</kw>
<status status="PASS" endtime="20190108 00:22:24.201" starttime="20190108 00:22:23.888"></status>
</kw>
<kw name="Axos Cli With Error Check" library="keyword_common">
<tags>
<tag>@author=dfarwell</tag>
</tags>
<doc>Sends a CLI command to DUT and confirms response has no errors, if there is no prompt in your topo file this may need to be adjusted</doc>
<arguments>
<arg>${device}</arg>
<arg>interface ethernet ${interface}</arg>
</arguments>
<kw name="Cli" library="caferobot.command.adapter.CliAdapter">
<doc>Execute command on the specific connection and get the output of it</doc>
<arguments>
<arg>${DUT}</arg>
<arg>${CMD}</arg>
<arg>prompt=${devices.${DUT}.prompt}</arg>
<arg>timeout=${TIMEOUT}</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190108 00:22:24.207" level="INFO">send session_command, cmd=interface ethernet 1/1/x3, prompt={'#': None}, timeout=30, newline=None, retry=1, timeout_exception=1, exclude_prompt=None</msg>
<msg timestamp="20190108 00:22:24.478" level="INFO">session_command result=interface ethernet 1/1/x3
NGPON2X4(config-ethernet-1/1/x3)</msg>
<msg timestamp="20190108 00:22:24.478" level="INFO">${res} = interface ethernet 1/1/x3
NGPON2X4(config-ethernet-1/1/x3)</msg>
<status status="PASS" endtime="20190108 00:22:24.478" starttime="20190108 00:22:24.204"></status>
</kw>
<kw name="Should Not Contain Any" library="BuiltIn">
<doc>Fails if ``container`` contains one or more of the ``*items``.</doc>
<arguments>
<arg>${res}</arg>
<arg>Invalid</arg>
<arg>syntax error</arg>
<arg>Aborted:</arg>
<arg>Error:</arg>
</arguments>
<status status="PASS" endtime="20190108 00:22:24.483" starttime="20190108 00:22:24.482"></status>
</kw>
<status status="PASS" endtime="20190108 00:22:24.484" starttime="20190108 00:22:24.202"></status>
</kw>
<kw type="for" name="${element} IN [ @{list_cmd} ]">
<kw type="foritem" name="${element} = transport-service-profile">
<kw name="Axos Cli With Error Check" library="keyword_common">
<tags>
<tag>@author=dfarwell</tag>
</tags>
<doc>Sends a CLI command to DUT and confirms response has no errors, if there is no prompt in your topo file this may need to be adjusted</doc>
<arguments>
<arg>${device}</arg>
<arg>no ${element}</arg>
</arguments>
<kw name="Cli" library="caferobot.command.adapter.CliAdapter">
<doc>Execute command on the specific connection and get the output of it</doc>
<arguments>
<arg>${DUT}</arg>
<arg>${CMD}</arg>
<arg>prompt=${devices.${DUT}.prompt}</arg>
<arg>timeout=${TIMEOUT}</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190108 00:22:24.495" level="INFO">send session_command, cmd=no transport-service-profile, prompt={'#': None}, timeout=30, newline=None, retry=1, timeout_exception=1, exclude_prompt=None</msg>
<msg timestamp="20190108 00:22:24.992" level="INFO">session_command result=no transport-service-profile
NGPON2X4(config-ethernet-1/1/x3)</msg>
<msg timestamp="20190108 00:22:24.992" level="INFO">${res} = no transport-service-profile
NGPON2X4(config-ethernet-1/1/x3)</msg>
<status status="PASS" endtime="20190108 00:22:24.992" starttime="20190108 00:22:24.489"></status>
</kw>
<kw name="Should Not Contain Any" library="BuiltIn">
<doc>Fails if ``container`` contains one or more of the ``*items``.</doc>
<arguments>
<arg>${res}</arg>
<arg>Invalid</arg>
<arg>syntax error</arg>
<arg>Aborted:</arg>
<arg>Error:</arg>
</arguments>
<status status="PASS" endtime="20190108 00:22:24.995" starttime="20190108 00:22:24.994"></status>
</kw>
<status status="PASS" endtime="20190108 00:22:24.996" starttime="20190108 00:22:24.487"></status>
</kw>
<status status="PASS" endtime="20190108 00:22:24.997" starttime="20190108 00:22:24.486"></status>
</kw>
<status status="PASS" endtime="20190108 00:22:24.998" starttime="20190108 00:22:24.485"></status>
</kw>
<kw type="teardown" name="Axos Cli With Error Check" library="keyword_common">
<tags>
<tag>@author=dfarwell</tag>
</tags>
<doc>Sends a CLI command to DUT and confirms response has no errors, if there is no prompt in your topo file this may need to be adjusted</doc>
<arguments>
<arg>${device}</arg>
<arg>end</arg>
</arguments>
<kw name="Cli" library="caferobot.command.adapter.CliAdapter">
<doc>Execute command on the specific connection and get the output of it</doc>
<arguments>
<arg>${DUT}</arg>
<arg>${CMD}</arg>
<arg>prompt=${devices.${DUT}.prompt}</arg>
<arg>timeout=${TIMEOUT}</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190108 00:22:25.003" level="INFO">send session_command, cmd=end, prompt={'#': None}, timeout=30, newline=None, retry=1, timeout_exception=1, exclude_prompt=None</msg>
<msg timestamp="20190108 00:22:25.251" level="INFO">session_command result=end
NGPON2X4</msg>
<msg timestamp="20190108 00:22:25.252" level="INFO">${res} = end
NGPON2X4</msg>
<status status="PASS" endtime="20190108 00:22:25.252" starttime="20190108 00:22:25.001"></status>
</kw>
<kw name="Should Not Contain Any" library="BuiltIn">
<doc>Fails if ``container`` contains one or more of the ``*items``.</doc>
<arguments>
<arg>${res}</arg>
<arg>Invalid</arg>
<arg>syntax error</arg>
<arg>Aborted:</arg>
<arg>Error:</arg>
</arguments>
<status status="PASS" endtime="20190108 00:22:25.255" starttime="20190108 00:22:25.254"></status>
</kw>
<status status="PASS" endtime="20190108 00:22:25.256" starttime="20190108 00:22:25.000"></status>
</kw>
<status status="PASS" endtime="20190108 00:22:25.263" starttime="20190108 00:22:23.886"></status>
</kw>
<status status="PASS" endtime="20190108 00:22:25.266" starttime="20190108 00:22:16.523"></status>
</kw>
<status status="PASS" endtime="20190108 00:22:25.268" starttime="20190108 00:22:16.522"></status>
</kw>
<status status="PASS" endtime="20190108 00:22:25.269" starttime="20190108 00:22:16.504"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>delete_config_object</arg>
<arg>${device}</arg>
<arg>transport-service-profile</arg>
<arg>${transport_prf}</arg>
</arguments>
<kw name="delete_config_object" library="keyword_command">
<tags>
<tag>@author=BlairWang</tag>
</tags>
<doc>Delete service profile in config view</doc>
<arguments>
<arg>${device}</arg>
<arg>transport-service-profile</arg>
<arg>${transport_prf}</arg>
</arguments>
<kw name="Cli" library="caferobot.command.adapter.CliAdapter">
<doc>Execute command on the specific connection and get the output of it</doc>
<arguments>
<arg>${device}</arg>
<arg>configure</arg>
</arguments>
<msg timestamp="20190108 00:22:25.276" level="INFO">send session_command, cmd=configure, prompt=None, timeout=None, newline=None, retry=1, timeout_exception=1, exclude_prompt=None</msg>
<msg timestamp="20190108 00:22:25.514" level="INFO">session_command result=configure
Enter configuration commands, one per line. End with CNTL/Z.
NGPON2X4(config)</msg>
<status status="PASS" endtime="20190108 00:22:25.515" starttime="20190108 00:22:25.274"></status>
</kw>
<kw name="Axos Cli With Error Check" library="keyword_common">
<tags>
<tag>@author=dfarwell</tag>
</tags>
<doc>Sends a CLI command to DUT and confirms response has no errors, if there is no prompt in your topo file this may need to be adjusted</doc>
<arguments>
<arg>${device}</arg>
<arg>no ${obj_type} ${obj_name}</arg>
</arguments>
<kw name="Cli" library="caferobot.command.adapter.CliAdapter">
<doc>Execute command on the specific connection and get the output of it</doc>
<arguments>
<arg>${DUT}</arg>
<arg>${CMD}</arg>
<arg>prompt=${devices.${DUT}.prompt}</arg>
<arg>timeout=${TIMEOUT}</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190108 00:22:25.523" level="INFO">send session_command, cmd=no transport-service-profile auto_TransVlan_777, prompt={'#': None}, timeout=30, newline=None, retry=1, timeout_exception=1, exclude_prompt=None</msg>
<msg timestamp="20190108 00:22:25.789" level="INFO">session_command result=no transport-service-profile auto_TransVlan_777
Error: delete failed for 'transport-service-profile auto_TransVlan_777'
NGPON2X4(config)</msg>
<msg timestamp="20190108 00:22:25.790" level="INFO">${res} = no transport-service-profile auto_TransVlan_777
Error: delete failed for 'transport-service-profile auto_TransVlan_777'
NGPON2X4(config)</msg>
<status status="PASS" endtime="20190108 00:22:25.790" starttime="20190108 00:22:25.520"></status>
</kw>
<kw name="Should Not Contain Any" library="BuiltIn">
<doc>Fails if ``container`` contains one or more of the ``*items``.</doc>
<arguments>
<arg>${res}</arg>
<arg>Invalid</arg>
<arg>syntax error</arg>
<arg>Aborted:</arg>
<arg>Error:</arg>
</arguments>
<msg timestamp="20190108 00:22:25.793" level="FAIL">'no transport-service-profile auto_TransVlan_777
Error: delete failed for 'transport-service-profile auto_TransVlan_777'
NGPON2X4(config)' contains one or more of 'Invalid', 'syntax error', 'Aborted:' or 'Error:'</msg>
<msg timestamp="20190108 00:22:25.794" level="DEBUG">Traceback (most recent call last):
  None</msg>
<status status="FAIL" endtime="20190108 00:22:25.794" starttime="20190108 00:22:25.792"></status>
</kw>
<status status="FAIL" endtime="20190108 00:22:25.795" starttime="20190108 00:22:25.517"></status>
</kw>
<kw type="teardown" name="Cli" library="caferobot.command.adapter.CliAdapter">
<doc>Execute command on the specific connection and get the output of it</doc>
<arguments>
<arg>${device}</arg>
<arg>end</arg>
</arguments>
<msg timestamp="20190108 00:22:25.799" level="INFO">send session_command, cmd=end, prompt=None, timeout=None, newline=None, retry=1, timeout_exception=1, exclude_prompt=None</msg>
<msg timestamp="20190108 00:22:26.062" level="INFO">session_command result=end
NGPON2X4</msg>
<status status="PASS" endtime="20190108 00:22:26.062" starttime="20190108 00:22:25.797"></status>
</kw>
<status status="FAIL" endtime="20190108 00:22:26.064" starttime="20190108 00:22:25.273"></status>
</kw>
<status status="PASS" endtime="20190108 00:22:26.066" starttime="20190108 00:22:25.272"></status>
</kw>
<status status="PASS" endtime="20190108 00:22:26.067" starttime="20190108 00:22:16.500"></status>
</kw>
<kw type="foritem" name="${service_point} = service_point2">
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${service_model.${service_point}.device}</arg>
</arguments>
<assign>
<var>${device}</var>
</assign>
<msg timestamp="20190108 00:22:26.071" level="INFO">${device} = eutA</msg>
<status status="PASS" endtime="20190108 00:22:26.071" starttime="20190108 00:22:26.069"></status>
</kw>
<kw name="Log" library="BuiltIn">
<arguments>
<arg>****** uplink service remove vlan ${vlan_list} for ${device} ${service_point} ******</arg>
</arguments>
<msg timestamp="20190108 00:22:26.072" level="INFO">****** uplink service remove vlan 777 for eutA service_point2 ******</msg>
<status status="PASS" endtime="20190108 00:22:26.073" starttime="20190108 00:22:26.072"></status>
</kw>
<kw name="service_point_remove_transport_profile" library="keyword_service_model">
<tags>
<tag>@author=CindyGao</tag>
</tags>
<doc>Description: remove transport_profile for service_point interface (This keyword is only internal use, CANNOT be used in TCs)</doc>
<arguments>
<arg>${device}</arg>
<arg>${service_point}</arg>
<arg>${transport_prf}</arg>
</arguments>
<kw name="Run Keyword And Return If" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>'lag'=='${service_model.${service_point}.type}'</arg>
<arg>dprov_interface</arg>
<arg>${device}</arg>
<arg>lag</arg>
<arg>${service_model.${service_point}.name}</arg>
<arg>transport-service-profile=${transport_prf}</arg>
</arguments>
<status status="PASS" endtime="20190108 00:22:26.076" starttime="20190108 00:22:26.075"></status>
</kw>
<kw name="Log" library="BuiltIn">
<arguments>
<arg>remove transport-service-profile from interface</arg>
</arguments>
<msg timestamp="20190108 00:22:26.077" level="INFO">remove transport-service-profile from interface</msg>
<status status="PASS" endtime="20190108 00:22:26.077" starttime="20190108 00:22:26.076"></status>
</kw>
<kw type="for" name="${port_key} IN [ @{service_model.${service_point}.member} ]">
<kw type="foritem" name="${port_key} = interface1">
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${service_model.${service_point}.member.${port_key}}</arg>
</arguments>
<assign>
<var>${port}</var>
</assign>
<msg timestamp="20190108 00:22:26.081" level="INFO">${port} = 1/1/x4</msg>
<status status="PASS" endtime="20190108 00:22:26.081" starttime="20190108 00:22:26.080"></status>
</kw>
<kw name="Log" library="BuiltIn">
<arguments>
<arg>****** deprovision port ${port} transport-service-profile******</arg>
</arguments>
<msg timestamp="20190108 00:22:26.083" level="INFO">****** deprovision port 1/1/x4 transport-service-profile******</msg>
<status status="PASS" endtime="20190108 00:22:26.083" starttime="20190108 00:22:26.082"></status>
</kw>
<kw name="Cli" library="caferobot.command.adapter.CliAdapter">
<doc>Execute command on the specific connection and get the output of it</doc>
<arguments>
<arg>${device}</arg>
<arg>show running-config interface ethernet ${port}</arg>
</arguments>
<msg timestamp="20190108 00:22:26.086" level="INFO">send session_command, cmd=show running-config interface ethernet 1/1/x4, prompt=None, timeout=None, newline=None, retry=1, timeout_exception=1, exclude_prompt=None</msg>
<msg timestamp="20190108 00:22:26.458" level="INFO">session_command result=show running-config interface ethernet 1/1/x4
-------------------------------------------------^
syntax error: element does not exist
NGPON2X4</msg>
<status status="PASS" endtime="20190108 00:22:26.458" starttime="20190108 00:22:26.084"></status>
</kw>
<kw name="dprov_interface_ethernet" library="keyword_command">
<tags>
<tag>@author=BlairWang</tag>
</tags>
<doc>configure on interface</doc>
<arguments>
<arg>${device}</arg>
<arg>${port}</arg>
<arg>transport-service-profile</arg>
</arguments>
<kw name="Axos Cli With Error Check" library="keyword_common">
<tags>
<tag>@author=dfarwell</tag>
</tags>
<doc>Sends a CLI command to DUT and confirms response has no errors, if there is no prompt in your topo file this may need to be adjusted</doc>
<arguments>
<arg>${device}</arg>
<arg>configure</arg>
</arguments>
<kw name="Cli" library="caferobot.command.adapter.CliAdapter">
<doc>Execute command on the specific connection and get the output of it</doc>
<arguments>
<arg>${DUT}</arg>
<arg>${CMD}</arg>
<arg>prompt=${devices.${DUT}.prompt}</arg>
<arg>timeout=${TIMEOUT}</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190108 00:22:26.465" level="INFO">send session_command, cmd=configure, prompt={'#': None}, timeout=30, newline=None, retry=1, timeout_exception=1, exclude_prompt=None</msg>
<msg timestamp="20190108 00:22:26.700" level="INFO">session_command result=configure
Enter configuration commands, one per line. End with CNTL/Z.
NGPON2X4(config)</msg>
<msg timestamp="20190108 00:22:26.700" level="INFO">${res} = configure
Enter configuration commands, one per line. End with CNTL/Z.
NGPON2X4(config)</msg>
<status status="PASS" endtime="20190108 00:22:26.701" starttime="20190108 00:22:26.463"></status>
</kw>
<kw name="Should Not Contain Any" library="BuiltIn">
<doc>Fails if ``container`` contains one or more of the ``*items``.</doc>
<arguments>
<arg>${res}</arg>
<arg>Invalid</arg>
<arg>syntax error</arg>
<arg>Aborted:</arg>
<arg>Error:</arg>
</arguments>
<status status="PASS" endtime="20190108 00:22:26.704" starttime="20190108 00:22:26.703"></status>
</kw>
<status status="PASS" endtime="20190108 00:22:26.705" starttime="20190108 00:22:26.461"></status>
</kw>
<kw name="Axos Cli With Error Check" library="keyword_common">
<tags>
<tag>@author=dfarwell</tag>
</tags>
<doc>Sends a CLI command to DUT and confirms response has no errors, if there is no prompt in your topo file this may need to be adjusted</doc>
<arguments>
<arg>${device}</arg>
<arg>interface ethernet ${interface}</arg>
</arguments>
<kw name="Cli" library="caferobot.command.adapter.CliAdapter">
<doc>Execute command on the specific connection and get the output of it</doc>
<arguments>
<arg>${DUT}</arg>
<arg>${CMD}</arg>
<arg>prompt=${devices.${DUT}.prompt}</arg>
<arg>timeout=${TIMEOUT}</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190108 00:22:26.711" level="INFO">send session_command, cmd=interface ethernet 1/1/x4, prompt={'#': None}, timeout=30, newline=None, retry=1, timeout_exception=1, exclude_prompt=None</msg>
<msg timestamp="20190108 00:22:26.942" level="INFO">session_command result=interface ethernet 1/1/x4
Error: failed to create path - Switchover in progress. Cannot process the request
NGPON2X4(config)</msg>
<msg timestamp="20190108 00:22:26.943" level="INFO">${res} = interface ethernet 1/1/x4
Error: failed to create path - Switchover in progress. Cannot process the request
NGPON2X4(config)</msg>
<status status="PASS" endtime="20190108 00:22:26.943" starttime="20190108 00:22:26.708"></status>
</kw>
<kw name="Should Not Contain Any" library="BuiltIn">
<doc>Fails if ``container`` contains one or more of the ``*items``.</doc>
<arguments>
<arg>${res}</arg>
<arg>Invalid</arg>
<arg>syntax error</arg>
<arg>Aborted:</arg>
<arg>Error:</arg>
</arguments>
<msg timestamp="20190108 00:22:26.947" level="FAIL">'interface ethernet 1/1/x4
Error: failed to create path - Switchover in progress. Cannot process the request
NGPON2X4(config)' contains one or more of 'Invalid', 'syntax error', 'Aborted:' or 'Error:'</msg>
<msg timestamp="20190108 00:22:26.947" level="DEBUG">Traceback (most recent call last):
  None</msg>
<status status="FAIL" endtime="20190108 00:22:26.948" starttime="20190108 00:22:26.946"></status>
</kw>
<status status="FAIL" endtime="20190108 00:22:26.949" starttime="20190108 00:22:26.706"></status>
</kw>
<kw type="for" name="${element} IN [ @{list_cmd} ]">
<kw type="foritem" name="${element} = transport-service-profile">
<kw name="Axos Cli With Error Check" library="keyword_common">
<tags>
<tag>@author=dfarwell</tag>
</tags>
<doc>Sends a CLI command to DUT and confirms response has no errors, if there is no prompt in your topo file this may need to be adjusted</doc>
<arguments>
<arg>${device}</arg>
<arg>no ${element}</arg>
</arguments>
<kw name="Cli" library="caferobot.command.adapter.CliAdapter">
<doc>Execute command on the specific connection and get the output of it</doc>
<arguments>
<arg>${DUT}</arg>
<arg>${CMD}</arg>
<arg>prompt=${devices.${DUT}.prompt}</arg>
<arg>timeout=${TIMEOUT}</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190108 00:22:26.964" level="INFO">send session_command, cmd=no transport-service-profile, prompt={'#': None}, timeout=30, newline=None, retry=1, timeout_exception=1, exclude_prompt=None</msg>
<msg timestamp="20190108 00:22:27.197" level="INFO">session_command result=no transport-service-profile
----------------------------------------------^
syntax error: incomplete path
NGPON2X4(config)</msg>
<msg timestamp="20190108 00:22:27.198" level="INFO">${res} = no transport-service-profile
----------------------------------------------^
syntax error: incomplete path
NGPON2X4(config)</msg>
<status status="PASS" endtime="20190108 00:22:27.198" starttime="20190108 00:22:26.954"></status>
</kw>
<kw name="Should Not Contain Any" library="BuiltIn">
<doc>Fails if ``container`` contains one or more of the ``*items``.</doc>
<arguments>
<arg>${res}</arg>
<arg>Invalid</arg>
<arg>syntax error</arg>
<arg>Aborted:</arg>
<arg>Error:</arg>
</arguments>
<msg timestamp="20190108 00:22:27.201" level="FAIL">'no transport-service-profile
----------------------------------------------^
syntax error: incomplete path
NGPON2X4(config)' contains one or more of 'Invalid', 'syntax error', 'Aborted:' or 'Error:'</msg>
<msg timestamp="20190108 00:22:27.201" level="DEBUG">Traceback (most recent call last):
  None</msg>
<status status="FAIL" endtime="20190108 00:22:27.201" starttime="20190108 00:22:27.200"></status>
</kw>
<status status="FAIL" endtime="20190108 00:22:27.202" starttime="20190108 00:22:26.952"></status>
</kw>
<status status="FAIL" endtime="20190108 00:22:27.203" starttime="20190108 00:22:26.951"></status>
</kw>
<status status="FAIL" endtime="20190108 00:22:27.205" starttime="20190108 00:22:26.950"></status>
</kw>
<kw type="teardown" name="Axos Cli With Error Check" library="keyword_common">
<tags>
<tag>@author=dfarwell</tag>
</tags>
<doc>Sends a CLI command to DUT and confirms response has no errors, if there is no prompt in your topo file this may need to be adjusted</doc>
<arguments>
<arg>${device}</arg>
<arg>end</arg>
</arguments>
<kw name="Cli" library="caferobot.command.adapter.CliAdapter">
<doc>Execute command on the specific connection and get the output of it</doc>
<arguments>
<arg>${DUT}</arg>
<arg>${CMD}</arg>
<arg>prompt=${devices.${DUT}.prompt}</arg>
<arg>timeout=${TIMEOUT}</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190108 00:22:27.233" level="INFO">send session_command, cmd=end, prompt={'#': None}, timeout=30, newline=None, retry=1, timeout_exception=1, exclude_prompt=None</msg>
<msg timestamp="20190108 00:22:27.524" level="INFO">session_command result=end

******************************************
system switching over.  Closing the connection!!!
******************************************
NGPON2X4</msg>
<msg timestamp="20190108 00:22:27.524" level="INFO">${res} = end

******************************************
system switching over.  Closing the connection!!!
******************************************
NGPON2X4</msg>
<status status="PASS" endtime="20190108 00:22:27.525" starttime="20190108 00:22:27.219"></status>
</kw>
<kw name="Should Not Contain Any" library="BuiltIn">
<doc>Fails if ``container`` contains one or more of the ``*items``.</doc>
<arguments>
<arg>${res}</arg>
<arg>Invalid</arg>
<arg>syntax error</arg>
<arg>Aborted:</arg>
<arg>Error:</arg>
</arguments>
<status status="PASS" endtime="20190108 00:22:27.529" starttime="20190108 00:22:27.527"></status>
</kw>
<status status="PASS" endtime="20190108 00:22:27.530" starttime="20190108 00:22:27.218"></status>
</kw>
<status status="FAIL" endtime="20190108 00:22:27.532" starttime="20190108 00:22:26.459"></status>
</kw>
<status status="FAIL" endtime="20190108 00:22:27.534" starttime="20190108 00:22:26.079"></status>
</kw>
<status status="FAIL" endtime="20190108 00:22:27.535" starttime="20190108 00:22:26.078"></status>
</kw>
<status status="FAIL" endtime="20190108 00:22:27.548" starttime="20190108 00:22:26.073"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>delete_config_object</arg>
<arg>${device}</arg>
<arg>transport-service-profile</arg>
<arg>${transport_prf}</arg>
</arguments>
<kw name="delete_config_object" library="keyword_command">
<tags>
<tag>@author=BlairWang</tag>
</tags>
<doc>Delete service profile in config view</doc>
<arguments>
<arg>${device}</arg>
<arg>transport-service-profile</arg>
<arg>${transport_prf}</arg>
</arguments>
<kw name="Cli" library="caferobot.command.adapter.CliAdapter">
<doc>Execute command on the specific connection and get the output of it</doc>
<arguments>
<arg>${device}</arg>
<arg>configure</arg>
</arguments>
<msg timestamp="20190108 00:22:27.564" level="INFO">send session_command, cmd=configure, prompt=None, timeout=None, newline=None, retry=1, timeout_exception=1, exclude_prompt=None</msg>
<msg timestamp="20190108 00:22:31.401" level="INFO">session_command result=configure
Enter configuration commands, one per line. End with CNTL/Z.
NGPON2X4(config)</msg>
<status status="PASS" endtime="20190108 00:22:31.402" starttime="20190108 00:22:27.555"></status>
</kw>
<kw name="Axos Cli With Error Check" library="keyword_common">
<tags>
<tag>@author=dfarwell</tag>
</tags>
<doc>Sends a CLI command to DUT and confirms response has no errors, if there is no prompt in your topo file this may need to be adjusted</doc>
<arguments>
<arg>${device}</arg>
<arg>no ${obj_type} ${obj_name}</arg>
</arguments>
<kw name="Cli" library="caferobot.command.adapter.CliAdapter">
<doc>Execute command on the specific connection and get the output of it</doc>
<arguments>
<arg>${DUT}</arg>
<arg>${CMD}</arg>
<arg>prompt=${devices.${DUT}.prompt}</arg>
<arg>timeout=${TIMEOUT}</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190108 00:22:31.408" level="INFO">send session_command, cmd=no transport-service-profile auto_TransVlan_777, prompt={'#': None}, timeout=30, newline=None, retry=1, timeout_exception=1, exclude_prompt=None</msg>
<msg timestamp="20190108 00:22:31.733" level="INFO">session_command result=no transport-service-profile auto_TransVlan_777
Error: delete failed for 'transport-service-profile auto_TransVlan_777'
NGPON2X4(config)</msg>
<msg timestamp="20190108 00:22:31.734" level="INFO">${res} = no transport-service-profile auto_TransVlan_777
Error: delete failed for 'transport-service-profile auto_TransVlan_777'
NGPON2X4(config)</msg>
<status status="PASS" endtime="20190108 00:22:31.734" starttime="20190108 00:22:31.406"></status>
</kw>
<kw name="Should Not Contain Any" library="BuiltIn">
<doc>Fails if ``container`` contains one or more of the ``*items``.</doc>
<arguments>
<arg>${res}</arg>
<arg>Invalid</arg>
<arg>syntax error</arg>
<arg>Aborted:</arg>
<arg>Error:</arg>
</arguments>
<msg timestamp="20190108 00:22:31.738" level="FAIL">'no transport-service-profile auto_TransVlan_777
Error: delete failed for 'transport-service-profile auto_TransVlan_777'
NGPON2X4(config)' contains one or more of 'Invalid', 'syntax error', 'Aborted:' or 'Error:'</msg>
<msg timestamp="20190108 00:22:31.738" level="DEBUG">Traceback (most recent call last):
  None</msg>
<status status="FAIL" endtime="20190108 00:22:31.738" starttime="20190108 00:22:31.736"></status>
</kw>
<status status="FAIL" endtime="20190108 00:22:31.739" starttime="20190108 00:22:31.404"></status>
</kw>
<kw type="teardown" name="Cli" library="caferobot.command.adapter.CliAdapter">
<doc>Execute command on the specific connection and get the output of it</doc>
<arguments>
<arg>${device}</arg>
<arg>end</arg>
</arguments>
<msg timestamp="20190108 00:22:31.744" level="INFO">send session_command, cmd=end, prompt=None, timeout=None, newline=None, retry=1, timeout_exception=1, exclude_prompt=None</msg>
<msg timestamp="20190108 00:22:32.171" level="INFO">session_command result=end
NGPON2X4</msg>
<status status="PASS" endtime="20190108 00:22:32.172" starttime="20190108 00:22:31.741"></status>
</kw>
<status status="FAIL" endtime="20190108 00:22:32.174" starttime="20190108 00:22:27.553"></status>
</kw>
<status status="PASS" endtime="20190108 00:22:32.175" starttime="20190108 00:22:27.551"></status>
</kw>
<status status="FAIL" endtime="20190108 00:22:32.176" starttime="20190108 00:22:26.068"></status>
</kw>
<kw type="foritem" name="${service_point} = service_point3">
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${service_model.${service_point}.device}</arg>
</arguments>
<assign>
<var>${device}</var>
</assign>
<msg timestamp="20190108 00:22:32.179" level="INFO">${device} = eutA</msg>
<status status="PASS" endtime="20190108 00:22:32.180" starttime="20190108 00:22:32.178"></status>
</kw>
<kw name="Log" library="BuiltIn">
<arguments>
<arg>****** uplink service remove vlan ${vlan_list} for ${device} ${service_point} ******</arg>
</arguments>
<msg timestamp="20190108 00:22:32.181" level="INFO">****** uplink service remove vlan 777 for eutA service_point3 ******</msg>
<status status="PASS" endtime="20190108 00:22:32.181" starttime="20190108 00:22:32.180"></status>
</kw>
<kw name="service_point_remove_transport_profile" library="keyword_service_model">
<tags>
<tag>@author=CindyGao</tag>
</tags>
<doc>Description: remove transport_profile for service_point interface (This keyword is only internal use, CANNOT be used in TCs)</doc>
<arguments>
<arg>${device}</arg>
<arg>${service_point}</arg>
<arg>${transport_prf}</arg>
</arguments>
<kw name="Run Keyword And Return If" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>'lag'=='${service_model.${service_point}.type}'</arg>
<arg>dprov_interface</arg>
<arg>${device}</arg>
<arg>lag</arg>
<arg>${service_model.${service_point}.name}</arg>
<arg>transport-service-profile=${transport_prf}</arg>
</arguments>
<status status="PASS" endtime="20190108 00:22:32.184" starttime="20190108 00:22:32.183"></status>
</kw>
<kw name="Log" library="BuiltIn">
<arguments>
<arg>remove transport-service-profile from interface</arg>
</arguments>
<msg timestamp="20190108 00:22:32.185" level="INFO">remove transport-service-profile from interface</msg>
<status status="PASS" endtime="20190108 00:22:32.185" starttime="20190108 00:22:32.184"></status>
</kw>
<kw type="for" name="${port_key} IN [ @{service_model.${service_point}.member} ]">
<kw type="foritem" name="${port_key} = interface1">
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${service_model.${service_point}.member.${port_key}}</arg>
</arguments>
<assign>
<var>${port}</var>
</assign>
<msg timestamp="20190108 00:22:32.189" level="INFO">${port} = 1/2/x11</msg>
<status status="PASS" endtime="20190108 00:22:32.189" starttime="20190108 00:22:32.187"></status>
</kw>
<kw name="Log" library="BuiltIn">
<arguments>
<arg>****** deprovision port ${port} transport-service-profile******</arg>
</arguments>
<msg timestamp="20190108 00:22:32.191" level="INFO">****** deprovision port 1/2/x11 transport-service-profile******</msg>
<status status="PASS" endtime="20190108 00:22:32.191" starttime="20190108 00:22:32.190"></status>
</kw>
<kw name="Cli" library="caferobot.command.adapter.CliAdapter">
<doc>Execute command on the specific connection and get the output of it</doc>
<arguments>
<arg>${device}</arg>
<arg>show running-config interface ethernet ${port}</arg>
</arguments>
<msg timestamp="20190108 00:22:32.194" level="INFO">send session_command, cmd=show running-config interface ethernet 1/2/x11, prompt=None, timeout=None, newline=None, retry=1, timeout_exception=1, exclude_prompt=None</msg>
<msg timestamp="20190108 00:23:02.211" level="FAIL">ShellTimeoutException</msg>
<msg timestamp="20190108 00:23:02.211" level="DEBUG">Traceback (most recent call last):
  File "/etc/barista/packages/caferobot/command/adapter.py", line 210, in run_keyword
    return self._keywords_adapter_map[name].run_keyword(name, args, kwargs)
  File "/etc/barista/packages/caferobot/command/adapter.py", line 83, in run_keyword
    return self._KEYWORDS_WRAPPERS[name](*args, **kwargs)
  File "/etc/barista/packages/caferobot/command/adapter.py", line 140, in _wrap_cli
    result = device.session_command(cmd, p, timeout, newline, retry, int(timeout_exception), exclude_prompt)
  File "/etc/barista/packages/caferobot/command/device/shell.py", line 82, in session_command
    raise e</msg>
<status status="FAIL" endtime="20190108 00:23:02.211" starttime="20190108 00:22:32.192"></status>
</kw>
<kw name="dprov_interface_ethernet" library="keyword_command">
<tags>
<tag>@author=BlairWang</tag>
</tags>
<doc>configure on interface</doc>
<arguments>
<arg>${device}</arg>
<arg>${port}</arg>
<arg>transport-service-profile</arg>
</arguments>
<kw name="Axos Cli With Error Check" library="keyword_common">
<tags>
<tag>@author=dfarwell</tag>
</tags>
<doc>Sends a CLI command to DUT and confirms response has no errors, if there is no prompt in your topo file this may need to be adjusted</doc>
<arguments>
<arg>${device}</arg>
<arg>configure</arg>
</arguments>
<kw name="Cli" library="caferobot.command.adapter.CliAdapter">
<doc>Execute command on the specific connection and get the output of it</doc>
<arguments>
<arg>${DUT}</arg>
<arg>${CMD}</arg>
<arg>prompt=${devices.${DUT}.prompt}</arg>
<arg>timeout=${TIMEOUT}</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190108 00:23:02.219" level="INFO">send session_command, cmd=configure, prompt={'#': None}, timeout=30, newline=None, retry=1, timeout_exception=1, exclude_prompt=None</msg>
<msg timestamp="20190108 00:23:32.277" level="INFO">${res} = None</msg>
<msg timestamp="20190108 00:23:32.277" level="FAIL">ShellTimeoutException</msg>
<msg timestamp="20190108 00:23:32.278" level="DEBUG">Traceback (most recent call last):
  File "/etc/barista/packages/caferobot/command/adapter.py", line 210, in run_keyword
    return self._keywords_adapter_map[name].run_keyword(name, args, kwargs)
  File "/etc/barista/packages/caferobot/command/adapter.py", line 83, in run_keyword
    return self._KEYWORDS_WRAPPERS[name](*args, **kwargs)
  File "/etc/barista/packages/caferobot/command/adapter.py", line 140, in _wrap_cli
    result = device.session_command(cmd, p, timeout, newline, retry, int(timeout_exception), exclude_prompt)
  File "/etc/barista/packages/caferobot/command/device/shell.py", line 82, in session_command
    raise e</msg>
<status status="FAIL" endtime="20190108 00:23:32.278" starttime="20190108 00:23:02.216"></status>
</kw>
<kw name="Should Not Contain Any" library="BuiltIn">
<doc>Fails if ``container`` contains one or more of the ``*items``.</doc>
<arguments>
<arg>${res}</arg>
<arg>Invalid</arg>
<arg>syntax error</arg>
<arg>Aborted:</arg>
<arg>Error:</arg>
</arguments>
<msg timestamp="20190108 00:23:32.280" level="FAIL">TypeError: argument of type 'NoneType' is not iterable</msg>
<msg timestamp="20190108 00:23:32.280" level="DEBUG">Traceback (most recent call last):
  None</msg>
<status status="FAIL" endtime="20190108 00:23:32.281" starttime="20190108 00:23:32.279"></status>
</kw>
<status status="FAIL" endtime="20190108 00:23:32.281" starttime="20190108 00:23:02.215"></status>
</kw>
<kw name="Axos Cli With Error Check" library="keyword_common">
<tags>
<tag>@author=dfarwell</tag>
</tags>
<doc>Sends a CLI command to DUT and confirms response has no errors, if there is no prompt in your topo file this may need to be adjusted</doc>
<arguments>
<arg>${device}</arg>
<arg>interface ethernet ${interface}</arg>
</arguments>
<kw name="Cli" library="caferobot.command.adapter.CliAdapter">
<doc>Execute command on the specific connection and get the output of it</doc>
<arguments>
<arg>${DUT}</arg>
<arg>${CMD}</arg>
<arg>prompt=${devices.${DUT}.prompt}</arg>
<arg>timeout=${TIMEOUT}</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190108 00:23:32.288" level="INFO">send session_command, cmd=interface ethernet 1/2/x11, prompt={'#': None}, timeout=30, newline=None, retry=1, timeout_exception=1, exclude_prompt=None</msg>
<msg timestamp="20190108 00:23:36.369" level="INFO">session_command result=interface ethernet 1/2/x11
----------^
syntax error: expecting 
  abort                 - 
  accept                - Accept config
  apply                 - 
  apply-dynamic-policy  - 
  bng-state-persistence - BNG state persistence control commands
  clear                 - Clear object data
  clock                 - Modify clock
  configure             - Manipulate software configuration information
  copy                  - Copy files
  cpe-upgrade:cpe       - CPE operation
  debug                 - 
  delete                - Delete files
  download              - Download files
  enable                - Enable EXEC commands
  exit                  - Exit the management session
  folder                - 
  generate              - Generate files
  idle-timeout          - Configure idle timeout
  install               - 
  lock                  - lock a datastore
  logout                - Logout a user
  manual                - Manual operation with alarms
  no                    - Negate a command or set its defaults
  ofa-connect           - Open Flow Connect
  ofa-listener          - Open Flow Listener
  ofa-port              - Open Flow port
  ont-eth               - ONT-ETH efm-loopback-status mode
  ont-firmware-upgrade  - Start software download
  ont-upgrade           - ONT upgrade commands
  paginate              - Paginate output from CLI commands
  perform               - Perform an operation
  ping                  - Ping IP address
  ping6                 - Ping IPv6 address
  quit                  - Exit the management session
  redundancy            - redundancy switchover commands
  reload                - Reboot the current card
  remove-dynamic-policy - 
  replay                - Replay card-config
  restart               - Restart Diameter daemon
  run                   - 
  send                  - Send message to terminal of one or all users
  session               - 
  show                  - Show information about the system
  ssh                   - ssh command
  start                 - Start an operation
  stop                  - Stop an operation
  switch                - Switch network clock
  tcpdump               - tcpdump command
  telnet                - telnet command
  terminal              - Set terminal type
  timestamp             - Enable/disable the display of timestamp
  traceroute            - Traceroute IP address
  uninstall             - 
  unlock                - unlock a datastore
  upgrade               - Upgrade commands
  upload                - Upload files
  verify                - 
NGPON2X4</msg>
<msg timestamp="20190108 00:23:36.371" level="INFO">${res} = interface ethernet 1/2/x11
----------^
syntax error: expecting 
  abort                 - 
  accept                - Accept config
  apply                 - 
  apply-dynamic-policy  - 
  bng-st...</msg>
<status status="PASS" endtime="20190108 00:23:36.371" starttime="20190108 00:23:32.283"></status>
</kw>
<kw name="Should Not Contain Any" library="BuiltIn">
<doc>Fails if ``container`` contains one or more of the ``*items``.</doc>
<arguments>
<arg>${res}</arg>
<arg>Invalid</arg>
<arg>syntax error</arg>
<arg>Aborted:</arg>
<arg>Error:</arg>
</arguments>
<msg timestamp="20190108 00:23:36.376" level="FAIL">'interface ethernet 1/2/x11
----------^
syntax error: expecting 
  abort                 - 
  accept                - Accept config
  apply                 - 
  apply-dynamic-policy  - 
  bng-state-persistence - BNG state persistence control commands
  clear                 - Clear object data
  clock                 - Modify clock
  configure             - Manipulate software configuration information
  copy                  - Copy files
  cpe-upgrade:cpe       - CPE operation
  debug                 - 
  delete                - Delete files
  download              - Download files
  enable                - Enable EXEC commands
  exit                  - Exit the management session
  folder                - 
  generate              - Generate files
  idle-timeout          - Configure idle timeout
  install               - 
  lock                  - lock a datastore
  logout                - Logout a user
  manual                - Manual operation with alarms
  no                    - Negate a command or set its defaults
  ofa-connect           - Open Flow Connect
  ofa-listener          - Open Flow Listener
  ofa-port              - Open Flow port
  ont-eth               - ONT-ETH efm-loopback-status mode
  ont-firmware-upgrade  - Start software download
  ont-upgrade           - ONT upgrade commands
  paginate              - Paginate output from CLI commands
  perform               - Perform an operation
  ping                  - Ping IP address
  ping6                 - Ping IPv6 address
  quit                  - Exit the management session
  redundancy            - redundancy switchover commands
  reload                - Reboot the current card
  remove-dynamic-policy - 
  replay                - Replay card-config
  restart               - Restart Diameter daemon
  run                   - 
  send                  - Send message to terminal of one or all users
  session               - 
  show                  - Show information about the system
  ssh                   - ssh command
  start                 - Start an operation
  stop                  - Stop an operation
  switch                - Switch network clock
  tcpdump               - tcpdump command
  telnet                - telnet command
  terminal              - Set terminal type
  timestamp             - Enable/disable the display of timestamp
  traceroute            - Traceroute IP address
  uninstall             - 
  unlock                - unlock a datastore
  upgrade               - Upgrade commands
  upload                - Upload files
  verify                - 
NGPON2X4' contains one or more of 'Invalid', 'syntax error', 'Aborted:' or 'Error:'</msg>
<msg timestamp="20190108 00:23:36.376" level="DEBUG">Traceback (most recent call last):
  None</msg>
<status status="FAIL" endtime="20190108 00:23:36.377" starttime="20190108 00:23:36.373"></status>
</kw>
<status status="FAIL" endtime="20190108 00:23:36.378" starttime="20190108 00:23:32.282"></status>
</kw>
<kw type="for" name="${element} IN [ @{list_cmd} ]">
<kw type="foritem" name="${element} = transport-service-profile">
<kw name="Axos Cli With Error Check" library="keyword_common">
<tags>
<tag>@author=dfarwell</tag>
</tags>
<doc>Sends a CLI command to DUT and confirms response has no errors, if there is no prompt in your topo file this may need to be adjusted</doc>
<arguments>
<arg>${device}</arg>
<arg>no ${element}</arg>
</arguments>
<kw name="Cli" library="caferobot.command.adapter.CliAdapter">
<doc>Execute command on the specific connection and get the output of it</doc>
<arguments>
<arg>${DUT}</arg>
<arg>${CMD}</arg>
<arg>prompt=${devices.${DUT}.prompt}</arg>
<arg>timeout=${TIMEOUT}</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190108 00:23:36.402" level="INFO">send session_command, cmd=no transport-service-profile, prompt={'#': None}, timeout=30, newline=None, retry=1, timeout_exception=1, exclude_prompt=None</msg>
<msg timestamp="20190108 00:23:36.659" level="INFO">session_command result=no transport-service-profile
-------------^
syntax error: expecting 
  debug - 
NGPON2X4</msg>
<msg timestamp="20190108 00:23:36.659" level="INFO">${res} = no transport-service-profile
-------------^
syntax error: expecting 
  debug - 
NGPON2X4</msg>
<status status="PASS" endtime="20190108 00:23:36.659" starttime="20190108 00:23:36.386"></status>
</kw>
<kw name="Should Not Contain Any" library="BuiltIn">
<doc>Fails if ``container`` contains one or more of the ``*items``.</doc>
<arguments>
<arg>${res}</arg>
<arg>Invalid</arg>
<arg>syntax error</arg>
<arg>Aborted:</arg>
<arg>Error:</arg>
</arguments>
<msg timestamp="20190108 00:23:36.664" level="FAIL">'no transport-service-profile
-------------^
syntax error: expecting 
  debug - 
NGPON2X4' contains one or more of 'Invalid', 'syntax error', 'Aborted:' or 'Error:'</msg>
<msg timestamp="20190108 00:23:36.664" level="DEBUG">Traceback (most recent call last):
  None</msg>
<status status="FAIL" endtime="20190108 00:23:36.664" starttime="20190108 00:23:36.663"></status>
</kw>
<status status="FAIL" endtime="20190108 00:23:36.665" starttime="20190108 00:23:36.384"></status>
</kw>
<status status="FAIL" endtime="20190108 00:23:36.666" starttime="20190108 00:23:36.383"></status>
</kw>
<status status="FAIL" endtime="20190108 00:23:36.667" starttime="20190108 00:23:36.382"></status>
</kw>
<kw type="teardown" name="Axos Cli With Error Check" library="keyword_common">
<tags>
<tag>@author=dfarwell</tag>
</tags>
<doc>Sends a CLI command to DUT and confirms response has no errors, if there is no prompt in your topo file this may need to be adjusted</doc>
<arguments>
<arg>${device}</arg>
<arg>end</arg>
</arguments>
<kw name="Cli" library="caferobot.command.adapter.CliAdapter">
<doc>Execute command on the specific connection and get the output of it</doc>
<arguments>
<arg>${DUT}</arg>
<arg>${CMD}</arg>
<arg>prompt=${devices.${DUT}.prompt}</arg>
<arg>timeout=${TIMEOUT}</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190108 00:23:36.673" level="INFO">send session_command, cmd=end, prompt={'#': None}, timeout=30, newline=None, retry=1, timeout_exception=1, exclude_prompt=None</msg>
<msg timestamp="20190108 00:23:37.057" level="INFO">session_command result=end
----------^
syntax error: expecting 
  abort                 - 
  accept                - Accept config
  apply                 - 
  apply-dynamic-policy  - 
  bng-state-persistence - BNG state persistence control commands
  clear                 - Clear object data
  clock                 - Modify clock
  configure             - Manipulate software configuration information
  copy                  - Copy files
  cpe-upgrade:cpe       - CPE operation
  debug                 - 
  delete                - Delete files
  download              - Download files
  enable                - Enable EXEC commands
  exit                  - Exit the management session
  folder                - 
  generate              - Generate files
  idle-timeout          - Configure idle timeout
  install               - 
  lock                  - lock a datastore
  logout                - Logout a user
  manual                - Manual operation with alarms
  no                    - Negate a command or set its defaults
  ofa-connect           - Open Flow Connect
  ofa-listener          - Open Flow Listener
  ofa-port              - Open Flow port
  ont-eth               - ONT-ETH efm-loopback-status mode
  ont-firmware-upgrade  - Start software download
  ont-upgrade           - ONT upgrade commands
  paginate              - Paginate output from CLI commands
  perform               - Perform an operation
  ping                  - Ping IP address
  ping6                 - Ping IPv6 address
  quit                  - Exit the management session
  redundancy            - redundancy switchover commands
  reload                - Reboot the current card
  remove-dynamic-policy - 
  replay                - Replay card-config
  restart               - Restart Diameter daemon
  run                   - 
  send                  - Send message to terminal of one or all users
  session               - 
  show                  - Show information about the system
  ssh                   - ssh command
  start                 - Start an operation
  stop                  - Stop an operation
  switch                - Switch network clock
  tcpdump               - tcpdump command
  telnet                - telnet command
  terminal              - Set terminal type
  timestamp             - Enable/disable the display of timestamp
  traceroute            - Traceroute IP address
  uninstall             - 
  unlock                - unlock a datastore
  upgrade               - Upgrade commands
  upload                - Upload files
  verify                - 
NGPON2X4</msg>
<msg timestamp="20190108 00:23:37.058" level="INFO">${res} = end
----------^
syntax error: expecting 
  abort                 - 
  accept                - Accept config
  apply                 - 
  apply-dynamic-policy  - 
  bng-state-persistence - BNG s...</msg>
<status status="PASS" endtime="20190108 00:23:37.058" starttime="20190108 00:23:36.671"></status>
</kw>
<kw name="Should Not Contain Any" library="BuiltIn">
<doc>Fails if ``container`` contains one or more of the ``*items``.</doc>
<arguments>
<arg>${res}</arg>
<arg>Invalid</arg>
<arg>syntax error</arg>
<arg>Aborted:</arg>
<arg>Error:</arg>
</arguments>
<msg timestamp="20190108 00:23:37.061" level="FAIL">'end
----------^
syntax error: expecting 
  abort                 - 
  accept                - Accept config
  apply                 - 
  apply-dynamic-policy  - 
  bng-state-persistence - BNG state persistence control commands
  clear                 - Clear object data
  clock                 - Modify clock
  configure             - Manipulate software configuration information
  copy                  - Copy files
  cpe-upgrade:cpe       - CPE operation
  debug                 - 
  delete                - Delete files
  download              - Download files
  enable                - Enable EXEC commands
  exit                  - Exit the management session
  folder                - 
  generate              - Generate files
  idle-timeout          - Configure idle timeout
  install               - 
  lock                  - lock a datastore
  logout                - Logout a user
  manual                - Manual operation with alarms
  no                    - Negate a command or set its defaults
  ofa-connect           - Open Flow Connect
  ofa-listener          - Open Flow Listener
  ofa-port              - Open Flow port
  ont-eth               - ONT-ETH efm-loopback-status mode
  ont-firmware-upgrade  - Start software download
  ont-upgrade           - ONT upgrade commands
  paginate              - Paginate output from CLI commands
  perform               - Perform an operation
  ping                  - Ping IP address
  ping6                 - Ping IPv6 address
  quit                  - Exit the management session
  redundancy            - redundancy switchover commands
  reload                - Reboot the current card
  remove-dynamic-policy - 
  replay                - Replay card-config
  restart               - Restart Diameter daemon
  run                   - 
  send                  - Send message to terminal of one or all users
  session               - 
  show                  - Show information about the system
  ssh                   - ssh command
  start                 - Start an operation
  stop                  - Stop an operation
  switch                - Switch network clock
  tcpdump               - tcpdump command
  telnet                - telnet command
  terminal              - Set terminal type
  timestamp             - Enable/disable the display of timestamp
  traceroute            - Traceroute IP address
  uninstall             - 
  unlock                - unlock a datastore
  upgrade               - Upgrade commands
  upload                - Upload files
  verify                - 
NGPON2X4' contains one or more of 'Invalid', 'syntax error', 'Aborted:' or 'Error:'</msg>
<msg timestamp="20190108 00:23:37.061" level="DEBUG">Traceback (most recent call last):
  None</msg>
<status status="FAIL" endtime="20190108 00:23:37.061" starttime="20190108 00:23:37.059"></status>
</kw>
<status status="FAIL" endtime="20190108 00:23:37.063" starttime="20190108 00:23:36.669">'end
----------^
syntax error: expecting 
  abort                 - 
  accept                - Accept config
  apply                 - 
  apply-dynamic-policy  - 
  bng-state-persistence - BNG state persistence control commands
  clear                 - Clear object data
  clock                 - Modify clock
  configure             - Manipulate software configuration information
  copy                  - Copy files
  cpe-upgrade:cpe       - CPE operation
  debug                 - 
  delete                - Delete files
  download              - Download files
  enable                - Enable EXEC commands
  exit                  - Exit the management session
  folder                - 
  generate              - Generate files
    [ Message content over the limit has been removed. ]
  run                   - 
  send                  - Send message to terminal of one or all users
  session               - 
  show                  - Show information about the system
  ssh                   - ssh command
  start                 - Start an operation
  stop                  - Stop an operation
  switch                - Switch network clock
  tcpdump               - tcpdump command
  telnet                - telnet command
  terminal              - Set terminal type
  timestamp             - Enable/disable the display of timestamp
  traceroute            - Traceroute IP address
  uninstall             - 
  unlock                - unlock a datastore
  upgrade               - Upgrade commands
  upload                - Upload files
  verify                - 
NGPON2X4' contains one or more of 'Invalid', 'syntax error', 'Aborted:' or 'Error:'</status>
</kw>
<status status="FAIL" endtime="20190108 00:23:37.064" starttime="20190108 00:23:02.213"></status>
</kw>
<status status="FAIL" endtime="20190108 00:23:37.066" starttime="20190108 00:22:32.187"></status>
</kw>
<status status="FAIL" endtime="20190108 00:23:37.068" starttime="20190108 00:22:32.186"></status>
</kw>
<status status="FAIL" endtime="20190108 00:23:37.069" starttime="20190108 00:22:32.182"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>delete_config_object</arg>
<arg>${device}</arg>
<arg>transport-service-profile</arg>
<arg>${transport_prf}</arg>
</arguments>
<kw name="delete_config_object" library="keyword_command">
<tags>
<tag>@author=BlairWang</tag>
</tags>
<doc>Delete service profile in config view</doc>
<arguments>
<arg>${device}</arg>
<arg>transport-service-profile</arg>
<arg>${transport_prf}</arg>
</arguments>
<kw name="Cli" library="caferobot.command.adapter.CliAdapter">
<doc>Execute command on the specific connection and get the output of it</doc>
<arguments>
<arg>${device}</arg>
<arg>configure</arg>
</arguments>
<msg timestamp="20190108 00:23:37.076" level="INFO">send session_command, cmd=configure, prompt=None, timeout=None, newline=None, retry=1, timeout_exception=1, exclude_prompt=None</msg>
<msg timestamp="20190108 00:23:37.350" level="INFO">session_command result=configure
Enter configuration commands, one per line. End with CNTL/Z.
NGPON2X4(config)</msg>
<status status="PASS" endtime="20190108 00:23:37.351" starttime="20190108 00:23:37.074"></status>
</kw>
<kw name="Axos Cli With Error Check" library="keyword_common">
<tags>
<tag>@author=dfarwell</tag>
</tags>
<doc>Sends a CLI command to DUT and confirms response has no errors, if there is no prompt in your topo file this may need to be adjusted</doc>
<arguments>
<arg>${device}</arg>
<arg>no ${obj_type} ${obj_name}</arg>
</arguments>
<kw name="Cli" library="caferobot.command.adapter.CliAdapter">
<doc>Execute command on the specific connection and get the output of it</doc>
<arguments>
<arg>${DUT}</arg>
<arg>${CMD}</arg>
<arg>prompt=${devices.${DUT}.prompt}</arg>
<arg>timeout=${TIMEOUT}</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190108 00:23:37.357" level="INFO">send session_command, cmd=no transport-service-profile auto_TransVlan_777, prompt={'#': None}, timeout=30, newline=None, retry=1, timeout_exception=1, exclude_prompt=None</msg>
<msg timestamp="20190108 00:23:38.046" level="INFO">session_command result=no transport-service-profile auto_TransVlan_777
Aborted: illegal reference 'interface ethernet 1/1/x1 transport-service-profile'
Error: failed to apply modifications
NGPON2X4(config)</msg>
<msg timestamp="20190108 00:23:38.046" level="INFO">${res} = no transport-service-profile auto_TransVlan_777
Aborted: illegal reference 'interface ethernet 1/1/x1 transport-service-profile'
Error: failed to apply modifications
NGPON2X4(config)</msg>
<status status="PASS" endtime="20190108 00:23:38.047" starttime="20190108 00:23:37.354"></status>
</kw>
<kw name="Should Not Contain Any" library="BuiltIn">
<doc>Fails if ``container`` contains one or more of the ``*items``.</doc>
<arguments>
<arg>${res}</arg>
<arg>Invalid</arg>
<arg>syntax error</arg>
<arg>Aborted:</arg>
<arg>Error:</arg>
</arguments>
<msg timestamp="20190108 00:23:38.050" level="FAIL">'no transport-service-profile auto_TransVlan_777
Aborted: illegal reference 'interface ethernet 1/1/x1 transport-service-profile'
Error: failed to apply modifications
NGPON2X4(config)' contains one or more of 'Invalid', 'syntax error', 'Aborted:' or 'Error:'</msg>
<msg timestamp="20190108 00:23:38.050" level="DEBUG">Traceback (most recent call last):
  None</msg>
<status status="FAIL" endtime="20190108 00:23:38.050" starttime="20190108 00:23:38.049"></status>
</kw>
<status status="FAIL" endtime="20190108 00:23:38.051" starttime="20190108 00:23:37.352"></status>
</kw>
<kw type="teardown" name="Cli" library="caferobot.command.adapter.CliAdapter">
<doc>Execute command on the specific connection and get the output of it</doc>
<arguments>
<arg>${device}</arg>
<arg>end</arg>
</arguments>
<msg timestamp="20190108 00:23:38.054" level="INFO">send session_command, cmd=end, prompt=None, timeout=None, newline=None, retry=1, timeout_exception=1, exclude_prompt=None</msg>
<msg timestamp="20190108 00:23:38.330" level="INFO">session_command result=end
NGPON2X4</msg>
<status status="PASS" endtime="20190108 00:23:38.330" starttime="20190108 00:23:38.052"></status>
</kw>
<status status="FAIL" endtime="20190108 00:23:38.332" starttime="20190108 00:23:37.073"></status>
</kw>
<status status="PASS" endtime="20190108 00:23:38.334" starttime="20190108 00:23:37.071"></status>
</kw>
<status status="FAIL" endtime="20190108 00:23:38.336" starttime="20190108 00:22:32.177"></status>
</kw>
<kw type="foritem" name="${service_point} = service_point4">
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${service_model.${service_point}.device}</arg>
</arguments>
<assign>
<var>${device}</var>
</assign>
<msg timestamp="20190108 00:23:38.340" level="INFO">${device} = eutA</msg>
<status status="PASS" endtime="20190108 00:23:38.340" starttime="20190108 00:23:38.339"></status>
</kw>
<kw name="Log" library="BuiltIn">
<arguments>
<arg>****** uplink service remove vlan ${vlan_list} for ${device} ${service_point} ******</arg>
</arguments>
<msg timestamp="20190108 00:23:38.342" level="INFO">****** uplink service remove vlan 777 for eutA service_point4 ******</msg>
<status status="PASS" endtime="20190108 00:23:38.342" starttime="20190108 00:23:38.341"></status>
</kw>
<kw name="service_point_remove_transport_profile" library="keyword_service_model">
<tags>
<tag>@author=CindyGao</tag>
</tags>
<doc>Description: remove transport_profile for service_point interface (This keyword is only internal use, CANNOT be used in TCs)</doc>
<arguments>
<arg>${device}</arg>
<arg>${service_point}</arg>
<arg>${transport_prf}</arg>
</arguments>
<kw name="Run Keyword And Return If" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>'lag'=='${service_model.${service_point}.type}'</arg>
<arg>dprov_interface</arg>
<arg>${device}</arg>
<arg>lag</arg>
<arg>${service_model.${service_point}.name}</arg>
<arg>transport-service-profile=${transport_prf}</arg>
</arguments>
<status status="PASS" endtime="20190108 00:23:38.346" starttime="20190108 00:23:38.345"></status>
</kw>
<kw name="Log" library="BuiltIn">
<arguments>
<arg>remove transport-service-profile from interface</arg>
</arguments>
<msg timestamp="20190108 00:23:38.348" level="INFO">remove transport-service-profile from interface</msg>
<status status="PASS" endtime="20190108 00:23:38.348" starttime="20190108 00:23:38.347"></status>
</kw>
<kw type="for" name="${port_key} IN [ @{service_model.${service_point}.member} ]">
<kw type="foritem" name="${port_key} = interface1">
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${service_model.${service_point}.member.${port_key}}</arg>
</arguments>
<assign>
<var>${port}</var>
</assign>
<msg timestamp="20190108 00:23:38.365" level="INFO">${port} = 1/2/x12</msg>
<status status="PASS" endtime="20190108 00:23:38.365" starttime="20190108 00:23:38.364"></status>
</kw>
<kw name="Log" library="BuiltIn">
<arguments>
<arg>****** deprovision port ${port} transport-service-profile******</arg>
</arguments>
<msg timestamp="20190108 00:23:38.366" level="INFO">****** deprovision port 1/2/x12 transport-service-profile******</msg>
<status status="PASS" endtime="20190108 00:23:38.367" starttime="20190108 00:23:38.366"></status>
</kw>
<kw name="Cli" library="caferobot.command.adapter.CliAdapter">
<doc>Execute command on the specific connection and get the output of it</doc>
<arguments>
<arg>${device}</arg>
<arg>show running-config interface ethernet ${port}</arg>
</arguments>
<msg timestamp="20190108 00:23:38.378" level="INFO">send session_command, cmd=show running-config interface ethernet 1/2/x12, prompt=None, timeout=None, newline=None, retry=1, timeout_exception=1, exclude_prompt=None</msg>
<msg timestamp="20190108 00:23:45.601" level="INFO">session_command result=show running-config interface ethernet 1/2/x12
interface ethernet 1/2/x12
 no shutdown
 role                      inni
 transport-service-profile auto_TransVlan_777
!
NGPON2X4</msg>
<status status="PASS" endtime="20190108 00:23:45.602" starttime="20190108 00:23:38.367"></status>
</kw>
<kw name="dprov_interface_ethernet" library="keyword_command">
<tags>
<tag>@author=BlairWang</tag>
</tags>
<doc>configure on interface</doc>
<arguments>
<arg>${device}</arg>
<arg>${port}</arg>
<arg>transport-service-profile</arg>
</arguments>
<kw name="Axos Cli With Error Check" library="keyword_common">
<tags>
<tag>@author=dfarwell</tag>
</tags>
<doc>Sends a CLI command to DUT and confirms response has no errors, if there is no prompt in your topo file this may need to be adjusted</doc>
<arguments>
<arg>${device}</arg>
<arg>configure</arg>
</arguments>
<kw name="Cli" library="caferobot.command.adapter.CliAdapter">
<doc>Execute command on the specific connection and get the output of it</doc>
<arguments>
<arg>${DUT}</arg>
<arg>${CMD}</arg>
<arg>prompt=${devices.${DUT}.prompt}</arg>
<arg>timeout=${TIMEOUT}</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190108 00:23:45.615" level="INFO">send session_command, cmd=configure, prompt={'#': None}, timeout=30, newline=None, retry=1, timeout_exception=1, exclude_prompt=None</msg>
<msg timestamp="20190108 00:23:45.863" level="INFO">session_command result=configure
Enter configuration commands, one per line. End with CNTL/Z.
NGPON2X4(config)</msg>
<msg timestamp="20190108 00:23:45.864" level="INFO">${res} = configure
Enter configuration commands, one per line. End with CNTL/Z.
NGPON2X4(config)</msg>
<status status="PASS" endtime="20190108 00:23:45.864" starttime="20190108 00:23:45.611"></status>
</kw>
<kw name="Should Not Contain Any" library="BuiltIn">
<doc>Fails if ``container`` contains one or more of the ``*items``.</doc>
<arguments>
<arg>${res}</arg>
<arg>Invalid</arg>
<arg>syntax error</arg>
<arg>Aborted:</arg>
<arg>Error:</arg>
</arguments>
<status status="PASS" endtime="20190108 00:23:45.869" starttime="20190108 00:23:45.867"></status>
</kw>
<status status="PASS" endtime="20190108 00:23:45.869" starttime="20190108 00:23:45.609"></status>
</kw>
<kw name="Axos Cli With Error Check" library="keyword_common">
<tags>
<tag>@author=dfarwell</tag>
</tags>
<doc>Sends a CLI command to DUT and confirms response has no errors, if there is no prompt in your topo file this may need to be adjusted</doc>
<arguments>
<arg>${device}</arg>
<arg>interface ethernet ${interface}</arg>
</arguments>
<kw name="Cli" library="caferobot.command.adapter.CliAdapter">
<doc>Execute command on the specific connection and get the output of it</doc>
<arguments>
<arg>${DUT}</arg>
<arg>${CMD}</arg>
<arg>prompt=${devices.${DUT}.prompt}</arg>
<arg>timeout=${TIMEOUT}</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190108 00:23:45.882" level="INFO">send session_command, cmd=interface ethernet 1/2/x12, prompt={'#': None}, timeout=30, newline=None, retry=1, timeout_exception=1, exclude_prompt=None</msg>
<msg timestamp="20190108 00:23:46.144" level="INFO">session_command result=interface ethernet 1/2/x12
NGPON2X4(config-ethernet-1/2/x12)</msg>
<msg timestamp="20190108 00:23:46.145" level="INFO">${res} = interface ethernet 1/2/x12
NGPON2X4(config-ethernet-1/2/x12)</msg>
<status status="PASS" endtime="20190108 00:23:46.145" starttime="20190108 00:23:45.875"></status>
</kw>
<kw name="Should Not Contain Any" library="BuiltIn">
<doc>Fails if ``container`` contains one or more of the ``*items``.</doc>
<arguments>
<arg>${res}</arg>
<arg>Invalid</arg>
<arg>syntax error</arg>
<arg>Aborted:</arg>
<arg>Error:</arg>
</arguments>
<status status="PASS" endtime="20190108 00:23:46.148" starttime="20190108 00:23:46.147"></status>
</kw>
<status status="PASS" endtime="20190108 00:23:46.149" starttime="20190108 00:23:45.873"></status>
</kw>
<kw type="for" name="${element} IN [ @{list_cmd} ]">
<kw type="foritem" name="${element} = transport-service-profile">
<kw name="Axos Cli With Error Check" library="keyword_common">
<tags>
<tag>@author=dfarwell</tag>
</tags>
<doc>Sends a CLI command to DUT and confirms response has no errors, if there is no prompt in your topo file this may need to be adjusted</doc>
<arguments>
<arg>${device}</arg>
<arg>no ${element}</arg>
</arguments>
<kw name="Cli" library="caferobot.command.adapter.CliAdapter">
<doc>Execute command on the specific connection and get the output of it</doc>
<arguments>
<arg>${DUT}</arg>
<arg>${CMD}</arg>
<arg>prompt=${devices.${DUT}.prompt}</arg>
<arg>timeout=${TIMEOUT}</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190108 00:23:46.164" level="INFO">send session_command, cmd=no transport-service-profile, prompt={'#': None}, timeout=30, newline=None, retry=1, timeout_exception=1, exclude_prompt=None</msg>
<msg timestamp="20190108 00:23:46.594" level="INFO">session_command result=no transport-service-profile
NGPON2X4(config-ethernet-1/2/x12)</msg>
<msg timestamp="20190108 00:23:46.595" level="INFO">${res} = no transport-service-profile
NGPON2X4(config-ethernet-1/2/x12)</msg>
<status status="PASS" endtime="20190108 00:23:46.596" starttime="20190108 00:23:46.158"></status>
</kw>
<kw name="Should Not Contain Any" library="BuiltIn">
<doc>Fails if ``container`` contains one or more of the ``*items``.</doc>
<arguments>
<arg>${res}</arg>
<arg>Invalid</arg>
<arg>syntax error</arg>
<arg>Aborted:</arg>
<arg>Error:</arg>
</arguments>
<status status="PASS" endtime="20190108 00:23:46.599" starttime="20190108 00:23:46.598"></status>
</kw>
<status status="PASS" endtime="20190108 00:23:46.599" starttime="20190108 00:23:46.156"></status>
</kw>
<status status="PASS" endtime="20190108 00:23:46.601" starttime="20190108 00:23:46.155"></status>
</kw>
<status status="PASS" endtime="20190108 00:23:46.603" starttime="20190108 00:23:46.154"></status>
</kw>
<kw type="teardown" name="Axos Cli With Error Check" library="keyword_common">
<tags>
<tag>@author=dfarwell</tag>
</tags>
<doc>Sends a CLI command to DUT and confirms response has no errors, if there is no prompt in your topo file this may need to be adjusted</doc>
<arguments>
<arg>${device}</arg>
<arg>end</arg>
</arguments>
<kw name="Cli" library="caferobot.command.adapter.CliAdapter">
<doc>Execute command on the specific connection and get the output of it</doc>
<arguments>
<arg>${DUT}</arg>
<arg>${CMD}</arg>
<arg>prompt=${devices.${DUT}.prompt}</arg>
<arg>timeout=${TIMEOUT}</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190108 00:23:46.610" level="INFO">send session_command, cmd=end, prompt={'#': None}, timeout=30, newline=None, retry=1, timeout_exception=1, exclude_prompt=None</msg>
<msg timestamp="20190108 00:23:46.910" level="INFO">session_command result=end
NGPON2X4</msg>
<msg timestamp="20190108 00:23:46.911" level="INFO">${res} = end
NGPON2X4</msg>
<status status="PASS" endtime="20190108 00:23:46.911" starttime="20190108 00:23:46.607"></status>
</kw>
<kw name="Should Not Contain Any" library="BuiltIn">
<doc>Fails if ``container`` contains one or more of the ``*items``.</doc>
<arguments>
<arg>${res}</arg>
<arg>Invalid</arg>
<arg>syntax error</arg>
<arg>Aborted:</arg>
<arg>Error:</arg>
</arguments>
<status status="PASS" endtime="20190108 00:23:46.916" starttime="20190108 00:23:46.914"></status>
</kw>
<status status="PASS" endtime="20190108 00:23:46.916" starttime="20190108 00:23:46.605"></status>
</kw>
<status status="PASS" endtime="20190108 00:23:46.919" starttime="20190108 00:23:45.606"></status>
</kw>
<status status="PASS" endtime="20190108 00:23:46.921" starttime="20190108 00:23:38.363"></status>
</kw>
<status status="PASS" endtime="20190108 00:23:46.923" starttime="20190108 00:23:38.348"></status>
</kw>
<status status="PASS" endtime="20190108 00:23:46.924" starttime="20190108 00:23:38.343"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>delete_config_object</arg>
<arg>${device}</arg>
<arg>transport-service-profile</arg>
<arg>${transport_prf}</arg>
</arguments>
<kw name="delete_config_object" library="keyword_command">
<tags>
<tag>@author=BlairWang</tag>
</tags>
<doc>Delete service profile in config view</doc>
<arguments>
<arg>${device}</arg>
<arg>transport-service-profile</arg>
<arg>${transport_prf}</arg>
</arguments>
<kw name="Cli" library="caferobot.command.adapter.CliAdapter">
<doc>Execute command on the specific connection and get the output of it</doc>
<arguments>
<arg>${device}</arg>
<arg>configure</arg>
</arguments>
<msg timestamp="20190108 00:23:46.945" level="INFO">send session_command, cmd=configure, prompt=None, timeout=None, newline=None, retry=1, timeout_exception=1, exclude_prompt=None</msg>
<msg timestamp="20190108 00:23:47.182" level="INFO">session_command result=configure
Enter configuration commands, one per line. End with CNTL/Z.
NGPON2X4(config)</msg>
<status status="PASS" endtime="20190108 00:23:47.182" starttime="20190108 00:23:46.928"></status>
</kw>
<kw name="Axos Cli With Error Check" library="keyword_common">
<tags>
<tag>@author=dfarwell</tag>
</tags>
<doc>Sends a CLI command to DUT and confirms response has no errors, if there is no prompt in your topo file this may need to be adjusted</doc>
<arguments>
<arg>${device}</arg>
<arg>no ${obj_type} ${obj_name}</arg>
</arguments>
<kw name="Cli" library="caferobot.command.adapter.CliAdapter">
<doc>Execute command on the specific connection and get the output of it</doc>
<arguments>
<arg>${DUT}</arg>
<arg>${CMD}</arg>
<arg>prompt=${devices.${DUT}.prompt}</arg>
<arg>timeout=${TIMEOUT}</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190108 00:23:47.193" level="INFO">send session_command, cmd=no transport-service-profile auto_TransVlan_777, prompt={'#': None}, timeout=30, newline=None, retry=1, timeout_exception=1, exclude_prompt=None</msg>
<msg timestamp="20190108 00:23:47.853" level="INFO">session_command result=no transport-service-profile auto_TransVlan_777
Aborted: illegal reference 'interface ethernet 1/1/x1 transport-service-profile'
Error: failed to apply modifications
NGPON2X4(config)</msg>
<msg timestamp="20190108 00:23:47.853" level="INFO">${res} = no transport-service-profile auto_TransVlan_777
Aborted: illegal reference 'interface ethernet 1/1/x1 transport-service-profile'
Error: failed to apply modifications
NGPON2X4(config)</msg>
<status status="PASS" endtime="20190108 00:23:47.854" starttime="20190108 00:23:47.190"></status>
</kw>
<kw name="Should Not Contain Any" library="BuiltIn">
<doc>Fails if ``container`` contains one or more of the ``*items``.</doc>
<arguments>
<arg>${res}</arg>
<arg>Invalid</arg>
<arg>syntax error</arg>
<arg>Aborted:</arg>
<arg>Error:</arg>
</arguments>
<msg timestamp="20190108 00:23:47.857" level="FAIL">'no transport-service-profile auto_TransVlan_777
Aborted: illegal reference 'interface ethernet 1/1/x1 transport-service-profile'
Error: failed to apply modifications
NGPON2X4(config)' contains one or more of 'Invalid', 'syntax error', 'Aborted:' or 'Error:'</msg>
<msg timestamp="20190108 00:23:47.857" level="DEBUG">Traceback (most recent call last):
  None</msg>
<status status="FAIL" endtime="20190108 00:23:47.858" starttime="20190108 00:23:47.855"></status>
</kw>
<status status="FAIL" endtime="20190108 00:23:47.858" starttime="20190108 00:23:47.188"></status>
</kw>
<kw type="teardown" name="Cli" library="caferobot.command.adapter.CliAdapter">
<doc>Execute command on the specific connection and get the output of it</doc>
<arguments>
<arg>${device}</arg>
<arg>end</arg>
</arguments>
<msg timestamp="20190108 00:23:47.866" level="INFO">send session_command, cmd=end, prompt=None, timeout=None, newline=None, retry=1, timeout_exception=1, exclude_prompt=None</msg>
<msg timestamp="20190108 00:23:48.119" level="INFO">session_command result=end
NGPON2X4</msg>
<status status="PASS" endtime="20190108 00:23:48.120" starttime="20190108 00:23:47.863"></status>
</kw>
<status status="FAIL" endtime="20190108 00:23:48.122" starttime="20190108 00:23:46.927"></status>
</kw>
<status status="PASS" endtime="20190108 00:23:48.124" starttime="20190108 00:23:46.926"></status>
</kw>
<status status="PASS" endtime="20190108 00:23:48.131" starttime="20190108 00:23:38.338"></status>
</kw>
<status status="FAIL" endtime="20190108 00:23:48.133" starttime="20190108 00:22:16.499"></status>
</kw>
<status status="FAIL" endtime="20190108 00:23:48.136" starttime="20190108 00:22:16.492"></status>
</kw>
<kw name="Log" library="BuiltIn">
<arguments>
<arg>delete vlan</arg>
</arguments>
<msg timestamp="20190108 00:23:48.140" level="INFO">delete vlan</msg>
<status status="PASS" endtime="20190108 00:23:48.140" starttime="20190108 00:23:48.138"></status>
</kw>
<kw name="dprov_vlan" library="keyword_command">
<tags>
<tag>@author=AnneLi</tag>
</tags>
<doc>deprovision vlan</doc>
<arguments>
<arg>eutA</arg>
<arg>${service_vlan}</arg>
</arguments>
<kw name="Cli" library="caferobot.command.adapter.CliAdapter">
<doc>Execute command on the specific connection and get the output of it</doc>
<arguments>
<arg>${device}</arg>
<arg>configure</arg>
</arguments>
<msg timestamp="20190108 00:23:48.152" level="INFO">send session_command, cmd=configure, prompt=None, timeout=None, newline=None, retry=1, timeout_exception=1, exclude_prompt=None</msg>
<msg timestamp="20190108 00:23:48.450" level="INFO">session_command result=configure
Enter configuration commands, one per line. End with CNTL/Z.
NGPON2X4(config)</msg>
<status status="PASS" endtime="20190108 00:23:48.451" starttime="20190108 00:23:48.143"></status>
</kw>
<kw name="Cli" library="caferobot.command.adapter.CliAdapter">
<doc>Execute command on the specific connection and get the output of it</doc>
<arguments>
<arg>${device}</arg>
<arg>vlan ${vlan}</arg>
</arguments>
<msg timestamp="20190108 00:23:48.462" level="INFO">send session_command, cmd=vlan 777, prompt=None, timeout=None, newline=None, retry=1, timeout_exception=1, exclude_prompt=None</msg>
<msg timestamp="20190108 00:23:48.730" level="INFO">session_command result=vlan 777
NGPON2X4(config-vlan-777)</msg>
<status status="PASS" endtime="20190108 00:23:48.731" starttime="20190108 00:23:48.460"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${cmd_string}</var>
</assign>
<msg timestamp="20190108 00:23:48.734" level="INFO">${cmd_string} = </msg>
<status status="PASS" endtime="20190108 00:23:48.734" starttime="20190108 00:23:48.733"></status>
</kw>
<kw type="for" name="${element} IN [ @{cmd_list} ]">
<status status="PASS" endtime="20190108 00:23:48.736" starttime="20190108 00:23:48.735"></status>
</kw>
<kw type="teardown" name="Cli" library="caferobot.command.adapter.CliAdapter">
<doc>Execute command on the specific connection and get the output of it</doc>
<arguments>
<arg>${device}</arg>
<arg>end</arg>
</arguments>
<msg timestamp="20190108 00:23:48.740" level="INFO">send session_command, cmd=end, prompt=None, timeout=None, newline=None, retry=1, timeout_exception=1, exclude_prompt=None</msg>
<msg timestamp="20190108 00:23:49.001" level="INFO">session_command result=end
NGPON2X4</msg>
<status status="PASS" endtime="20190108 00:23:49.001" starttime="20190108 00:23:48.736"></status>
</kw>
<status status="PASS" endtime="20190108 00:23:49.003" starttime="20190108 00:23:48.141"></status>
</kw>
<kw name="Log" library="BuiltIn">
<arguments>
<arg>service_point deprovision</arg>
</arguments>
<msg timestamp="20190108 00:23:49.006" level="INFO">service_point deprovision</msg>
<status status="PASS" endtime="20190108 00:23:49.006" starttime="20190108 00:23:49.005"></status>
</kw>
<kw name="service_point_dprov" library="keyword_service_model">
<tags>
<tag>@author=CindyGao</tag>
</tags>
<doc>Description: deprovision for service_point</doc>
<arguments>
<arg>service_point_list1</arg>
</arguments>
<kw type="for" name="${service_point} IN [ @{service_model.${service_point_list}} ]">
<kw type="foritem" name="${service_point} = service_point1">
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${service_model.${service_point}.device}</arg>
</arguments>
<assign>
<var>${device}</var>
</assign>
<msg timestamp="20190108 00:23:49.011" level="INFO">${device} = eutA</msg>
<status status="PASS" endtime="20190108 00:23:49.011" starttime="20190108 00:23:49.010"></status>
</kw>
<kw name="Log" library="BuiltIn">
<arguments>
<arg>****** uplink service deprovision for ${device} ${service_point} ******</arg>
</arguments>
<msg timestamp="20190108 00:23:49.013" level="INFO">****** uplink service deprovision for eutA service_point1 ******</msg>
<status status="PASS" endtime="20190108 00:23:49.013" starttime="20190108 00:23:49.012"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>service_point_${service_model.${service_point}.type}_dprov</arg>
<arg>${device}</arg>
<arg>${service_point}</arg>
</arguments>
<kw name="service_point_eth_dprov" library="keyword_service_model">
<tags>
<tag>@author=CindyGao</tag>
</tags>
<doc>Description: deprovision for eth type service point (This keyword is only internal use, CANNOT be used in TCs)</doc>
<arguments>
<arg>${device}</arg>
<arg>${service_point}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<arguments>
<arg>****** [${device}] ethernet port basic deprovision for ${service_point} ******</arg>
</arguments>
<msg timestamp="20190108 00:23:49.018" level="INFO">****** [eutA] ethernet port basic deprovision for service_point1 ******</msg>
<status status="PASS" endtime="20190108 00:23:49.018" starttime="20190108 00:23:49.017"></status>
</kw>
<kw type="for" name="${port_key} IN [ @{service_model.${service_point}.member} ]">
<kw type="foritem" name="${port_key} = interface1">
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${service_model.${service_point}.member.${port_key}}</arg>
</arguments>
<assign>
<var>${port}</var>
</assign>
<msg timestamp="20190108 00:23:49.021" level="INFO">${port} = 1/1/x3</msg>
<status status="PASS" endtime="20190108 00:23:49.022" starttime="20190108 00:23:49.020"></status>
</kw>
<kw name="Log" library="BuiltIn">
<arguments>
<arg>****** provision port ${port} role and parameter ******</arg>
</arguments>
<msg timestamp="20190108 00:23:49.023" level="INFO">****** provision port 1/1/x3 role and parameter ******</msg>
<status status="PASS" endtime="20190108 00:23:49.023" starttime="20190108 00:23:49.022"></status>
</kw>
<kw name="dprov_interface_ethernet" library="keyword_command">
<tags>
<tag>@author=BlairWang</tag>
</tags>
<doc>configure on interface</doc>
<arguments>
<arg>${device}</arg>
<arg>${port}</arg>
<arg>role</arg>
</arguments>
<kw name="Axos Cli With Error Check" library="keyword_common">
<tags>
<tag>@author=dfarwell</tag>
</tags>
<doc>Sends a CLI command to DUT and confirms response has no errors, if there is no prompt in your topo file this may need to be adjusted</doc>
<arguments>
<arg>${device}</arg>
<arg>configure</arg>
</arguments>
<kw name="Cli" library="caferobot.command.adapter.CliAdapter">
<doc>Execute command on the specific connection and get the output of it</doc>
<arguments>
<arg>${DUT}</arg>
<arg>${CMD}</arg>
<arg>prompt=${devices.${DUT}.prompt}</arg>
<arg>timeout=${TIMEOUT}</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190108 00:23:49.029" level="INFO">send session_command, cmd=configure, prompt={'#': None}, timeout=30, newline=None, retry=1, timeout_exception=1, exclude_prompt=None</msg>
<msg timestamp="20190108 00:23:49.278" level="INFO">session_command result=configure
Enter configuration commands, one per line. End with CNTL/Z.
NGPON2X4(config)</msg>
<msg timestamp="20190108 00:23:49.278" level="INFO">${res} = configure
Enter configuration commands, one per line. End with CNTL/Z.
NGPON2X4(config)</msg>
<status status="PASS" endtime="20190108 00:23:49.278" starttime="20190108 00:23:49.026"></status>
</kw>
<kw name="Should Not Contain Any" library="BuiltIn">
<doc>Fails if ``container`` contains one or more of the ``*items``.</doc>
<arguments>
<arg>${res}</arg>
<arg>Invalid</arg>
<arg>syntax error</arg>
<arg>Aborted:</arg>
<arg>Error:</arg>
</arguments>
<status status="PASS" endtime="20190108 00:23:49.282" starttime="20190108 00:23:49.280"></status>
</kw>
<status status="PASS" endtime="20190108 00:23:49.282" starttime="20190108 00:23:49.025"></status>
</kw>
<kw name="Axos Cli With Error Check" library="keyword_common">
<tags>
<tag>@author=dfarwell</tag>
</tags>
<doc>Sends a CLI command to DUT and confirms response has no errors, if there is no prompt in your topo file this may need to be adjusted</doc>
<arguments>
<arg>${device}</arg>
<arg>interface ethernet ${interface}</arg>
</arguments>
<kw name="Cli" library="caferobot.command.adapter.CliAdapter">
<doc>Execute command on the specific connection and get the output of it</doc>
<arguments>
<arg>${DUT}</arg>
<arg>${CMD}</arg>
<arg>prompt=${devices.${DUT}.prompt}</arg>
<arg>timeout=${TIMEOUT}</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190108 00:23:49.299" level="INFO">send session_command, cmd=interface ethernet 1/1/x3, prompt={'#': None}, timeout=30, newline=None, retry=1, timeout_exception=1, exclude_prompt=None</msg>
<msg timestamp="20190108 00:23:49.576" level="INFO">session_command result=interface ethernet 1/1/x3
NGPON2X4(config-ethernet-1/1/x3)</msg>
<msg timestamp="20190108 00:23:49.577" level="INFO">${res} = interface ethernet 1/1/x3
NGPON2X4(config-ethernet-1/1/x3)</msg>
<status status="PASS" endtime="20190108 00:23:49.577" starttime="20190108 00:23:49.286"></status>
</kw>
<kw name="Should Not Contain Any" library="BuiltIn">
<doc>Fails if ``container`` contains one or more of the ``*items``.</doc>
<arguments>
<arg>${res}</arg>
<arg>Invalid</arg>
<arg>syntax error</arg>
<arg>Aborted:</arg>
<arg>Error:</arg>
</arguments>
<status status="PASS" endtime="20190108 00:23:49.624" starttime="20190108 00:23:49.622"></status>
</kw>
<status status="PASS" endtime="20190108 00:23:49.624" starttime="20190108 00:23:49.284"></status>
</kw>
<kw type="for" name="${element} IN [ @{list_cmd} ]">
<kw type="foritem" name="${element} = role">
<kw name="Axos Cli With Error Check" library="keyword_common">
<tags>
<tag>@author=dfarwell</tag>
</tags>
<doc>Sends a CLI command to DUT and confirms response has no errors, if there is no prompt in your topo file this may need to be adjusted</doc>
<arguments>
<arg>${device}</arg>
<arg>no ${element}</arg>
</arguments>
<kw name="Cli" library="caferobot.command.adapter.CliAdapter">
<doc>Execute command on the specific connection and get the output of it</doc>
<arguments>
<arg>${DUT}</arg>
<arg>${CMD}</arg>
<arg>prompt=${devices.${DUT}.prompt}</arg>
<arg>timeout=${TIMEOUT}</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190108 00:23:49.651" level="INFO">send session_command, cmd=no role, prompt={'#': None}, timeout=30, newline=None, retry=1, timeout_exception=1, exclude_prompt=None</msg>
<msg timestamp="20190108 00:23:50.162" level="INFO">session_command result=no role
NGPON2X4(config-ethernet-1/1/x3)</msg>
<msg timestamp="20190108 00:23:50.163" level="INFO">${res} = no role
NGPON2X4(config-ethernet-1/1/x3)</msg>
<status status="PASS" endtime="20190108 00:23:50.163" starttime="20190108 00:23:49.635"></status>
</kw>
<kw name="Should Not Contain Any" library="BuiltIn">
<doc>Fails if ``container`` contains one or more of the ``*items``.</doc>
<arguments>
<arg>${res}</arg>
<arg>Invalid</arg>
<arg>syntax error</arg>
<arg>Aborted:</arg>
<arg>Error:</arg>
</arguments>
<status status="PASS" endtime="20190108 00:23:50.166" starttime="20190108 00:23:50.165"></status>
</kw>
<status status="PASS" endtime="20190108 00:23:50.167" starttime="20190108 00:23:49.632"></status>
</kw>
<status status="PASS" endtime="20190108 00:23:50.169" starttime="20190108 00:23:49.631"></status>
</kw>
<status status="PASS" endtime="20190108 00:23:50.171" starttime="20190108 00:23:49.629"></status>
</kw>
<kw type="teardown" name="Axos Cli With Error Check" library="keyword_common">
<tags>
<tag>@author=dfarwell</tag>
</tags>
<doc>Sends a CLI command to DUT and confirms response has no errors, if there is no prompt in your topo file this may need to be adjusted</doc>
<arguments>
<arg>${device}</arg>
<arg>end</arg>
</arguments>
<kw name="Cli" library="caferobot.command.adapter.CliAdapter">
<doc>Execute command on the specific connection and get the output of it</doc>
<arguments>
<arg>${DUT}</arg>
<arg>${CMD}</arg>
<arg>prompt=${devices.${DUT}.prompt}</arg>
<arg>timeout=${TIMEOUT}</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190108 00:23:50.178" level="INFO">send session_command, cmd=end, prompt={'#': None}, timeout=30, newline=None, retry=1, timeout_exception=1, exclude_prompt=None</msg>
<msg timestamp="20190108 00:23:50.468" level="INFO">session_command result=end
NGPON2X4</msg>
<msg timestamp="20190108 00:23:50.469" level="INFO">${res} = end
NGPON2X4</msg>
<status status="PASS" endtime="20190108 00:23:50.469" starttime="20190108 00:23:50.174"></status>
</kw>
<kw name="Should Not Contain Any" library="BuiltIn">
<doc>Fails if ``container`` contains one or more of the ``*items``.</doc>
<arguments>
<arg>${res}</arg>
<arg>Invalid</arg>
<arg>syntax error</arg>
<arg>Aborted:</arg>
<arg>Error:</arg>
</arguments>
<status status="PASS" endtime="20190108 00:23:50.473" starttime="20190108 00:23:50.471"></status>
</kw>
<status status="PASS" endtime="20190108 00:23:50.474" starttime="20190108 00:23:50.172"></status>
</kw>
<status status="PASS" endtime="20190108 00:23:50.476" starttime="20190108 00:23:49.024"></status>
</kw>
<kw name="shutdown_port" library="keyword_command">
<tags>
<tag>@author=BlairWang</tag>
</tags>
<doc>Puts an interface in shutdown mode</doc>
<arguments>
<arg>${device}</arg>
<arg>ethernet</arg>
<arg>${port}</arg>
</arguments>
<kw name="Axos Cli With Error Check" library="keyword_common">
<tags>
<tag>@author=dfarwell</tag>
</tags>
<doc>Sends a CLI command to DUT and confirms response has no errors, if there is no prompt in your topo file this may need to be adjusted</doc>
<arguments>
<arg>${device}</arg>
<arg>configure</arg>
</arguments>
<kw name="Cli" library="caferobot.command.adapter.CliAdapter">
<doc>Execute command on the specific connection and get the output of it</doc>
<arguments>
<arg>${DUT}</arg>
<arg>${CMD}</arg>
<arg>prompt=${devices.${DUT}.prompt}</arg>
<arg>timeout=${TIMEOUT}</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190108 00:23:50.490" level="INFO">send session_command, cmd=configure, prompt={'#': None}, timeout=30, newline=None, retry=1, timeout_exception=1, exclude_prompt=None</msg>
<msg timestamp="20190108 00:23:50.735" level="INFO">session_command result=configure
Enter configuration commands, one per line. End with CNTL/Z.
NGPON2X4(config)</msg>
<msg timestamp="20190108 00:23:50.736" level="INFO">${res} = configure
Enter configuration commands, one per line. End with CNTL/Z.
NGPON2X4(config)</msg>
<status status="PASS" endtime="20190108 00:23:50.737" starttime="20190108 00:23:50.484"></status>
</kw>
<kw name="Should Not Contain Any" library="BuiltIn">
<doc>Fails if ``container`` contains one or more of the ``*items``.</doc>
<arguments>
<arg>${res}</arg>
<arg>Invalid</arg>
<arg>syntax error</arg>
<arg>Aborted:</arg>
<arg>Error:</arg>
</arguments>
<status status="PASS" endtime="20190108 00:23:50.748" starttime="20190108 00:23:50.745"></status>
</kw>
<status status="PASS" endtime="20190108 00:23:50.749" starttime="20190108 00:23:50.481"></status>
</kw>
<kw name="Axos Cli With Error Check" library="keyword_common">
<tags>
<tag>@author=dfarwell</tag>
</tags>
<doc>Sends a CLI command to DUT and confirms response has no errors, if there is no prompt in your topo file this may need to be adjusted</doc>
<arguments>
<arg>${device}</arg>
<arg>interface ${port-type} ${port}</arg>
</arguments>
<kw name="Cli" library="caferobot.command.adapter.CliAdapter">
<doc>Execute command on the specific connection and get the output of it</doc>
<arguments>
<arg>${DUT}</arg>
<arg>${CMD}</arg>
<arg>prompt=${devices.${DUT}.prompt}</arg>
<arg>timeout=${TIMEOUT}</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190108 00:23:50.773" level="INFO">send session_command, cmd=interface ethernet 1/1/x3, prompt={'#': None}, timeout=30, newline=None, retry=1, timeout_exception=1, exclude_prompt=None</msg>
<msg timestamp="20190108 00:23:51.055" level="INFO">session_command result=interface ethernet 1/1/x3
NGPON2X4(config-ethernet-1/1/x3)</msg>
<msg timestamp="20190108 00:23:51.057" level="INFO">${res} = interface ethernet 1/1/x3
NGPON2X4(config-ethernet-1/1/x3)</msg>
<status status="PASS" endtime="20190108 00:23:51.057" starttime="20190108 00:23:50.763"></status>
</kw>
<kw name="Should Not Contain Any" library="BuiltIn">
<doc>Fails if ``container`` contains one or more of the ``*items``.</doc>
<arguments>
<arg>${res}</arg>
<arg>Invalid</arg>
<arg>syntax error</arg>
<arg>Aborted:</arg>
<arg>Error:</arg>
</arguments>
<status status="PASS" endtime="20190108 00:23:51.066" starttime="20190108 00:23:51.064"></status>
</kw>
<status status="PASS" endtime="20190108 00:23:51.068" starttime="20190108 00:23:50.759"></status>
</kw>
<kw name="Axos Cli With Error Check" library="keyword_common">
<tags>
<tag>@author=dfarwell</tag>
</tags>
<doc>Sends a CLI command to DUT and confirms response has no errors, if there is no prompt in your topo file this may need to be adjusted</doc>
<arguments>
<arg>${device}</arg>
<arg>shutdown</arg>
</arguments>
<kw name="Cli" library="caferobot.command.adapter.CliAdapter">
<doc>Execute command on the specific connection and get the output of it</doc>
<arguments>
<arg>${DUT}</arg>
<arg>${CMD}</arg>
<arg>prompt=${devices.${DUT}.prompt}</arg>
<arg>timeout=${TIMEOUT}</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190108 00:23:51.088" level="INFO">send session_command, cmd=shutdown, prompt={'#': None}, timeout=30, newline=None, retry=1, timeout_exception=1, exclude_prompt=None</msg>
<msg timestamp="20190108 00:23:51.736" level="INFO">session_command result=shutdown
NGPON2X4(config-ethernet-1/1/x3)</msg>
<msg timestamp="20190108 00:23:51.736" level="INFO">${res} = shutdown
NGPON2X4(config-ethernet-1/1/x3)</msg>
<status status="PASS" endtime="20190108 00:23:51.737" starttime="20190108 00:23:51.075"></status>
</kw>
<kw name="Should Not Contain Any" library="BuiltIn">
<doc>Fails if ``container`` contains one or more of the ``*items``.</doc>
<arguments>
<arg>${res}</arg>
<arg>Invalid</arg>
<arg>syntax error</arg>
<arg>Aborted:</arg>
<arg>Error:</arg>
</arguments>
<status status="PASS" endtime="20190108 00:23:51.742" starttime="20190108 00:23:51.740"></status>
</kw>
<status status="PASS" endtime="20190108 00:23:51.743" starttime="20190108 00:23:51.071"></status>
</kw>
<kw type="teardown" name="Axos Cli With Error Check" library="keyword_common">
<tags>
<tag>@author=dfarwell</tag>
</tags>
<doc>Sends a CLI command to DUT and confirms response has no errors, if there is no prompt in your topo file this may need to be adjusted</doc>
<arguments>
<arg>${device}</arg>
<arg>end</arg>
</arguments>
<kw name="Cli" library="caferobot.command.adapter.CliAdapter">
<doc>Execute command on the specific connection and get the output of it</doc>
<arguments>
<arg>${DUT}</arg>
<arg>${CMD}</arg>
<arg>prompt=${devices.${DUT}.prompt}</arg>
<arg>timeout=${TIMEOUT}</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190108 00:23:51.754" level="INFO">send session_command, cmd=end, prompt={'#': None}, timeout=30, newline=None, retry=1, timeout_exception=1, exclude_prompt=None</msg>
<msg timestamp="20190108 00:23:52.043" level="INFO">session_command result=end
NGPON2X4</msg>
<msg timestamp="20190108 00:23:52.044" level="INFO">${res} = end
NGPON2X4</msg>
<status status="PASS" endtime="20190108 00:23:52.045" starttime="20190108 00:23:51.749"></status>
</kw>
<kw name="Should Not Contain Any" library="BuiltIn">
<doc>Fails if ``container`` contains one or more of the ``*items``.</doc>
<arguments>
<arg>${res}</arg>
<arg>Invalid</arg>
<arg>syntax error</arg>
<arg>Aborted:</arg>
<arg>Error:</arg>
</arguments>
<status status="PASS" endtime="20190108 00:23:52.053" starttime="20190108 00:23:52.051"></status>
</kw>
<status status="PASS" endtime="20190108 00:23:52.054" starttime="20190108 00:23:51.746"></status>
</kw>
<status status="PASS" endtime="20190108 00:23:52.058" starttime="20190108 00:23:50.480"></status>
</kw>
<status status="PASS" endtime="20190108 00:23:52.062" starttime="20190108 00:23:49.019"></status>
</kw>
<status status="PASS" endtime="20190108 00:23:52.065" starttime="20190108 00:23:49.019"></status>
</kw>
<status status="PASS" endtime="20190108 00:23:52.068" starttime="20190108 00:23:49.015"></status>
</kw>
<status status="PASS" endtime="20190108 00:23:52.070" starttime="20190108 00:23:49.014"></status>
</kw>
<status status="PASS" endtime="20190108 00:23:52.073" starttime="20190108 00:23:49.009"></status>
</kw>
<kw type="foritem" name="${service_point} = service_point2">
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${service_model.${service_point}.device}</arg>
</arguments>
<assign>
<var>${device}</var>
</assign>
<msg timestamp="20190108 00:23:52.083" level="INFO">${device} = eutA</msg>
<status status="PASS" endtime="20190108 00:23:52.083" starttime="20190108 00:23:52.080"></status>
</kw>
<kw name="Log" library="BuiltIn">
<arguments>
<arg>****** uplink service deprovision for ${device} ${service_point} ******</arg>
</arguments>
<msg timestamp="20190108 00:23:52.087" level="INFO">****** uplink service deprovision for eutA service_point2 ******</msg>
<status status="PASS" endtime="20190108 00:23:52.087" starttime="20190108 00:23:52.084"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>service_point_${service_model.${service_point}.type}_dprov</arg>
<arg>${device}</arg>
<arg>${service_point}</arg>
</arguments>
<kw name="service_point_eth_dprov" library="keyword_service_model">
<tags>
<tag>@author=CindyGao</tag>
</tags>
<doc>Description: deprovision for eth type service point (This keyword is only internal use, CANNOT be used in TCs)</doc>
<arguments>
<arg>${device}</arg>
<arg>${service_point}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<arguments>
<arg>****** [${device}] ethernet port basic deprovision for ${service_point} ******</arg>
</arguments>
<msg timestamp="20190108 00:23:52.095" level="INFO">****** [eutA] ethernet port basic deprovision for service_point2 ******</msg>
<status status="PASS" endtime="20190108 00:23:52.096" starttime="20190108 00:23:52.093"></status>
</kw>
<kw type="for" name="${port_key} IN [ @{service_model.${service_point}.member} ]">
<kw type="foritem" name="${port_key} = interface1">
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${service_model.${service_point}.member.${port_key}}</arg>
</arguments>
<assign>
<var>${port}</var>
</assign>
<msg timestamp="20190108 00:23:52.103" level="INFO">${port} = 1/1/x4</msg>
<status status="PASS" endtime="20190108 00:23:52.104" starttime="20190108 00:23:52.101"></status>
</kw>
<kw name="Log" library="BuiltIn">
<arguments>
<arg>****** provision port ${port} role and parameter ******</arg>
</arguments>
<msg timestamp="20190108 00:23:52.106" level="INFO">****** provision port 1/1/x4 role and parameter ******</msg>
<status status="PASS" endtime="20190108 00:23:52.107" starttime="20190108 00:23:52.105"></status>
</kw>
<kw name="dprov_interface_ethernet" library="keyword_command">
<tags>
<tag>@author=BlairWang</tag>
</tags>
<doc>configure on interface</doc>
<arguments>
<arg>${device}</arg>
<arg>${port}</arg>
<arg>role</arg>
</arguments>
<kw name="Axos Cli With Error Check" library="keyword_common">
<tags>
<tag>@author=dfarwell</tag>
</tags>
<doc>Sends a CLI command to DUT and confirms response has no errors, if there is no prompt in your topo file this may need to be adjusted</doc>
<arguments>
<arg>${device}</arg>
<arg>configure</arg>
</arguments>
<kw name="Cli" library="caferobot.command.adapter.CliAdapter">
<doc>Execute command on the specific connection and get the output of it</doc>
<arguments>
<arg>${DUT}</arg>
<arg>${CMD}</arg>
<arg>prompt=${devices.${DUT}.prompt}</arg>
<arg>timeout=${TIMEOUT}</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190108 00:23:52.122" level="INFO">send session_command, cmd=configure, prompt={'#': None}, timeout=30, newline=None, retry=1, timeout_exception=1, exclude_prompt=None</msg>
<msg timestamp="20190108 00:23:52.447" level="INFO">session_command result=configure
Enter configuration commands, one per line. End with CNTL/Z.
NGPON2X4(config)</msg>
<msg timestamp="20190108 00:23:52.448" level="INFO">${res} = configure
Enter configuration commands, one per line. End with CNTL/Z.
NGPON2X4(config)</msg>
<status status="PASS" endtime="20190108 00:23:52.448" starttime="20190108 00:23:52.113"></status>
</kw>
<kw name="Should Not Contain Any" library="BuiltIn">
<doc>Fails if ``container`` contains one or more of the ``*items``.</doc>
<arguments>
<arg>${res}</arg>
<arg>Invalid</arg>
<arg>syntax error</arg>
<arg>Aborted:</arg>
<arg>Error:</arg>
</arguments>
<status status="PASS" endtime="20190108 00:23:52.457" starttime="20190108 00:23:52.454"></status>
</kw>
<status status="PASS" endtime="20190108 00:23:52.458" starttime="20190108 00:23:52.111"></status>
</kw>
<kw name="Axos Cli With Error Check" library="keyword_common">
<tags>
<tag>@author=dfarwell</tag>
</tags>
<doc>Sends a CLI command to DUT and confirms response has no errors, if there is no prompt in your topo file this may need to be adjusted</doc>
<arguments>
<arg>${device}</arg>
<arg>interface ethernet ${interface}</arg>
</arguments>
<kw name="Cli" library="caferobot.command.adapter.CliAdapter">
<doc>Execute command on the specific connection and get the output of it</doc>
<arguments>
<arg>${DUT}</arg>
<arg>${CMD}</arg>
<arg>prompt=${devices.${DUT}.prompt}</arg>
<arg>timeout=${TIMEOUT}</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190108 00:23:52.473" level="INFO">send session_command, cmd=interface ethernet 1/1/x4, prompt={'#': None}, timeout=30, newline=None, retry=1, timeout_exception=1, exclude_prompt=None</msg>
<msg timestamp="20190108 00:23:52.739" level="INFO">session_command result=interface ethernet 1/1/x4
NGPON2X4(config-ethernet-1/1/x4)</msg>
<msg timestamp="20190108 00:23:52.740" level="INFO">${res} = interface ethernet 1/1/x4
NGPON2X4(config-ethernet-1/1/x4)</msg>
<status status="PASS" endtime="20190108 00:23:52.740" starttime="20190108 00:23:52.465"></status>
</kw>
<kw name="Should Not Contain Any" library="BuiltIn">
<doc>Fails if ``container`` contains one or more of the ``*items``.</doc>
<arguments>
<arg>${res}</arg>
<arg>Invalid</arg>
<arg>syntax error</arg>
<arg>Aborted:</arg>
<arg>Error:</arg>
</arguments>
<status status="PASS" endtime="20190108 00:23:52.747" starttime="20190108 00:23:52.745"></status>
</kw>
<status status="PASS" endtime="20190108 00:23:52.748" starttime="20190108 00:23:52.462"></status>
</kw>
<kw type="for" name="${element} IN [ @{list_cmd} ]">
<kw type="foritem" name="${element} = role">
<kw name="Axos Cli With Error Check" library="keyword_common">
<tags>
<tag>@author=dfarwell</tag>
</tags>
<doc>Sends a CLI command to DUT and confirms response has no errors, if there is no prompt in your topo file this may need to be adjusted</doc>
<arguments>
<arg>${device}</arg>
<arg>no ${element}</arg>
</arguments>
<kw name="Cli" library="caferobot.command.adapter.CliAdapter">
<doc>Execute command on the specific connection and get the output of it</doc>
<arguments>
<arg>${DUT}</arg>
<arg>${CMD}</arg>
<arg>prompt=${devices.${DUT}.prompt}</arg>
<arg>timeout=${TIMEOUT}</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190108 00:23:52.771" level="INFO">send session_command, cmd=no role, prompt={'#': None}, timeout=30, newline=None, retry=1, timeout_exception=1, exclude_prompt=None</msg>
<msg timestamp="20190108 00:23:53.192" level="INFO">session_command result=no role
Aborted: Semantic check failure: Can't delete service role when erps ring is configured
Error: failed to apply modifications
NGPON2X4(config-ethernet-1/1/x4)</msg>
<msg timestamp="20190108 00:23:53.193" level="INFO">${res} = no role
Aborted: Semantic check failure: Can't delete service role when erps ring is configured
Error: failed to apply modifications
NGPON2X4(config-ethernet-1/1/x4)</msg>
<status status="PASS" endtime="20190108 00:23:53.193" starttime="20190108 00:23:52.758"></status>
</kw>
<kw name="Should Not Contain Any" library="BuiltIn">
<doc>Fails if ``container`` contains one or more of the ``*items``.</doc>
<arguments>
<arg>${res}</arg>
<arg>Invalid</arg>
<arg>syntax error</arg>
<arg>Aborted:</arg>
<arg>Error:</arg>
</arguments>
<msg timestamp="20190108 00:23:53.197" level="FAIL">'no role
Aborted: Semantic check failure: Can't delete service role when erps ring is configured
Error: failed to apply modifications
NGPON2X4(config-ethernet-1/1/x4)' contains one or more of 'Invalid', 'syntax error', 'Aborted:' or 'Error:'</msg>
<msg timestamp="20190108 00:23:53.197" level="DEBUG">Traceback (most recent call last):
  None</msg>
<status status="FAIL" endtime="20190108 00:23:53.197" starttime="20190108 00:23:53.196"></status>
</kw>
<status status="FAIL" endtime="20190108 00:23:53.198" starttime="20190108 00:23:52.755"></status>
</kw>
<status status="FAIL" endtime="20190108 00:23:53.204" starttime="20190108 00:23:52.753"></status>
</kw>
<status status="FAIL" endtime="20190108 00:23:53.209" starttime="20190108 00:23:52.751"></status>
</kw>
<kw type="teardown" name="Axos Cli With Error Check" library="keyword_common">
<tags>
<tag>@author=dfarwell</tag>
</tags>
<doc>Sends a CLI command to DUT and confirms response has no errors, if there is no prompt in your topo file this may need to be adjusted</doc>
<arguments>
<arg>${device}</arg>
<arg>end</arg>
</arguments>
<kw name="Cli" library="caferobot.command.adapter.CliAdapter">
<doc>Execute command on the specific connection and get the output of it</doc>
<arguments>
<arg>${DUT}</arg>
<arg>${CMD}</arg>
<arg>prompt=${devices.${DUT}.prompt}</arg>
<arg>timeout=${TIMEOUT}</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190108 00:23:53.233" level="INFO">send session_command, cmd=end, prompt={'#': None}, timeout=30, newline=None, retry=1, timeout_exception=1, exclude_prompt=None</msg>
<msg timestamp="20190108 00:23:53.520" level="INFO">session_command result=end
NGPON2X4</msg>
<msg timestamp="20190108 00:23:53.521" level="INFO">${res} = end
NGPON2X4</msg>
<status status="PASS" endtime="20190108 00:23:53.521" starttime="20190108 00:23:53.220"></status>
</kw>
<kw name="Should Not Contain Any" library="BuiltIn">
<doc>Fails if ``container`` contains one or more of the ``*items``.</doc>
<arguments>
<arg>${res}</arg>
<arg>Invalid</arg>
<arg>syntax error</arg>
<arg>Aborted:</arg>
<arg>Error:</arg>
</arguments>
<status status="PASS" endtime="20190108 00:23:53.528" starttime="20190108 00:23:53.526"></status>
</kw>
<status status="PASS" endtime="20190108 00:23:53.529" starttime="20190108 00:23:53.217"></status>
</kw>
<status status="FAIL" endtime="20190108 00:23:53.533" starttime="20190108 00:23:52.108"></status>
</kw>
<kw name="shutdown_port" library="keyword_command">
<tags>
<tag>@author=BlairWang</tag>
</tags>
<doc>Puts an interface in shutdown mode</doc>
<arguments>
<arg>${device}</arg>
<arg>ethernet</arg>
<arg>${port}</arg>
</arguments>
<kw name="Axos Cli With Error Check" library="keyword_common">
<tags>
<tag>@author=dfarwell</tag>
</tags>
<doc>Sends a CLI command to DUT and confirms response has no errors, if there is no prompt in your topo file this may need to be adjusted</doc>
<arguments>
<arg>${device}</arg>
<arg>configure</arg>
</arguments>
<kw name="Cli" library="caferobot.command.adapter.CliAdapter">
<doc>Execute command on the specific connection and get the output of it</doc>
<arguments>
<arg>${DUT}</arg>
<arg>${CMD}</arg>
<arg>prompt=${devices.${DUT}.prompt}</arg>
<arg>timeout=${TIMEOUT}</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190108 00:23:53.566" level="INFO">send session_command, cmd=configure, prompt={'#': None}, timeout=30, newline=None, retry=1, timeout_exception=1, exclude_prompt=None</msg>
<msg timestamp="20190108 00:23:53.869" level="INFO">session_command result=configure
Enter configuration commands, one per line. End with CNTL/Z.
NGPON2X4(config)</msg>
<msg timestamp="20190108 00:23:53.870" level="INFO">${res} = configure
Enter configuration commands, one per line. End with CNTL/Z.
NGPON2X4(config)</msg>
<status status="PASS" endtime="20190108 00:23:53.870" starttime="20190108 00:23:53.542"></status>
</kw>
<kw name="Should Not Contain Any" library="BuiltIn">
<doc>Fails if ``container`` contains one or more of the ``*items``.</doc>
<arguments>
<arg>${res}</arg>
<arg>Invalid</arg>
<arg>syntax error</arg>
<arg>Aborted:</arg>
<arg>Error:</arg>
</arguments>
<status status="PASS" endtime="20190108 00:23:53.877" starttime="20190108 00:23:53.875"></status>
</kw>
<status status="PASS" endtime="20190108 00:23:53.878" starttime="20190108 00:23:53.539"></status>
</kw>
<kw name="Axos Cli With Error Check" library="keyword_common">
<tags>
<tag>@author=dfarwell</tag>
</tags>
<doc>Sends a CLI command to DUT and confirms response has no errors, if there is no prompt in your topo file this may need to be adjusted</doc>
<arguments>
<arg>${device}</arg>
<arg>interface ${port-type} ${port}</arg>
</arguments>
<kw name="Cli" library="caferobot.command.adapter.CliAdapter">
<doc>Execute command on the specific connection and get the output of it</doc>
<arguments>
<arg>${DUT}</arg>
<arg>${CMD}</arg>
<arg>prompt=${devices.${DUT}.prompt}</arg>
<arg>timeout=${TIMEOUT}</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190108 00:23:53.895" level="INFO">send session_command, cmd=interface ethernet 1/1/x4, prompt={'#': None}, timeout=30, newline=None, retry=1, timeout_exception=1, exclude_prompt=None</msg>
<msg timestamp="20190108 00:23:54.188" level="INFO">session_command result=interface ethernet 1/1/x4
NGPON2X4(config-ethernet-1/1/x4)</msg>
<msg timestamp="20190108 00:23:54.188" level="INFO">${res} = interface ethernet 1/1/x4
NGPON2X4(config-ethernet-1/1/x4)</msg>
<status status="PASS" endtime="20190108 00:23:54.189" starttime="20190108 00:23:53.887"></status>
</kw>
<kw name="Should Not Contain Any" library="BuiltIn">
<doc>Fails if ``container`` contains one or more of the ``*items``.</doc>
<arguments>
<arg>${res}</arg>
<arg>Invalid</arg>
<arg>syntax error</arg>
<arg>Aborted:</arg>
<arg>Error:</arg>
</arguments>
<status status="PASS" endtime="20190108 00:23:54.194" starttime="20190108 00:23:54.193"></status>
</kw>
<status status="PASS" endtime="20190108 00:23:54.195" starttime="20190108 00:23:53.884"></status>
</kw>
<kw name="Axos Cli With Error Check" library="keyword_common">
<tags>
<tag>@author=dfarwell</tag>
</tags>
<doc>Sends a CLI command to DUT and confirms response has no errors, if there is no prompt in your topo file this may need to be adjusted</doc>
<arguments>
<arg>${device}</arg>
<arg>shutdown</arg>
</arguments>
<kw name="Cli" library="caferobot.command.adapter.CliAdapter">
<doc>Execute command on the specific connection and get the output of it</doc>
<arguments>
<arg>${DUT}</arg>
<arg>${CMD}</arg>
<arg>prompt=${devices.${DUT}.prompt}</arg>
<arg>timeout=${TIMEOUT}</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190108 00:23:54.206" level="INFO">send session_command, cmd=shutdown, prompt={'#': None}, timeout=30, newline=None, retry=1, timeout_exception=1, exclude_prompt=None</msg>
<msg timestamp="20190108 00:23:54.858" level="INFO">session_command result=shutdown
NGPON2X4(config-ethernet-1/1/x4)</msg>
<msg timestamp="20190108 00:23:54.859" level="INFO">${res} = shutdown
NGPON2X4(config-ethernet-1/1/x4)</msg>
<status status="PASS" endtime="20190108 00:23:54.859" starttime="20190108 00:23:54.203"></status>
</kw>
<kw name="Should Not Contain Any" library="BuiltIn">
<doc>Fails if ``container`` contains one or more of the ``*items``.</doc>
<arguments>
<arg>${res}</arg>
<arg>Invalid</arg>
<arg>syntax error</arg>
<arg>Aborted:</arg>
<arg>Error:</arg>
</arguments>
<status status="PASS" endtime="20190108 00:23:54.862" starttime="20190108 00:23:54.861"></status>
</kw>
<status status="PASS" endtime="20190108 00:23:54.863" starttime="20190108 00:23:54.201"></status>
</kw>
<kw type="teardown" name="Axos Cli With Error Check" library="keyword_common">
<tags>
<tag>@author=dfarwell</tag>
</tags>
<doc>Sends a CLI command to DUT and confirms response has no errors, if there is no prompt in your topo file this may need to be adjusted</doc>
<arguments>
<arg>${device}</arg>
<arg>end</arg>
</arguments>
<kw name="Cli" library="caferobot.command.adapter.CliAdapter">
<doc>Execute command on the specific connection and get the output of it</doc>
<arguments>
<arg>${DUT}</arg>
<arg>${CMD}</arg>
<arg>prompt=${devices.${DUT}.prompt}</arg>
<arg>timeout=${TIMEOUT}</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190108 00:23:54.881" level="INFO">send session_command, cmd=end, prompt={'#': None}, timeout=30, newline=None, retry=1, timeout_exception=1, exclude_prompt=None</msg>
<msg timestamp="20190108 00:23:55.184" level="INFO">session_command result=end
NGPON2X4</msg>
<msg timestamp="20190108 00:23:55.185" level="INFO">${res} = end
NGPON2X4</msg>
<status status="PASS" endtime="20190108 00:23:55.185" starttime="20190108 00:23:54.868"></status>
</kw>
<kw name="Should Not Contain Any" library="BuiltIn">
<doc>Fails if ``container`` contains one or more of the ``*items``.</doc>
<arguments>
<arg>${res}</arg>
<arg>Invalid</arg>
<arg>syntax error</arg>
<arg>Aborted:</arg>
<arg>Error:</arg>
</arguments>
<status status="PASS" endtime="20190108 00:23:55.190" starttime="20190108 00:23:55.189"></status>
</kw>
<status status="PASS" endtime="20190108 00:23:55.191" starttime="20190108 00:23:54.866"></status>
</kw>
<status status="PASS" endtime="20190108 00:23:55.192" starttime="20190108 00:23:53.536"></status>
</kw>
<status status="FAIL" endtime="20190108 00:23:55.194" starttime="20190108 00:23:52.099"></status>
</kw>
<status status="FAIL" endtime="20190108 00:23:55.195" starttime="20190108 00:23:52.096"></status>
</kw>
<status status="FAIL" endtime="20190108 00:23:55.197" starttime="20190108 00:23:52.091"></status>
</kw>
<status status="FAIL" endtime="20190108 00:23:55.199" starttime="20190108 00:23:52.089"></status>
</kw>
<status status="FAIL" endtime="20190108 00:23:55.200" starttime="20190108 00:23:52.078"></status>
</kw>
<kw type="foritem" name="${service_point} = service_point3">
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${service_model.${service_point}.device}</arg>
</arguments>
<assign>
<var>${device}</var>
</assign>
<msg timestamp="20190108 00:23:55.206" level="INFO">${device} = eutA</msg>
<status status="PASS" endtime="20190108 00:23:55.207" starttime="20190108 00:23:55.205"></status>
</kw>
<kw name="Log" library="BuiltIn">
<arguments>
<arg>****** uplink service deprovision for ${device} ${service_point} ******</arg>
</arguments>
<msg timestamp="20190108 00:23:55.209" level="INFO">****** uplink service deprovision for eutA service_point3 ******</msg>
<status status="PASS" endtime="20190108 00:23:55.209" starttime="20190108 00:23:55.207"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>service_point_${service_model.${service_point}.type}_dprov</arg>
<arg>${device}</arg>
<arg>${service_point}</arg>
</arguments>
<kw name="service_point_eth_dprov" library="keyword_service_model">
<tags>
<tag>@author=CindyGao</tag>
</tags>
<doc>Description: deprovision for eth type service point (This keyword is only internal use, CANNOT be used in TCs)</doc>
<arguments>
<arg>${device}</arg>
<arg>${service_point}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<arguments>
<arg>****** [${device}] ethernet port basic deprovision for ${service_point} ******</arg>
</arguments>
<msg timestamp="20190108 00:23:55.214" level="INFO">****** [eutA] ethernet port basic deprovision for service_point3 ******</msg>
<status status="PASS" endtime="20190108 00:23:55.215" starttime="20190108 00:23:55.213"></status>
</kw>
<kw type="for" name="${port_key} IN [ @{service_model.${service_point}.member} ]">
<kw type="foritem" name="${port_key} = interface1">
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${service_model.${service_point}.member.${port_key}}</arg>
</arguments>
<assign>
<var>${port}</var>
</assign>
<msg timestamp="20190108 00:23:55.218" level="INFO">${port} = 1/2/x11</msg>
<status status="PASS" endtime="20190108 00:23:55.218" starttime="20190108 00:23:55.217"></status>
</kw>
<kw name="Log" library="BuiltIn">
<arguments>
<arg>****** provision port ${port} role and parameter ******</arg>
</arguments>
<msg timestamp="20190108 00:23:55.220" level="INFO">****** provision port 1/2/x11 role and parameter ******</msg>
<status status="PASS" endtime="20190108 00:23:55.220" starttime="20190108 00:23:55.219"></status>
</kw>
<kw name="dprov_interface_ethernet" library="keyword_command">
<tags>
<tag>@author=BlairWang</tag>
</tags>
<doc>configure on interface</doc>
<arguments>
<arg>${device}</arg>
<arg>${port}</arg>
<arg>role</arg>
</arguments>
<kw name="Axos Cli With Error Check" library="keyword_common">
<tags>
<tag>@author=dfarwell</tag>
</tags>
<doc>Sends a CLI command to DUT and confirms response has no errors, if there is no prompt in your topo file this may need to be adjusted</doc>
<arguments>
<arg>${device}</arg>
<arg>configure</arg>
</arguments>
<kw name="Cli" library="caferobot.command.adapter.CliAdapter">
<doc>Execute command on the specific connection and get the output of it</doc>
<arguments>
<arg>${DUT}</arg>
<arg>${CMD}</arg>
<arg>prompt=${devices.${DUT}.prompt}</arg>
<arg>timeout=${TIMEOUT}</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190108 00:23:55.226" level="INFO">send session_command, cmd=configure, prompt={'#': None}, timeout=30, newline=None, retry=1, timeout_exception=1, exclude_prompt=None</msg>
<msg timestamp="20190108 00:23:55.516" level="INFO">session_command result=configure
Enter configuration commands, one per line. End with CNTL/Z.
NGPON2X4(config)</msg>
<msg timestamp="20190108 00:23:55.517" level="INFO">${res} = configure
Enter configuration commands, one per line. End with CNTL/Z.
NGPON2X4(config)</msg>
<status status="PASS" endtime="20190108 00:23:55.517" starttime="20190108 00:23:55.223"></status>
</kw>
<kw name="Should Not Contain Any" library="BuiltIn">
<doc>Fails if ``container`` contains one or more of the ``*items``.</doc>
<arguments>
<arg>${res}</arg>
<arg>Invalid</arg>
<arg>syntax error</arg>
<arg>Aborted:</arg>
<arg>Error:</arg>
</arguments>
<status status="PASS" endtime="20190108 00:23:55.521" starttime="20190108 00:23:55.520"></status>
</kw>
<status status="PASS" endtime="20190108 00:23:55.522" starttime="20190108 00:23:55.222"></status>
</kw>
<kw name="Axos Cli With Error Check" library="keyword_common">
<tags>
<tag>@author=dfarwell</tag>
</tags>
<doc>Sends a CLI command to DUT and confirms response has no errors, if there is no prompt in your topo file this may need to be adjusted</doc>
<arguments>
<arg>${device}</arg>
<arg>interface ethernet ${interface}</arg>
</arguments>
<kw name="Cli" library="caferobot.command.adapter.CliAdapter">
<doc>Execute command on the specific connection and get the output of it</doc>
<arguments>
<arg>${DUT}</arg>
<arg>${CMD}</arg>
<arg>prompt=${devices.${DUT}.prompt}</arg>
<arg>timeout=${TIMEOUT}</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190108 00:23:55.537" level="INFO">send session_command, cmd=interface ethernet 1/2/x11, prompt={'#': None}, timeout=30, newline=None, retry=1, timeout_exception=1, exclude_prompt=None</msg>
<msg timestamp="20190108 00:23:55.775" level="INFO">session_command result=interface ethernet 1/2/x11
NGPON2X4(config-ethernet-1/2/x11)</msg>
<msg timestamp="20190108 00:23:55.776" level="INFO">${res} = interface ethernet 1/2/x11
NGPON2X4(config-ethernet-1/2/x11)</msg>
<status status="PASS" endtime="20190108 00:23:55.776" starttime="20190108 00:23:55.528"></status>
</kw>
<kw name="Should Not Contain Any" library="BuiltIn">
<doc>Fails if ``container`` contains one or more of the ``*items``.</doc>
<arguments>
<arg>${res}</arg>
<arg>Invalid</arg>
<arg>syntax error</arg>
<arg>Aborted:</arg>
<arg>Error:</arg>
</arguments>
<status status="PASS" endtime="20190108 00:23:55.781" starttime="20190108 00:23:55.780"></status>
</kw>
<status status="PASS" endtime="20190108 00:23:55.782" starttime="20190108 00:23:55.526"></status>
</kw>
<kw type="for" name="${element} IN [ @{list_cmd} ]">
<kw type="foritem" name="${element} = role">
<kw name="Axos Cli With Error Check" library="keyword_common">
<tags>
<tag>@author=dfarwell</tag>
</tags>
<doc>Sends a CLI command to DUT and confirms response has no errors, if there is no prompt in your topo file this may need to be adjusted</doc>
<arguments>
<arg>${device}</arg>
<arg>no ${element}</arg>
</arguments>
<kw name="Cli" library="caferobot.command.adapter.CliAdapter">
<doc>Execute command on the specific connection and get the output of it</doc>
<arguments>
<arg>${DUT}</arg>
<arg>${CMD}</arg>
<arg>prompt=${devices.${DUT}.prompt}</arg>
<arg>timeout=${TIMEOUT}</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190108 00:23:55.799" level="INFO">send session_command, cmd=no role, prompt={'#': None}, timeout=30, newline=None, retry=1, timeout_exception=1, exclude_prompt=None</msg>
<msg timestamp="20190108 00:23:56.425" level="INFO">session_command result=no role
NGPON2X4(config-ethernet-1/2/x11)</msg>
<msg timestamp="20190108 00:23:56.426" level="INFO">${res} = no role
NGPON2X4(config-ethernet-1/2/x11)</msg>
<status status="PASS" endtime="20190108 00:23:56.426" starttime="20190108 00:23:55.792"></status>
</kw>
<kw name="Should Not Contain Any" library="BuiltIn">
<doc>Fails if ``container`` contains one or more of the ``*items``.</doc>
<arguments>
<arg>${res}</arg>
<arg>Invalid</arg>
<arg>syntax error</arg>
<arg>Aborted:</arg>
<arg>Error:</arg>
</arguments>
<status status="PASS" endtime="20190108 00:23:56.431" starttime="20190108 00:23:56.430"></status>
</kw>
<status status="PASS" endtime="20190108 00:23:56.432" starttime="20190108 00:23:55.790"></status>
</kw>
<status status="PASS" endtime="20190108 00:23:56.438" starttime="20190108 00:23:55.789"></status>
</kw>
<status status="PASS" endtime="20190108 00:23:56.443" starttime="20190108 00:23:55.787"></status>
</kw>
<kw type="teardown" name="Axos Cli With Error Check" library="keyword_common">
<tags>
<tag>@author=dfarwell</tag>
</tags>
<doc>Sends a CLI command to DUT and confirms response has no errors, if there is no prompt in your topo file this may need to be adjusted</doc>
<arguments>
<arg>${device}</arg>
<arg>end</arg>
</arguments>
<kw name="Cli" library="caferobot.command.adapter.CliAdapter">
<doc>Execute command on the specific connection and get the output of it</doc>
<arguments>
<arg>${DUT}</arg>
<arg>${CMD}</arg>
<arg>prompt=${devices.${DUT}.prompt}</arg>
<arg>timeout=${TIMEOUT}</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190108 00:23:56.455" level="INFO">send session_command, cmd=end, prompt={'#': None}, timeout=30, newline=None, retry=1, timeout_exception=1, exclude_prompt=None</msg>
<msg timestamp="20190108 00:23:56.735" level="INFO">session_command result=end
NGPON2X4</msg>
<msg timestamp="20190108 00:23:56.736" level="INFO">${res} = end
NGPON2X4</msg>
<status status="PASS" endtime="20190108 00:23:56.736" starttime="20190108 00:23:56.449"></status>
</kw>
<kw name="Should Not Contain Any" library="BuiltIn">
<doc>Fails if ``container`` contains one or more of the ``*items``.</doc>
<arguments>
<arg>${res}</arg>
<arg>Invalid</arg>
<arg>syntax error</arg>
<arg>Aborted:</arg>
<arg>Error:</arg>
</arguments>
<status status="PASS" endtime="20190108 00:23:56.740" starttime="20190108 00:23:56.738"></status>
</kw>
<status status="PASS" endtime="20190108 00:23:56.740" starttime="20190108 00:23:56.447"></status>
</kw>
<status status="PASS" endtime="20190108 00:23:56.743" starttime="20190108 00:23:55.220"></status>
</kw>
<kw name="shutdown_port" library="keyword_command">
<tags>
<tag>@author=BlairWang</tag>
</tags>
<doc>Puts an interface in shutdown mode</doc>
<arguments>
<arg>${device}</arg>
<arg>ethernet</arg>
<arg>${port}</arg>
</arguments>
<kw name="Axos Cli With Error Check" library="keyword_common">
<tags>
<tag>@author=dfarwell</tag>
</tags>
<doc>Sends a CLI command to DUT and confirms response has no errors, if there is no prompt in your topo file this may need to be adjusted</doc>
<arguments>
<arg>${device}</arg>
<arg>configure</arg>
</arguments>
<kw name="Cli" library="caferobot.command.adapter.CliAdapter">
<doc>Execute command on the specific connection and get the output of it</doc>
<arguments>
<arg>${DUT}</arg>
<arg>${CMD}</arg>
<arg>prompt=${devices.${DUT}.prompt}</arg>
<arg>timeout=${TIMEOUT}</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190108 00:23:56.752" level="INFO">send session_command, cmd=configure, prompt={'#': None}, timeout=30, newline=None, retry=1, timeout_exception=1, exclude_prompt=None</msg>
<msg timestamp="20190108 00:23:57.043" level="INFO">session_command result=configure
Enter configuration commands, one per line. End with CNTL/Z.
NGPON2X4(config)</msg>
<msg timestamp="20190108 00:23:57.043" level="INFO">${res} = configure
Enter configuration commands, one per line. End with CNTL/Z.
NGPON2X4(config)</msg>
<status status="PASS" endtime="20190108 00:23:57.043" starttime="20190108 00:23:56.748"></status>
</kw>
<kw name="Should Not Contain Any" library="BuiltIn">
<doc>Fails if ``container`` contains one or more of the ``*items``.</doc>
<arguments>
<arg>${res}</arg>
<arg>Invalid</arg>
<arg>syntax error</arg>
<arg>Aborted:</arg>
<arg>Error:</arg>
</arguments>
<status status="PASS" endtime="20190108 00:23:57.047" starttime="20190108 00:23:57.046"></status>
</kw>
<status status="PASS" endtime="20190108 00:23:57.048" starttime="20190108 00:23:56.746"></status>
</kw>
<kw name="Axos Cli With Error Check" library="keyword_common">
<tags>
<tag>@author=dfarwell</tag>
</tags>
<doc>Sends a CLI command to DUT and confirms response has no errors, if there is no prompt in your topo file this may need to be adjusted</doc>
<arguments>
<arg>${device}</arg>
<arg>interface ${port-type} ${port}</arg>
</arguments>
<kw name="Cli" library="caferobot.command.adapter.CliAdapter">
<doc>Execute command on the specific connection and get the output of it</doc>
<arguments>
<arg>${DUT}</arg>
<arg>${CMD}</arg>
<arg>prompt=${devices.${DUT}.prompt}</arg>
<arg>timeout=${TIMEOUT}</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190108 00:23:57.054" level="INFO">send session_command, cmd=interface ethernet 1/2/x11, prompt={'#': None}, timeout=30, newline=None, retry=1, timeout_exception=1, exclude_prompt=None</msg>
<msg timestamp="20190108 00:23:57.304" level="INFO">session_command result=interface ethernet 1/2/x11
NGPON2X4(config-ethernet-1/2/x11)</msg>
<msg timestamp="20190108 00:23:57.305" level="INFO">${res} = interface ethernet 1/2/x11
NGPON2X4(config-ethernet-1/2/x11)</msg>
<status status="PASS" endtime="20190108 00:23:57.306" starttime="20190108 00:23:57.051"></status>
</kw>
<kw name="Should Not Contain Any" library="BuiltIn">
<doc>Fails if ``container`` contains one or more of the ``*items``.</doc>
<arguments>
<arg>${res}</arg>
<arg>Invalid</arg>
<arg>syntax error</arg>
<arg>Aborted:</arg>
<arg>Error:</arg>
</arguments>
<status status="PASS" endtime="20190108 00:23:57.312" starttime="20190108 00:23:57.310"></status>
</kw>
<status status="PASS" endtime="20190108 00:23:57.313" starttime="20190108 00:23:57.049"></status>
</kw>
<kw name="Axos Cli With Error Check" library="keyword_common">
<tags>
<tag>@author=dfarwell</tag>
</tags>
<doc>Sends a CLI command to DUT and confirms response has no errors, if there is no prompt in your topo file this may need to be adjusted</doc>
<arguments>
<arg>${device}</arg>
<arg>shutdown</arg>
</arguments>
<kw name="Cli" library="caferobot.command.adapter.CliAdapter">
<doc>Execute command on the specific connection and get the output of it</doc>
<arguments>
<arg>${DUT}</arg>
<arg>${CMD}</arg>
<arg>prompt=${devices.${DUT}.prompt}</arg>
<arg>timeout=${TIMEOUT}</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190108 00:23:57.330" level="INFO">send session_command, cmd=shutdown, prompt={'#': None}, timeout=30, newline=None, retry=1, timeout_exception=1, exclude_prompt=None</msg>
<msg timestamp="20190108 00:23:57.982" level="INFO">session_command result=shutdown
NGPON2X4(config-ethernet-1/2/x11)</msg>
<msg timestamp="20190108 00:23:57.983" level="INFO">${res} = shutdown
NGPON2X4(config-ethernet-1/2/x11)</msg>
<status status="PASS" endtime="20190108 00:23:57.983" starttime="20190108 00:23:57.320"></status>
</kw>
<kw name="Should Not Contain Any" library="BuiltIn">
<doc>Fails if ``container`` contains one or more of the ``*items``.</doc>
<arguments>
<arg>${res}</arg>
<arg>Invalid</arg>
<arg>syntax error</arg>
<arg>Aborted:</arg>
<arg>Error:</arg>
</arguments>
<status status="PASS" endtime="20190108 00:23:58.007" starttime="20190108 00:23:58.006"></status>
</kw>
<status status="PASS" endtime="20190108 00:23:58.008" starttime="20190108 00:23:57.318"></status>
</kw>
<kw type="teardown" name="Axos Cli With Error Check" library="keyword_common">
<tags>
<tag>@author=dfarwell</tag>
</tags>
<doc>Sends a CLI command to DUT and confirms response has no errors, if there is no prompt in your topo file this may need to be adjusted</doc>
<arguments>
<arg>${device}</arg>
<arg>end</arg>
</arguments>
<kw name="Cli" library="caferobot.command.adapter.CliAdapter">
<doc>Execute command on the specific connection and get the output of it</doc>
<arguments>
<arg>${DUT}</arg>
<arg>${CMD}</arg>
<arg>prompt=${devices.${DUT}.prompt}</arg>
<arg>timeout=${TIMEOUT}</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190108 00:23:58.034" level="INFO">send session_command, cmd=end, prompt={'#': None}, timeout=30, newline=None, retry=1, timeout_exception=1, exclude_prompt=None</msg>
<msg timestamp="20190108 00:23:58.297" level="INFO">session_command result=end
NGPON2X4</msg>
<msg timestamp="20190108 00:23:58.298" level="INFO">${res} = end
NGPON2X4</msg>
<status status="PASS" endtime="20190108 00:23:58.299" starttime="20190108 00:23:58.024"></status>
</kw>
<kw name="Should Not Contain Any" library="BuiltIn">
<doc>Fails if ``container`` contains one or more of the ``*items``.</doc>
<arguments>
<arg>${res}</arg>
<arg>Invalid</arg>
<arg>syntax error</arg>
<arg>Aborted:</arg>
<arg>Error:</arg>
</arguments>
<status status="PASS" endtime="20190108 00:23:58.301" starttime="20190108 00:23:58.300"></status>
</kw>
<status status="PASS" endtime="20190108 00:23:58.302" starttime="20190108 00:23:58.022"></status>
</kw>
<status status="PASS" endtime="20190108 00:23:58.311" starttime="20190108 00:23:56.745"></status>
</kw>
<status status="PASS" endtime="20190108 00:23:58.314" starttime="20190108 00:23:55.216"></status>
</kw>
<status status="PASS" endtime="20190108 00:23:58.316" starttime="20190108 00:23:55.215"></status>
</kw>
<status status="PASS" endtime="20190108 00:23:58.317" starttime="20190108 00:23:55.211"></status>
</kw>
<status status="PASS" endtime="20190108 00:23:58.318" starttime="20190108 00:23:55.210"></status>
</kw>
<status status="PASS" endtime="20190108 00:23:58.321" starttime="20190108 00:23:55.204"></status>
</kw>
<kw type="foritem" name="${service_point} = service_point4">
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${service_model.${service_point}.device}</arg>
</arguments>
<assign>
<var>${device}</var>
</assign>
<msg timestamp="20190108 00:23:58.326" level="INFO">${device} = eutA</msg>
<status status="PASS" endtime="20190108 00:23:58.327" starttime="20190108 00:23:58.325"></status>
</kw>
<kw name="Log" library="BuiltIn">
<arguments>
<arg>****** uplink service deprovision for ${device} ${service_point} ******</arg>
</arguments>
<msg timestamp="20190108 00:23:58.328" level="INFO">****** uplink service deprovision for eutA service_point4 ******</msg>
<status status="PASS" endtime="20190108 00:23:58.329" starttime="20190108 00:23:58.327"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>service_point_${service_model.${service_point}.type}_dprov</arg>
<arg>${device}</arg>
<arg>${service_point}</arg>
</arguments>
<kw name="service_point_eth_dprov" library="keyword_service_model">
<tags>
<tag>@author=CindyGao</tag>
</tags>
<doc>Description: deprovision for eth type service point (This keyword is only internal use, CANNOT be used in TCs)</doc>
<arguments>
<arg>${device}</arg>
<arg>${service_point}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<arguments>
<arg>****** [${device}] ethernet port basic deprovision for ${service_point} ******</arg>
</arguments>
<msg timestamp="20190108 00:23:58.333" level="INFO">****** [eutA] ethernet port basic deprovision for service_point4 ******</msg>
<status status="PASS" endtime="20190108 00:23:58.333" starttime="20190108 00:23:58.332"></status>
</kw>
<kw type="for" name="${port_key} IN [ @{service_model.${service_point}.member} ]">
<kw type="foritem" name="${port_key} = interface1">
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${service_model.${service_point}.member.${port_key}}</arg>
</arguments>
<assign>
<var>${port}</var>
</assign>
<msg timestamp="20190108 00:23:58.337" level="INFO">${port} = 1/2/x12</msg>
<status status="PASS" endtime="20190108 00:23:58.337" starttime="20190108 00:23:58.335"></status>
</kw>
<kw name="Log" library="BuiltIn">
<arguments>
<arg>****** provision port ${port} role and parameter ******</arg>
</arguments>
<msg timestamp="20190108 00:23:58.338" level="INFO">****** provision port 1/2/x12 role and parameter ******</msg>
<status status="PASS" endtime="20190108 00:23:58.339" starttime="20190108 00:23:58.337"></status>
</kw>
<kw name="dprov_interface_ethernet" library="keyword_command">
<tags>
<tag>@author=BlairWang</tag>
</tags>
<doc>configure on interface</doc>
<arguments>
<arg>${device}</arg>
<arg>${port}</arg>
<arg>role</arg>
</arguments>
<kw name="Axos Cli With Error Check" library="keyword_common">
<tags>
<tag>@author=dfarwell</tag>
</tags>
<doc>Sends a CLI command to DUT and confirms response has no errors, if there is no prompt in your topo file this may need to be adjusted</doc>
<arguments>
<arg>${device}</arg>
<arg>configure</arg>
</arguments>
<kw name="Cli" library="caferobot.command.adapter.CliAdapter">
<doc>Execute command on the specific connection and get the output of it</doc>
<arguments>
<arg>${DUT}</arg>
<arg>${CMD}</arg>
<arg>prompt=${devices.${DUT}.prompt}</arg>
<arg>timeout=${TIMEOUT}</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190108 00:23:58.358" level="INFO">send session_command, cmd=configure, prompt={'#': None}, timeout=30, newline=None, retry=1, timeout_exception=1, exclude_prompt=None</msg>
<msg timestamp="20190108 00:23:58.609" level="INFO">session_command result=configure
Enter configuration commands, one per line. End with CNTL/Z.
NGPON2X4(config)</msg>
<msg timestamp="20190108 00:23:58.609" level="INFO">${res} = configure
Enter configuration commands, one per line. End with CNTL/Z.
NGPON2X4(config)</msg>
<status status="PASS" endtime="20190108 00:23:58.610" starttime="20190108 00:23:58.343"></status>
</kw>
<kw name="Should Not Contain Any" library="BuiltIn">
<doc>Fails if ``container`` contains one or more of the ``*items``.</doc>
<arguments>
<arg>${res}</arg>
<arg>Invalid</arg>
<arg>syntax error</arg>
<arg>Aborted:</arg>
<arg>Error:</arg>
</arguments>
<status status="PASS" endtime="20190108 00:23:58.613" starttime="20190108 00:23:58.612"></status>
</kw>
<status status="PASS" endtime="20190108 00:23:58.614" starttime="20190108 00:23:58.341"></status>
</kw>
<kw name="Axos Cli With Error Check" library="keyword_common">
<tags>
<tag>@author=dfarwell</tag>
</tags>
<doc>Sends a CLI command to DUT and confirms response has no errors, if there is no prompt in your topo file this may need to be adjusted</doc>
<arguments>
<arg>${device}</arg>
<arg>interface ethernet ${interface}</arg>
</arguments>
<kw name="Cli" library="caferobot.command.adapter.CliAdapter">
<doc>Execute command on the specific connection and get the output of it</doc>
<arguments>
<arg>${DUT}</arg>
<arg>${CMD}</arg>
<arg>prompt=${devices.${DUT}.prompt}</arg>
<arg>timeout=${TIMEOUT}</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190108 00:23:58.622" level="INFO">send session_command, cmd=interface ethernet 1/2/x12, prompt={'#': None}, timeout=30, newline=None, retry=1, timeout_exception=1, exclude_prompt=None</msg>
<msg timestamp="20190108 00:23:58.919" level="INFO">session_command result=interface ethernet 1/2/x12
NGPON2X4(config-ethernet-1/2/x12)</msg>
<msg timestamp="20190108 00:23:58.920" level="INFO">${res} = interface ethernet 1/2/x12
NGPON2X4(config-ethernet-1/2/x12)</msg>
<status status="PASS" endtime="20190108 00:23:58.920" starttime="20190108 00:23:58.618"></status>
</kw>
<kw name="Should Not Contain Any" library="BuiltIn">
<doc>Fails if ``container`` contains one or more of the ``*items``.</doc>
<arguments>
<arg>${res}</arg>
<arg>Invalid</arg>
<arg>syntax error</arg>
<arg>Aborted:</arg>
<arg>Error:</arg>
</arguments>
<status status="PASS" endtime="20190108 00:23:58.923" starttime="20190108 00:23:58.922"></status>
</kw>
<status status="PASS" endtime="20190108 00:23:58.923" starttime="20190108 00:23:58.615"></status>
</kw>
<kw type="for" name="${element} IN [ @{list_cmd} ]">
<kw type="foritem" name="${element} = role">
<kw name="Axos Cli With Error Check" library="keyword_common">
<tags>
<tag>@author=dfarwell</tag>
</tags>
<doc>Sends a CLI command to DUT and confirms response has no errors, if there is no prompt in your topo file this may need to be adjusted</doc>
<arguments>
<arg>${device}</arg>
<arg>no ${element}</arg>
</arguments>
<kw name="Cli" library="caferobot.command.adapter.CliAdapter">
<doc>Execute command on the specific connection and get the output of it</doc>
<arguments>
<arg>${DUT}</arg>
<arg>${CMD}</arg>
<arg>prompt=${devices.${DUT}.prompt}</arg>
<arg>timeout=${TIMEOUT}</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190108 00:23:58.934" level="INFO">send session_command, cmd=no role, prompt={'#': None}, timeout=30, newline=None, retry=1, timeout_exception=1, exclude_prompt=None</msg>
<msg timestamp="20190108 00:23:59.400" level="INFO">session_command result=no role
NGPON2X4(config-ethernet-1/2/x12)</msg>
<msg timestamp="20190108 00:23:59.400" level="INFO">${res} = no role
NGPON2X4(config-ethernet-1/2/x12)</msg>
<status status="PASS" endtime="20190108 00:23:59.400" starttime="20190108 00:23:58.931"></status>
</kw>
<kw name="Should Not Contain Any" library="BuiltIn">
<doc>Fails if ``container`` contains one or more of the ``*items``.</doc>
<arguments>
<arg>${res}</arg>
<arg>Invalid</arg>
<arg>syntax error</arg>
<arg>Aborted:</arg>
<arg>Error:</arg>
</arguments>
<status status="PASS" endtime="20190108 00:23:59.403" starttime="20190108 00:23:59.402"></status>
</kw>
<status status="PASS" endtime="20190108 00:23:59.404" starttime="20190108 00:23:58.930"></status>
</kw>
<status status="PASS" endtime="20190108 00:23:59.405" starttime="20190108 00:23:58.929"></status>
</kw>
<status status="PASS" endtime="20190108 00:23:59.408" starttime="20190108 00:23:58.927"></status>
</kw>
<kw type="teardown" name="Axos Cli With Error Check" library="keyword_common">
<tags>
<tag>@author=dfarwell</tag>
</tags>
<doc>Sends a CLI command to DUT and confirms response has no errors, if there is no prompt in your topo file this may need to be adjusted</doc>
<arguments>
<arg>${device}</arg>
<arg>end</arg>
</arguments>
<kw name="Cli" library="caferobot.command.adapter.CliAdapter">
<doc>Execute command on the specific connection and get the output of it</doc>
<arguments>
<arg>${DUT}</arg>
<arg>${CMD}</arg>
<arg>prompt=${devices.${DUT}.prompt}</arg>
<arg>timeout=${TIMEOUT}</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190108 00:23:59.414" level="INFO">send session_command, cmd=end, prompt={'#': None}, timeout=30, newline=None, retry=1, timeout_exception=1, exclude_prompt=None</msg>
<msg timestamp="20190108 00:23:59.664" level="INFO">session_command result=end
NGPON2X4</msg>
<msg timestamp="20190108 00:23:59.664" level="INFO">${res} = end
NGPON2X4</msg>
<status status="PASS" endtime="20190108 00:23:59.664" starttime="20190108 00:23:59.411"></status>
</kw>
<kw name="Should Not Contain Any" library="BuiltIn">
<doc>Fails if ``container`` contains one or more of the ``*items``.</doc>
<arguments>
<arg>${res}</arg>
<arg>Invalid</arg>
<arg>syntax error</arg>
<arg>Aborted:</arg>
<arg>Error:</arg>
</arguments>
<status status="PASS" endtime="20190108 00:23:59.668" starttime="20190108 00:23:59.667"></status>
</kw>
<status status="PASS" endtime="20190108 00:23:59.668" starttime="20190108 00:23:59.409"></status>
</kw>
<status status="PASS" endtime="20190108 00:23:59.670" starttime="20190108 00:23:58.339"></status>
</kw>
<kw name="shutdown_port" library="keyword_command">
<tags>
<tag>@author=BlairWang</tag>
</tags>
<doc>Puts an interface in shutdown mode</doc>
<arguments>
<arg>${device}</arg>
<arg>ethernet</arg>
<arg>${port}</arg>
</arguments>
<kw name="Axos Cli With Error Check" library="keyword_common">
<tags>
<tag>@author=dfarwell</tag>
</tags>
<doc>Sends a CLI command to DUT and confirms response has no errors, if there is no prompt in your topo file this may need to be adjusted</doc>
<arguments>
<arg>${device}</arg>
<arg>configure</arg>
</arguments>
<kw name="Cli" library="caferobot.command.adapter.CliAdapter">
<doc>Execute command on the specific connection and get the output of it</doc>
<arguments>
<arg>${DUT}</arg>
<arg>${CMD}</arg>
<arg>prompt=${devices.${DUT}.prompt}</arg>
<arg>timeout=${TIMEOUT}</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190108 00:23:59.681" level="INFO">send session_command, cmd=configure, prompt={'#': None}, timeout=30, newline=None, retry=1, timeout_exception=1, exclude_prompt=None</msg>
<msg timestamp="20190108 00:23:59.917" level="INFO">session_command result=configure
Enter configuration commands, one per line. End with CNTL/Z.
NGPON2X4(config)</msg>
<msg timestamp="20190108 00:23:59.918" level="INFO">${res} = configure
Enter configuration commands, one per line. End with CNTL/Z.
NGPON2X4(config)</msg>
<status status="PASS" endtime="20190108 00:23:59.918" starttime="20190108 00:23:59.675"></status>
</kw>
<kw name="Should Not Contain Any" library="BuiltIn">
<doc>Fails if ``container`` contains one or more of the ``*items``.</doc>
<arguments>
<arg>${res}</arg>
<arg>Invalid</arg>
<arg>syntax error</arg>
<arg>Aborted:</arg>
<arg>Error:</arg>
</arguments>
<status status="PASS" endtime="20190108 00:23:59.920" starttime="20190108 00:23:59.919"></status>
</kw>
<status status="PASS" endtime="20190108 00:23:59.921" starttime="20190108 00:23:59.673"></status>
</kw>
<kw name="Axos Cli With Error Check" library="keyword_common">
<tags>
<tag>@author=dfarwell</tag>
</tags>
<doc>Sends a CLI command to DUT and confirms response has no errors, if there is no prompt in your topo file this may need to be adjusted</doc>
<arguments>
<arg>${device}</arg>
<arg>interface ${port-type} ${port}</arg>
</arguments>
<kw name="Cli" library="caferobot.command.adapter.CliAdapter">
<doc>Execute command on the specific connection and get the output of it</doc>
<arguments>
<arg>${DUT}</arg>
<arg>${CMD}</arg>
<arg>prompt=${devices.${DUT}.prompt}</arg>
<arg>timeout=${TIMEOUT}</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190108 00:23:59.926" level="INFO">send session_command, cmd=interface ethernet 1/2/x12, prompt={'#': None}, timeout=30, newline=None, retry=1, timeout_exception=1, exclude_prompt=None</msg>
<msg timestamp="20190108 00:24:00.159" level="INFO">session_command result=interface ethernet 1/2/x12
NGPON2X4(config-ethernet-1/2/x12)</msg>
<msg timestamp="20190108 00:24:00.159" level="INFO">${res} = interface ethernet 1/2/x12
NGPON2X4(config-ethernet-1/2/x12)</msg>
<status status="PASS" endtime="20190108 00:24:00.159" starttime="20190108 00:23:59.924"></status>
</kw>
<kw name="Should Not Contain Any" library="BuiltIn">
<doc>Fails if ``container`` contains one or more of the ``*items``.</doc>
<arguments>
<arg>${res}</arg>
<arg>Invalid</arg>
<arg>syntax error</arg>
<arg>Aborted:</arg>
<arg>Error:</arg>
</arguments>
<status status="PASS" endtime="20190108 00:24:00.168" starttime="20190108 00:24:00.167"></status>
</kw>
<status status="PASS" endtime="20190108 00:24:00.169" starttime="20190108 00:23:59.922"></status>
</kw>
<kw name="Axos Cli With Error Check" library="keyword_common">
<tags>
<tag>@author=dfarwell</tag>
</tags>
<doc>Sends a CLI command to DUT and confirms response has no errors, if there is no prompt in your topo file this may need to be adjusted</doc>
<arguments>
<arg>${device}</arg>
<arg>shutdown</arg>
</arguments>
<kw name="Cli" library="caferobot.command.adapter.CliAdapter">
<doc>Execute command on the specific connection and get the output of it</doc>
<arguments>
<arg>${DUT}</arg>
<arg>${CMD}</arg>
<arg>prompt=${devices.${DUT}.prompt}</arg>
<arg>timeout=${TIMEOUT}</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190108 00:24:00.191" level="INFO">send session_command, cmd=shutdown, prompt={'#': None}, timeout=30, newline=None, retry=1, timeout_exception=1, exclude_prompt=None</msg>
<msg timestamp="20190108 00:24:00.843" level="INFO">session_command result=shutdown
NGPON2X4(config-ethernet-1/2/x12)</msg>
<msg timestamp="20190108 00:24:00.843" level="INFO">${res} = shutdown
NGPON2X4(config-ethernet-1/2/x12)</msg>
<status status="PASS" endtime="20190108 00:24:00.843" starttime="20190108 00:24:00.181"></status>
</kw>
<kw name="Should Not Contain Any" library="BuiltIn">
<doc>Fails if ``container`` contains one or more of the ``*items``.</doc>
<arguments>
<arg>${res}</arg>
<arg>Invalid</arg>
<arg>syntax error</arg>
<arg>Aborted:</arg>
<arg>Error:</arg>
</arguments>
<status status="PASS" endtime="20190108 00:24:00.846" starttime="20190108 00:24:00.845"></status>
</kw>
<status status="PASS" endtime="20190108 00:24:00.847" starttime="20190108 00:24:00.178"></status>
</kw>
<kw type="teardown" name="Axos Cli With Error Check" library="keyword_common">
<tags>
<tag>@author=dfarwell</tag>
</tags>
<doc>Sends a CLI command to DUT and confirms response has no errors, if there is no prompt in your topo file this may need to be adjusted</doc>
<arguments>
<arg>${device}</arg>
<arg>end</arg>
</arguments>
<kw name="Cli" library="caferobot.command.adapter.CliAdapter">
<doc>Execute command on the specific connection and get the output of it</doc>
<arguments>
<arg>${DUT}</arg>
<arg>${CMD}</arg>
<arg>prompt=${devices.${DUT}.prompt}</arg>
<arg>timeout=${TIMEOUT}</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190108 00:24:00.857" level="INFO">send session_command, cmd=end, prompt={'#': None}, timeout=30, newline=None, retry=1, timeout_exception=1, exclude_prompt=None</msg>
<msg timestamp="20190108 00:24:01.117" level="INFO">session_command result=end
NGPON2X4</msg>
<msg timestamp="20190108 00:24:01.118" level="INFO">${res} = end
NGPON2X4</msg>
<status status="PASS" endtime="20190108 00:24:01.118" starttime="20190108 00:24:00.850"></status>
</kw>
<kw name="Should Not Contain Any" library="BuiltIn">
<doc>Fails if ``container`` contains one or more of the ``*items``.</doc>
<arguments>
<arg>${res}</arg>
<arg>Invalid</arg>
<arg>syntax error</arg>
<arg>Aborted:</arg>
<arg>Error:</arg>
</arguments>
<status status="PASS" endtime="20190108 00:24:01.121" starttime="20190108 00:24:01.120"></status>
</kw>
<status status="PASS" endtime="20190108 00:24:01.122" starttime="20190108 00:24:00.848"></status>
</kw>
<status status="PASS" endtime="20190108 00:24:01.123" starttime="20190108 00:23:59.672"></status>
</kw>
<status status="PASS" endtime="20190108 00:24:01.124" starttime="20190108 00:23:58.335"></status>
</kw>
<status status="PASS" endtime="20190108 00:24:01.126" starttime="20190108 00:23:58.334"></status>
</kw>
<status status="PASS" endtime="20190108 00:24:01.127" starttime="20190108 00:23:58.331"></status>
</kw>
<status status="PASS" endtime="20190108 00:24:01.128" starttime="20190108 00:23:58.329"></status>
</kw>
<status status="PASS" endtime="20190108 00:24:01.130" starttime="20190108 00:23:58.324"></status>
</kw>
<status status="FAIL" endtime="20190108 00:24:01.131" starttime="20190108 00:23:49.008"></status>
</kw>
<status status="FAIL" endtime="20190108 00:24:01.134" starttime="20190108 00:23:49.007"></status>
</kw>
<status status="FAIL" endtime="20190108 00:24:01.136" starttime="20190108 00:22:16.488">Several failures occurred:

1) 'interface ethernet 1/1/x4
Error: failed to create path - Switchover in progress. Cannot process the request
NGPON2X4(config)' contains one or more of 'Invalid', 'syntax error', 'Aborted:' or 'Error:'

2) 'no transport-service-profile
----------------------------------------------^
syntax error: incomplete path
NGPON2X4(config)' contains one or more of 'Invalid', 'syntax error', 'Aborted:' or 'Error:'

3) ShellTimeoutException

4) Several failures occurred:

1) ShellTimeoutException

    [ Message content over the limit has been removed. ]
  switch                - Switch network clock
  tcpdump               - tcpdump command
  telnet                - telnet command
  terminal              - Set terminal type
  timestamp             - Enable/disable the display of timestamp
  traceroute            - Traceroute IP address
  uninstall             - 
  unlock                - unlock a datastore
  upgrade               - Upgrade commands
  upload                - Upload files
  verify                - 
NGPON2X4' contains one or more of 'Invalid', 'syntax error', 'Aborted:' or 'Error:'

5) 'no role
Aborted: Semantic check failure: Can't delete service role when erps ring is configured
Error: failed to apply modifications
NGPON2X4(config-ethernet-1/1/x4)' contains one or more of 'Invalid', 'syntax error', 'Aborted:' or 'Error:'</status>
</kw>
<doc>Initialization file test suites
It is for putting suite level setup and teardown procedures
And setting the forced tags for all the test cases in folder and subfolder</doc>
<status status="FAIL" endtime="20190108 00:24:01.138" starttime="20190108 00:19:56.345">Suite teardown failed:
Several failures occurred:

1) 'interface ethernet 1/1/x4
Error: failed to create path - Switchover in progress. Cannot process the request
NGPON2X4(config)' contains one or more of 'Invalid', 'syntax error', 'Aborted:' or 'Error:'

2) 'no transport-service-profile
----------------------------------------------^
syntax error: incomplete path
NGPON2X4(config)' contains one or more of 'Invalid', 'syntax error', 'Aborted:' or 'Error:'

3) ShellTimeoutException

4) Several failures occurred:

1) ShellTimeoutException

    [ Message content over the limit has been removed. ]
  switch                - Switch network clock
  tcpdump               - tcpdump command
  telnet                - telnet command
  terminal              - Set terminal type
  timestamp             - Enable/disable the display of timestamp
  traceroute            - Traceroute IP address
  uninstall             - 
  unlock                - unlock a datastore
  upgrade               - Upgrade commands
  upload                - Upload files
  verify                - 
NGPON2X4' contains one or more of 'Invalid', 'syntax error', 'Aborted:' or 'Error:'

5) 'no role
Aborted: Semantic check failure: Can't delete service role when erps ring is configured
Error: failed to apply modifications
NGPON2X4(config-ethernet-1/1/x4)' contains one or more of 'Invalid', 'syntax error', 'Aborted:' or 'Error:'</status>
</suite>
<status status="FAIL" endtime="20190108 00:24:01.148" starttime="20190108 00:19:56.342"></status>
</suite>
<status status="FAIL" endtime="20190108 00:24:01.151" starttime="20190108 00:19:56.340"></status>
</suite>
<status status="FAIL" endtime="20190108 00:24:01.155" starttime="20190108 00:19:56.337"></status>
</suite>
<status status="FAIL" endtime="20190108 00:24:01.158" starttime="20190108 00:19:56.335"></status>
</suite>
<status status="FAIL" endtime="20190108 00:24:01.161" starttime="20190108 00:19:56.332"></status>
</suite>
<status status="FAIL" endtime="20190108 00:24:01.170" starttime="20190108 00:19:56.328"></status>
</suite>
<status status="FAIL" endtime="20190108 00:24:01.186" starttime="20190108 00:19:56.020"></status>
</suite>
<statistics>
<total>
<stat fail="1" pass="0">Critical Tests</stat>
<stat fail="1" pass="0">All Tests</stat>
</total>
<tag>
<stat fail="1" pass="0">@author=pzhang</stat>
<stat fail="1" pass="0">@eut=10GE-12</stat>
<stat fail="1" pass="0">@eut=GPON-8r2</stat>
<stat fail="1" pass="0">@feature=HW_Support</stat>
<stat fail="1" pass="0">@globalid=2533451</stat>
<stat fail="1" pass="0">@subfeature=MTU_size_of_9k</stat>
<stat fail="1" pass="0">@tcid=AXOS_E72_PARENT-TC-4716</stat>
<stat fail="1" pass="0">@user_interface=CLI</stat>
</tag>
<suite>
<stat fail="1" id="s1" name="AXOS" pass="0">AXOS</stat>
<stat fail="1" id="s1-s1" name="AXOS-automation" pass="0">AXOS.AXOS-automation</stat>
<stat fail="1" id="s1-s1-s1" name="Milan" pass="0">AXOS.AXOS-automation.Milan</stat>
<stat fail="1" id="s1-s1-s1-s1" name="ST Test Cases" pass="0">AXOS.AXOS-automation.Milan.ST Test Cases</stat>
<stat fail="1" id="s1-s1-s1-s1-s1" name="System" pass="0">AXOS.AXOS-automation.Milan.ST Test Cases.System</stat>
<stat fail="1" id="s1-s1-s1-s1-s1-s1" name="HW Support" pass="0">AXOS.AXOS-automation.Milan.ST Test Cases.System.HW Support</stat>
<stat fail="1" id="s1-s1-s1-s1-s1-s1-s1" name="MTU" pass="0">AXOS.AXOS-automation.Milan.ST Test Cases.System.HW Support.MTU</stat>
<stat fail="1" id="s1-s1-s1-s1-s1-s1-s1-s1" name="Testcase" pass="0">AXOS.AXOS-automation.Milan.ST Test Cases.System.HW Support.MTU.Testcase</stat>
<stat fail="1" id="s1-s1-s1-s1-s1-s1-s1-s1-s1" name="tc 9k INNI port to INNI port" pass="0">AXOS.AXOS-automation.Milan.ST Test Cases.System.HW Support.MTU.Testcase.tc 9k INNI port to INNI port</stat>
</suite>
</statistics>
<errors>
<msg timestamp="20190108 00:21:16.586" level="WARN">Multiple keywords with name 'setup' found. Please specify keyword fullname:
	cafebase.setup
	setup</msg>
<msg timestamp="20190108 00:22:05.495" level="WARN">Multiple keywords with name 'teardown' found. Please specify keyword fullname:
	cafebase.teardown
	teardown</msg>
</errors>
</robot>
