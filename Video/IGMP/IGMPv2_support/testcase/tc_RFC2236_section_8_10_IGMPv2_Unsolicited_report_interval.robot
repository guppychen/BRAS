*** Settings ***
Documentation     1	Configure a full video service on the DUT using attached template as example. If the full service isn’t configured IGMP joins/leaves won’t be generated by the DUT. STC should use IGMPv2 only for this testing.
...    2	Verify the unsolicited report interval default is 10 seconds. Generate a join on the subscriber side using STC and capture the uplink member report generated by the DUT IGMP function. A minimum of 2 membership reports should be generated at the report interval.
...    3	Modify the unsolicited report interval to 5 seconds and verify the member report is now generated at the new interval.
Resource          ./base.robot


*** Variables ***
${wait_for_unsolicit_report}    30s
${wait_for_unsolicit_report1}    15s

*** Test Cases ***
tc_RFC2236_section_8_10_IGMPv2_Unsolicited_report_interval
    [Documentation]    1	Configure a full video service on the DUT using attached template as example. If the full service isn’t configured IGMP joins/leaves won’t be generated by the DUT. STC should use IGMPv2 only for this testing.
    ...    2	Verify the unsolicited report interval default is 10 seconds. Generate a join on the subscriber side using STC and capture the uplink member report generated by the DUT IGMP function. A minimum of 2 membership reports should be generated at the report interval.
    ...    3	Modify the unsolicited report interval to 5 seconds and verify the member report is now generated at the new interval.
    [Tags]       @author=AnsonZhang     @TCID=AXOS_E72_PARENT-TC-1578    @globalid=2321652    @priority=P2    @eut=NGPON2-4    @eut=GPON-8r2
    [Setup]      case setup
    [Teardown]   case teardown
    log    STEP:1 Configure a full video service on the DUT using attached template as example. If the full service isn’t configured IGMP joins/leaves won’t be generated by the DUT. STC should use IGMPv2 only for this testing.

    log    STEP:2 Verify the unsolicited report interval default is 10 seconds. Generate a join on the subscriber side using STC and capture the uplink member report generated by the DUT IGMP function. A minimum of 2 membership reports should be generated at the report interval.
    log    start the querier
    tg control igmp querier by name    tg1    igmp_querier    start
    Wait Until Keyword Succeeds    1min    10sec    service_point_check_igmp_routers    service_point1    ${p_data_vlan}    @{p_proxy.ip}[0]
    ...    ${p_igmp_querier.ip}
    log    start to capture the igmp at client
    start_capture    tg1    service_p1
    tg control igmp    tg1    igmp_host    join
    Wait Until Keyword Succeeds    1min    3sec    subscriber_point_check_igmp_multicast_group    subscriber_point1    ${p_data_vlan}    @{p_groups_list}[0]
    sleep    ${wait_for_unsolicit_report}
    stop_capture    tg1    service_p1
    ${tg_rpt}    save_and_analyze_packet_on_port    tg1    service_p1    igmp.type==0x16
    Should Be true    ${tg_rpt}>=3
    log    STEP:3 Modify the unsolicited report interval to 5 seconds and verify the member report is now generated at the new interval.
    tg control igmp    tg1    igmp_host    leave
    Wait Until Keyword Succeeds    1min    3sec    subscriber_point_check_igmp_multicast_group    subscriber_point1    ${p_data_vlan}    @{p_groups_list}[0]    no
    prov_igmp_profile    eutA    ${p_igmp_prf}    ${p_igmp_version[0]}    unsolicited-report-interval=50

    start_capture    tg1    service_p1
    tg control igmp    tg1    igmp_host    join
    Wait Until Keyword Succeeds    1min    3sec    subscriber_point_check_igmp_multicast_group    subscriber_point1    ${p_data_vlan}    @{p_groups_list}[0]
    sleep    ${wait_for_unsolicit_report1}
    stop_capture    tg1    service_p1
    ${tg_rpt}    save_and_analyze_packet_on_port    tg1    service_p1    igmp.type==0x16
    Should Be true    ${tg_rpt}>=3

*** Keywords ***
case setup
    log    create the igmp profile
    prov_igmp_profile    eutA    ${p_igmp_prf}    ${p_igmp_version[0]}    general-query-interval=300    unsolicited-report-interval=100    robustness=3
    log    prov multicast profile
    prov_multicast_profile    eutA    ${p_mcast_prf}
    log    prov igmp profile for vlan
    igmp_prov_vlan_igmp_profile    eutA    ${p_igmp_prf}    ${p_data_vlan}
    log    config igmp proxy interface
    igmp_prov_proxy    eutA    ${p_proxy.intf_name}    ${p_proxy.ip[0]}    ${p_proxy.mask}    ${p_proxy.gw}    ${p_data_vlan}
    log    prov video service
    subscriber_point_add_svc    subscriber_point1    ${p_match_vlan}    ${p_data_vlan}    cevlan_action=remove-cevlan    mcast_profile=${p_mcast_prf}
    log    create igmp host
    create_igmp_host    tg1    igmp_host    subscriber_p1    v2    ${p_igmp_host.mac}    ${p_igmp_host.ip}
    ...    ${p_igmp_host.gateway}    ${p_match_vlan}    session=${p_igmp_group_session_num}    mc_group_start_ip=@{p_groups_list}[0]
    log    create query
    create_igmp_querier    tg1    igmp_querier    service_p1    v2    ${p_igmp_querier.mac}    ${p_igmp_querier.ip}
    ...    ${p_igmp_querier.gateway}    ${p_data_vlan}    query_interval=60

case teardown
    log    remove the service
    subscriber_point_remove_svc    subscriber_point1    ${p_match_vlan}    ${p_data_vlan}    mcast_profile=${p_mcast_prf}
    log    delete the igmp proxy
    delete_config_object    eutA    interface restricted-ip-host    ${p_proxy.intf_name}
    log    no igmp profile from vlan
    igmp_dprov_vlan_igmp_profile    eutA    ${p_igmp_prf}    ${p_data_vlan}
    log    delete mcast profile
    delete_config_object    eutA    multicast-profile    ${p_mcast_prf}
